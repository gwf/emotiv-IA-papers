402

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

Mobile Phone Sensing Systems: A Survey
Wazir Zada Khan,Yang Xiang, Member, IEEE, Mohammed Y Aalsalem, and Quratulain Arshad
Abstract—Mobile phone sensing is an emerging area of interest
for researchers as smart phones are becoming the core communication device in people’s everyday lives. Sensor enabled mobile
phones or smart phones are hovering to be at the center of a next
revolution in social networks, green applications, global environmental monitoring, personal and community healthcare, sensor
augmented gaming, virtual reality and smart transportation
systems. More and more organizations and people are discovering
how mobile phones can be used for social impact, including how
to use mobile technology for environmental protection, sensing,
and to leverage just-in-time information to make our movements
and actions more environmentally friendly. In this paper we have
described comprehensively all those systems which are using
smart phones and mobile phone sensors for humans good will
and better human phone interaction.
Index Terms—Mobile Phone Sensing, Urban Sensing, Smart
Phone Sensors.

I. I NTRODUCTION

M

OBILE phones are ubiquitous mobile devices and there
are millions of them in use around the world. Sensors
have become much more prevalent in mobile devices over
the last few years by incorporating more and more sensor
into phones. Mobile phone as a sensor serves to collect,
process and distribute data around people [1]. Todays top
end mobile phones have a number of specialized sensors
including ambient light sensor, accelerometer, digital compass,
gyroscope, GPS, proximity sensor and general purpose sensors
like microphone and camera. By affixing a sensory device
to a mobile phone, mobile sensing provides the opportunity
to track dynamic information about environmental impacts
and develop maps and understand patterns of human movement, traffic, and air pollution [2]. Researchers and engineers are making efforts in developing new more powerful
and constructive applications and systems by leveraging the
increasing sensing capabilities found in these sensors based
mobile phones. Nowadays smart phones are not only the key
computing and communication mobile device, but a rich set of
embedded sensors which collectively enable new applications
across a wide variety of domains like homecare, healthcare,
social networks, safety, environmental monitoring, ecommerce
and transportation. The areas which make use of smart phone
sensors are shown in Figure 1.
Smart Phones are becoming increasingly successful in
the area of health monitoring. The commonality of Health
monitoring systems is that they use either in-built sensors
Manuscript received 15 May 2011; revised 20 August 2011 and 24
November 2011.
W. Z. Khan, M. Y Aalsalem, and Q. Arshad are with Jazan
University,
Saudi
Arabia
(e-mail:
wazirzadakhan@yahoo.com,
aalsalem.m@jazanu.edu.sa,brightsuccess 12@yahoo.com).
Y. Xiang is with Deakin University, Australia (e-mail: yang@deakin.
edu.au).
Digital Object Identifier 10.1109/SURV.2012.031412.00077

Fig. 1.

Areas leveraging Mobile Phone Sensors

of smart phones, or a combination of biosensors and smart
phone sensors for collecting information about persons health
like blood pressure, pulse, Electrocardiogram (ECG), Electroencephalogram (EEG) etc, depending upon the system
requirements. These systems work in following way: First the
data is collected from the sensors and is transferred through
wireless transmission using Bluetooth, GPRS, GSM for further
processing. Individual mobile phones collect raw sensor data
from sensors embedded in the phone including camera, GPS,
microphone etc. The information is extracted from the sensor
data by applying machine learning and data mining techniques.
These operations are performed either directly on the phone
or in the central processing unit. After this processing, the
data is informed to a medical center or hospital. In some
systems the information is used for persuading a person to
give attention to his health. These types of systems have
proven to be effective in improving health such as encouraging
more exercise. Important examples of such health monitoring
systems include [3] [4] [5] [6] [7] [8] [9] [10]. Smart phone
sensors which provide unprecedented monitoring capabilities
are also used for traffic monitoring for example monitoring
road and traffic conditions, detecting road bumps, honks,
potholes etc. Such traffic monitoring systems include [11] [12]
[13] [14] [15]. The field of commerce also leverages the mobile phone sensors like camera, and microphone. Examples of
such systems include [16] [17] [18]. Mobile phone sensors are
also used for environmental monitoring like pollution, weather
and noise monitoring etc. Examples of such systems include
[19] [20] [21]. Smart Phones can also be used for modeling
and monitoring human behavior [22] [23] and inferring every
day human activities like brushing teeth, riding in an elevator,

c 2013 IEEE
1553-877X/13/$31.00 

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

cooking and driving etc, using supervised learning techniques.
Some mobile phone sensing systems are used for special
purposes and in these systems only mobile in-built sensors
are used, for example in case of document processing systems
only mobile in-built sensor i.e., camera is used, in case of
individual tracking only GPS is used. Examples include [24]
[25] [26].
Smart phones are also used for finding friends and social
interactions. Such mobile social networking applications
provide many attractive ways to share information and build
community awareness. Examples of such systems are [1]
[27] [28]. In case of social sensing the information is shared
among friends of the social group or community and in
personal sensing the information is shared with only the
user and not publicly shared for security purposes. As these
community sensing systems and applications collect and
combine data from millions of people, there is a serious risk
of unattended leakage of personal sensitive information e.g
users location, users personal health information, speech, or
potentially sensitive personal images and videos. Thus, people
are very conscious about privacy and security concerns in
mobile phone social networking applications. There are some
mobile social networking systems including [29] [28] [30]
which provide reasonable security and privacy.
Motivations:
The mobile phone is well on its way to becoming a
personal sensing platform in addition to a communication
device. Sensors are becoming more prevalent in mobile
devices in recent years making mobile phone a sensor
gateway for the individual. Todays main focus of researchers
is on people-centric sensing which shifts important design
challenges away from those that apply to static, specialized,
highly embedded networks. The increasing interest in people
centric sensing and the growing usage of these sensor enabled
mobile phones motivates us to do a detailed analysis and
bring to light some important existing work in this area.
Our contributions:
• The key contribution is the collection and study of
all the mobile phone sensing systems and applications,
highlighting the existing work done so far in this field
of research. We have enumerated the working and functionality of each system which make use of smart phone
sensors and are referenced in the paper.
• The novel contribution is that we have categorized all
the urban sensing systems into two broader categories,
participatory and opportunistic sensing systems both
of which are further subcategorized into three classes
namely personal, social and public sensing systems. The
area of application of each system is also identified.
• Overall maturity score of all the systems is shown in
the form of tables expressing all the technical details
regarding all the mobile phone sensing systems.
We hope that this effort will instigate further research on this
critical topic encouraging application and system designers to
develop valuable and appealing mobile phone sensing systems
and also to embed security and privacy features prior to
deploying systems.

403

The rest of the paper is organized as follows: Section II
describes Urban sensing and classification of urban sensing
systems. Section III and Section IV present a detailed view of
all the participatory and opportunistic mobile phone sensing
systems respectively. In Section V the existing work in the area
of security of mobile phone sensing is discussed. Section VI
highlights detailed discussion & research challenges. Finally
Section VII concludes the paper.
II. U RBAN SENSING
There are many elements that comprise the urban
landscape e.g. people, buildings, trees, environment, vehicles
etc. Deploying sensors for collecting data from the urban
landscape and then make decisions accordingly is called
Urban Sensing. Urban sensing is a new approach that
empowers all of us to illuminate and change the world around
us. The term urban sensing is used because almost all the
developed mobile phone sensing systems are being deployed
and used in urban areas but it does not mean that they are
restricted to urban areas only but they can also be used in
rural or any other areas where mobile phone communication
system works. Urban sensing can be categorized into two
major classes in accordance to the awareness and involvement
of people in the architecture as sensing device custodians.
1. Participatory Sensing (User is directly involved)
2. Opportunistic Sensing (User is not involved)
1.Participatory Sensing: In Participatory Sensing, the participating user is directly involved in the sensing action e.g. to
photograph certain locations or events. This approach includes
people into significant decision stages of the sensing systems,
deciding actively what application requests to accept. Through
participatory sensing, people who are carrying everyday mobile devices act as sensor nodes and form a sensor network
with other such devices. A large number of mobile phones,
PDAs, laptops and cars are equipped with sensors and GPS
receivers, which are potential candidate devices for participatory sensor nodes [31]. The collection and dissemination
of environmental sensory data by ordinary citizens is made
possible by using participatory sensing through devices such
as mobile phones [32]. It does not require any pre-installed
infrastructure.
2.Opportunistic Sensing: In opportunistic Sensing the user
is not aware of active applications. He is not involved in
making decisions instead the Mobile phone or Smart phone
itself make decisions according to the sensed and stored
data. Opportunistic sensing shifts the burden of supporting
an application from the custodian to the sensing system,
automatically determining when device can be used to meet
application requests [33]. When we consider different aspects
of a person and his/her social setting like where he is and
where he is going, what he is doing, what he is seeing, what
he eats and hears, what are his likes and dislikes, his health
related conditions etc, while developing mobile phone sensing
systems then this is called People Centric Urban Sensing. In
a people centric sensing system, the focal point of sensing are
humans instead of buildings or machines and the visualization
of sensor-based information is for the benefit of common

404

Fig. 2.

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

Classification of Urban Sensing Systems

citizens and their friends, rather than domain scientists or plant
engineers [34]. Furthermore, People Centric Urban sensing is
classified into three main groups.
1.Personal Sensing: This type of sensing focuses on personal monitoring. Personal sensing systems monitor or share
custodians personal information i.e., the information that the
custodian of the sensing device deems is sensitive. Such
systems collect custodians information about his/her daily life
patterns and physical activities, health (e.g. heart rate, blood
pressure, sugar level etc), personal and social contacts and
location etc for further processing.
2.Social Sensing: In this type of sensing information is
shared within social groups. Social sensing systems collect
and share custodians social information with his/her friends,
social groups and communities.
3.Public Sensing: In this type of sensing the data is
shared with everyone for public good. Public sensing systems
collect/sense and share data like environmental data (noise,
air pollution etc) and fine grained traffic information (free
parking slots, traffic jam information, detecting road bumps
and potholes etc) which is beneficial for all the general public.
Figure 2 gives a picture of classification of urban sensing
systems. The criteria according to which these urban mobile
phone sensing systems are classified is two fold, either the
user/custodian of the sensing device (mobile phone, PDA etc)
is participating in significant decision stages of the sensing
system or he may not be aware of active applications and
the system itself takes decisions intelligently without human
intervention.
III. PARTICIPATORY S ENSING S YSTEMS
So far, many participatory sensing systems have been developed. In this section we have categorized all of them into
Personal, Social and Public participatory sensing systems.
A. Personal Participatory Mobile Phone Sensing Systems
The details of personal participatory mobile phone sensing
systems are as follows:
1) NeuroPhone: Andrew T. Campbell et al [35] have
proposed a system called NeuroPhone, using neural signals
to control mobile phones for hands-free, silent and effortless
human-mobile interaction.

Until recently, devices for detecting neural signals have been
costly, bulky and fragile but NeuroPhone allows neural signals
to drive mobile phone applications on the iPhone using cheap
off-the-shelf wireless electroencephalography (EEG) headsets.
A brain-controlled address book dialing app is used which
works on similar principles to P300-speller brain-computer
interfaces. The phone flashes a sequence of photos of contacts
from the address book and a P300 brain potential is elicited
when the flashed photo matches the person whom the user
wishes to dial. EEG signals from the headset are transmitted
wirelessly to an iPhone, which natively runs a lightweight
classifier to discriminate P300 signals from noise. When a
persons contact photo triggers a P300, his/her phone number
is automatically dialed. The system is implemented using wink
and think modes for Dial Tim application.
For evaluation, the authors have tested the wink and think
modes in a variety of scenarios (e.g., sitting, walking) using
two different Emotiv headsets and three different subjects. The
authors have used a laptop to relay the raw EEG data to the
phone through WiFi. Upon receiving the EEG data, the phone
carries out all the relevant signal processing and classification.
The initial results are promising for a limited set of scenarios
and many challenges remain unsolved.
2) EyePhone: EyePhone [36] is the first system capable
of tracking a user’s eye and mapping its current position on
the display to a function/application on the phone using the
phone’s front-facing camera. It allows the user to activate an
application by simply blinking at the app, emulating a mouse
click. While other interfaces could be used in a hand-free
manner, such as voice recognition, the authors have focused
on exploiting the eye as a driver of the HPI. The EyePhone
algorithmic consist of four phases: The First phase is an
Eye detection phase for which a motion analysis technique
is applied which operates on consecutive frames. This phase
consists on finding the contour of the eyes. The eye pair
is identified by the left and right eye contours. The second
phase is an open eye template creation phase which creates a
template of a user’s open eye once at the beginning when
a person uses the system for the first time using the eye
detection algorithm. The template is saved in the persistent
memory of the device and fetched when EyePhone is invoked.
The third phase is an eye tracking phase which based on
template matching. The template matching function calculates
a correlation score between the open eye template, created the
first time the application is used, and a search window. The
fourth phase is a Blink detection phase in which a threshholding technique is applied for the normalized correlation
coefficient returned by the template matching function. The
authors have used four threshold values rather than using one
threshold value, in order to handle the situation that phone’s
camera is generally closer to the person’s face.
The front camera is the only requirement in EyePhone.
EyePhone is implemented on the Nokia N810 tablet and
experimental results are presented in different settings. Results
indicate that EyePhone is a promising approach to driving
mobile applications in a hand-free manner.
3) SoundSense: Hong Lu et al [37] have proposed a system
called SoundSense, a scalable framework for modeling sound
events on mobile phones. It is implemented on the Apple

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

iPhone representing the first general purpose sound sensing
system specifically designed to work on resource limited
phones. SoundSense uses a combination of supervised and
unsupervised learning techniques to classify both general
sound types (e.g., music, voice) and discover novel sound
events specific to individual users. The system runs solely on
the mobile phone with no back-end interactions.
SoundSense first senses the data through mobile phones
microphone and after that it is preprocessed for segmenting
the incoming audio streams into frames and performing frame
admission control by identifying when frames are likely to
contain the start of an acoustic event (e.g., breaking glass,
shouting) that warrants further processing. After preprocessing
course category classification is performed through feature
extraction, decision tree classification and Markov model recognizer. After this step is complete only features are retained
and the raw samples are discarded. All the audio data is
processed on the phone and raw audio is never stored. When a
new type of sound is discovered, users are given the choice to
either provide a label for the new sound or mark the new sound
rejected in which case the system does not attempt to classify
such an event in the future. The user has complete control over
how the results of classification are presented either in terms
of being visualized on the phone screen. Then further analysis
of sound events is done differentiating between human voice
and music. The SoundSense prototype implements a highlevel category classifier that differentiates music, speech, and
ambient sound; an intra-category classifier is applied to the
voice type and distinguishes male and female voices; and
finally, the unsupervised adaptive classifier uses 100 bins for
the purpose of modeling ambient sounds.
Authors have done implementation and evaluation of two
proof of concept people centric sensing applications and it
is demonstrated that SoundSense is capable of recognizing
meaningful sound events that occur in users everyday lives.
4) CAM: Tapan S. Parikh and Paul Javid [24] have presented a mobile document processing system called CAM
in which a camera phone is used as an image capture and
data entry device. This system is able to process paper forms
containing CamShell programs - embedded instructions that
are decoded from an electronic image. The authors have
combined paper, audio, numeric data entry, narrative scripted
execution and asynchronous connectivity to synthesized their
experience into a system that is well-suited for an important set of users and applications in the developing world.
Document interaction is specified using CamShell (a narrative
document-embedded programming language). For accessing
networked information services, CAM unites a user interface,
a programming language and a delivery mechanism. The CAM
client application is called the CamBrowser, and has currently
been implemented for Nokia Series 60 camera phones. CamBrowser is designed to process specially designed CamForm
documents. CAM interaction consists of two primitives. The
user can either scan codes from low-resolution images taken
by the viewfinder in real time, or click codes by taking a high
resolution image using the joystick button.
An initial evaluation of a prior version of this system is
conducted in rural Tamil Nadu. This helped in identifying the
basic usability issues, many of which have been rectified in

405

the current design. The users response to the system was very
positive.
5) AndWellness: John Hicks et al [38] have implemented a
system called AndWellness which is a personal data collection
system. It uses mobile phones to collect and analyze data from
both active, triggered user experience samples and passive logging of onboard environmental sensors. AndWellness contains
three subsystems: an application to collect data on an Android
mobile device, a server to configure studies and store collected
data, and a dashboard to display participants statistics and
data. This system prompts participants on their mobile device
to answer surveys at configured intervals, then uploading the
responses wirelessly to a central server. The responses are
parsed into a central database and can be viewed by both
the researchers and participants in real-time. The end-to-end
data collection system also contains three main components:
campaigns, sensors, and triggers. Studies can be defined as a
campaign which contains a number of surveys, data collection
types, and other parameters.
Each campaign can be assigned any number of users, who
have roles such as administrator, who can design and edit
the campaign, researcher, who can visualize all users data
and other statistics from the campaign, or participant, who
can upload data but only view their own data and statistics.
Campaigns contain surveys and other continuous data collection types or sensors. Sensors allow the researcher to collect
continuous data from a participant. Sensors can be sampled at
any resolution and provide finer grained detail than prompting
the participant for manual data entries. Triggers provide an
expressive way to prompt participants by launching surveys
based on time, location, or other contextual clues. A researcher
can attach a trigger to each survey defined in a campaign.
The AndWellness mobile application is implemented using
the standard Android development framework in the Java
programming language. The system is designed to ensure
that the software has the flexibility to meet current standards
of privacy. The privacy of participant data is important to
allow users to trust the data collection process. Several focus
groups with colleagues are organized to motivate and refine
the design of AndWellness and potential studies are also done
using AndWellness. These groups include both researchers and
potential participants drawn from the intended audience of
each study.
6) CONSORTSS: Akio Sashima et al [25] have proposed
a mobile sensing platform called CONSORTS-S, that provides context-aware services for mobile users by accessing
surrounding wireless sensor networks. This platform provides
facilities like communicating to wireless sensor networks via a
mobile sensor router attached to a users mobile phone, analyzing the sensed data derived from networks by cooperating with
sensor middleware on a remote server to capture ones contexts,
and providing context aware services for mobile users of cellular telephones. The platform is designed to process the sensed
data effectively through cooperation between a mobile phone,
a mobile sensor router, and a sensor middleware SENSORD
on a remote server. A mobile sensor router is attached to
mobile phones for communicating with surrounding wireless
sensor networks, collect and aggregate sensed data, and relay
them to the phones. Then, the phones analyze the sensed data

406

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

by cooperating with sensor middleware on remote servers,
recognize users contexts, and provide suitable services through
the mobile phones. The authors have developed the healthcare
service as a prototype application of CONSORTS-S which
is aware of users conditions such as heartbeat, posture, and
movement through monitors of physiological signals (e.g.,
electrocardiograph, thermometer, and 3-axis accelerometer)
and environmental conditions (e.g. room temperatures) by
communication with environmental sensors. It monitors users
health conditions and room temperatures using a popular 3G
phone and wireless sensors. A sensor to monitor physiological
signals must be attached to a users chest by sticking electrodes
of the sensor on tightly with a peel-off adhesive seal. Once it
is attached to a users chest, it can detect the inclination and
movement of the upper half of a users body using a 3-axis
accelerometer. On the other hand, the sensor to monitor room
temperature is set in a room. Sensed data of the device are
sent to the mobile phone through the mobile sensor router.
The mobile phone shows messages of analytic results of the
physiological signals, such as the users posture, and also
shows the users health conditions as graphs of the physiological signals, such as electrocardiography. Furthermore,
environmental information (e.g. room temperature) obtained
using the environmental sensors can be communicated with
the mobile phones.
7) SPA: Kewei Sha et al [3] have proposed a smart phone
assisted chronic illness self-management system (SPA), which
greatly aided the prevention and treatment of chronic illness.
The SPA can provide continuous monitoring on the health
condition of the system user and give valuable in-situ contextaware suggestions/feedbacks to improve the public health.
SPA system consists of three major parts, a body area sensor network to collect biomedical and environmental data,
a remote server to store and analyze data, and a group of
health care professionals to check records and give health
care suggestions. The body area sensor network includes a
smart phone, a set of biosensors and a set of environmental
sensors. A set of biosensors, such as pulse oximeter, blood
pressure meter and activity graph, are attached to participant, periodically sampling the heart rate, blood pressure
and movement respectively. In addition, environmental sensors
are used to sample sound, temperature, humidity, and light.
The communication within the body area sensor network is
via Bluetooth. The system is first deployed and then field
test is performed on a small sample of urban citizens to
ensure its acceptability and functionality. Then the validity of
the obtained data is demonstrated by sending to participants
brief survey questions via the text option on the cell phone.
After sufficient data is collected, the inside rules are mined
by cooperating with health care professionals. Finally, the
current questions assessed the participants stress, activity, and
environment.
8) BALANCE: Tamara Denning et al [4] have proposed
BALANCE (Bioengineering Approaches for Lifestyle Activity
and Nutrition Continuous Engagement), a mobile phone-based
system for long term wellness management. The BALANCE
system automatically detects the users caloric expenditure via
sensor data from a Mobile Sensing Platform unit worn on
the hip. Users manually enter information on foods eaten via

an interface on an N95 mobile phone. The MSP combines
an Intel XScale processor with 8 different sensing capabilities including 3-D accelerometer, barometric pressure, light
sensors, humidity, sound, and position using a GPS. The unit
has modest storage capacity to perform calculations in real
time. The inference engine of MSP recognizes when a user
is performing gross motor patterns such as sitting, walking,
running and bicycling.
The BALANCE system has a mobile phone interface for
entering consumed foods, adding custom exercises that are not
detected, such as swimming or primarily upper-body movements, and providing a quick summary of the users current
food-exercise balance. To support ease of food entry, the
BALANCE software consists of two primary food databases.
The first is an extensive master database with detailed nutrition
information Most people tend to eat a smaller number of
foods fairly consistently, so there is an additional personal
food database which consists of all foods that the individual
user has ever entered. The first time the user eats a food,
she is required to search the master database to find the
item. The item is then copied into the personal food database,
which makes it easier to reenter in the future. The personal
food database is also used to store custom entries, such as
a favorite brand or flavor of yogurt that may not be in the
master database. In addition to being able to search the master
and personal databases for foods that have been eaten, the
software allows the specification of Favorites. The Favorites
list includes both single food items and meals (or recipes)
consisting of several food items. The user can construct a
common meal such as a typical breakfast of cornflakes with
bananas, milk and orange juice and then easily add all or part
of the items to her daily food diary. The software offers an
interface for adding custom exercise entries that is similar to
the food interface as well as a screen for viewing that days
detected exercises.
Initial validation experiments measuring oxygen consumption during treadmill walking and jogging have shown that the
systems estimate of caloric output is within 87% of the actual
value.
9) UbiFit Garden: To address the growing rate of sedentary
lifestyles, Sunny Consolvo et al [39] have developed a system,
UbiFit Garden, which uses technologies like small inexpensive
sensors , real-time statistical modeling, and a personal, mobile
display to encourage regular physical activity. It is designed
for individuals who have recognized the need to incorporate
regular physical activity into their everyday lives but have
not yet done so. The UbiFit Garden system consists of
three components: first is fitness device which automatically
infers and communicates information about several types of
physical activities to the glanceable display and interactive
application. The second is an interactive application which
includes detailed information about the individuals physical
activities and a journal where activities can be added, edited,
and deleted. The third is glanceable display which uses a nonliteral, aesthetic representation of physical activities and goal
attainment to motivate behavior. It resides on the background
screen or wallpaper of a mobile phone to provide a subtle
reminder whenever and wherever the phone is used. UbiFit
Garden relies on the Mobile Sensing Platform (MSP). A 3-

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

week field trial is conducted in which 12 participants used the
system and report findings focusing on their experiences with
the sensing and activity inference.
10) HyperFit: P. Jarvinen et al [40] have proposed Hyperfit
to develop communicational tools for personal nutrition and
exercise management. The main result of the HyperFit project
is the HyperFit application, an Internet service for personal
management of nutrition and exercise. It provides tools for
promoting healthy diet and physical activity. The principle
of the service is to mimic the process of personal nutrition
counseling. It includes self-evaluation tools for assessing eating and exercise habits and for defining personally set goals,
food and exercise diaries, and analysis tools. The service
also gives feedback and encouragement from a virtual trainer.
Recommendations by the Finnish National Nutrition Council
are used as the nutritional basis for the service. HyperFit uses
a food database that contains the nutritional information on
approximately 2,500 foods, either product-specific or average.
The products that are not included in the database are replaced
with the average foods. Hybrid media and mobile technology
are applied to improve the usability and interest to use the
system, especially among younger and technically-oriented
people. The service can be used both with a mobile phone
and a PC. The HyperFit system is integrated with the Nutrition
code system by Tuulia International, where the consumer can
follow the nutritional quality of his/her food basket in relation to nutritional recommendations. Through the integration
HyperFit users get lists of purchased foods to be added to
the food diary. A Quick barcode system was built in order to
lower the threshold to add food and exercise data to the diaries.
With the system users can print lists of barcodes containing
favorite foods, exercise activities, common meals and snacks,
and then insert them into the diaries with the camera phone. A
heart rate monitor is integrated with the system. With a simple
interface exercise information can be sent from the heart rate
monitor direct to the HyperFit exercise diary. In the project
the mobile phone product information service was adjusted for
visually impaired people. A beeping sound was added to the
barcode reader to give an indication of the reading process.
After recognition the product information from the HyperFit
web pages was converted to speech in the mobile phone.
11) HealthAware: Chunming Gao et al [5] have presented
a novel health-aware smart phone system named HealthAware,
which utilizes the embedded accelerometer to monitor daily
physical activities and the built-in camera to analyze food
items. The system presents the users physical activity counts
at real time to remind how much daily activity is needed
to keep healthy. The user takes pictures of food items and
the system provides health related information regarding to
the food item intakes. The system is composed of an on
device database which holds the user specific data and food
item information. HealthAware consists of four components:
user interface , on-device database, physical activity analysis
system, and food item classification system. The user interface
is simple and easy to use as it includes a monitoring display
screen and an interactive window. It displays daily activities
in walking steps and running steps, as well as the steps
needed to take for the day. It gives the suggested steps to
burn the intake food items. It reports when the user takes

407

the last activity, the users current location and any alarming
message generated by the system. The on-device database
holds user specific data and general information regarding
food items like food names, picture feature data, calories
etc. The user specific data includes user physical activity
data and food item intake data. The physical activity analysis
system works at background to obtain the users physical
activity by analyzing the accelerometer readings. The food
item classification system is responsible to take a food picture,
extract meta data from the picture and index into the database.
12) PACER: Chunming Gao et al [26] have proposed which
is a gesture-based interactive paper system and supports finegrained paper document content manipulation through the
touch screen of a camera phone. Using the phones camera,
PACER links a paper document to its digital version based
on visual features. It adopts camera based phone motion
detection for embodied gestures (e.g. marquees, underlines
and lassos), with which users can flexibly select and interact
with document details (e.g. individual words, symbols and
pixels). The touch input is incorporated to facilitate target
selection at fine granularity, and to address some limitations
of the embodied interaction, such as hand jitter and low input
sampling rate. This hybrid interaction is coupled with other
techniques such as semi-real time document tracking and loose
physical-digital document registration, offering a gesture based
command system. PACER is demonstrated in various scenarios
including work-related reading, maps and music score playing.
The PACER system consists of three bottom-up layers, namely
paper document recognition and tracking, command system
and applications.
A preliminary user study on the design has produced
encouraging user feedback, and suggested future research for
better understanding of embodied vs. touch interaction and
one vs. two handed interaction.
13) Mobicare Cardio Monitoring System: X Chen et al [10]
have presented a cellular phone based online ECG processing system for ambulatory and continuous detection called
Mobicare Cardio Monitoring System. It aids cardiovascular
disease (CVD) patients to monitor their heart status and detect
abnormalities in their normal daily life. This system is a
solution to supplement the limitations in conventional clinic
examination such as the difficulty in capturing rare events, offhospital monitoring of patients’ heart status and the immediate
dissemination of physician’s instruction to the patients.
The Mobicare Cardio Monitoring System consists of a
cellular phone embedded with real time ECG processing
algorithms (MobiECG), a wireless ECG sensor, a web based
server, a patients’ database and a user interface. The wireless
ECG sensor used in this system serves to capture one channel
ECG, one 3D accelerometer signal and to transmit those
signal data via Bluetooth to cell phones. The key role of
MobiECG here is to work as a local processor to process
data in real time. It receives ECG and accelerometer data
from wireless ECG sensor via Bluetooth, filters the data,
detects QRS complex, identifies Q onset and T offset, and
calculates intensity of patient’s body movement using obtained
accelerometer data. A context-aware (patient’s activity) ECG
processing is carried out by MobiECG and it will send the
abnormal ECG data over a cellular network (GPRS/3G) to

408

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

hospitals or care centers to alarm physician only when it
detects abnormal ECG signal. In order to avoid the continuous
transmission of normal ECG data to physicians and to prevent
the loading of the telecommunication channel, no ECG data is
sent out by MobiECG when abnormality is not detected. The
duration of the ECG data forwarded is from a fixed amount of
time before the point of detection followed by a similar fixed
amount of time after the point of detection. A Web server is set
up to receive data from the cellular network and route the data
to terminals in hospitals or care centers. The physicians at the
hospitals or care centers will examine the ECG data through
the user interface and further verify/diagnose whether the
patient is at high or low risk, so the hospitals or care centers
will act accordingly by sending ambulance immediately or
give the patient an instruction through GPRS/3G. A patients’
database is developed to record patients’ personal particulars,
clinical history and all ECG data logs.
To validate the framework, two separate experiments were
conducted. The purpose of the first experiment was to validate
the correct usage and reliability of the framework under controlled simulated conditions. In the first experiment, it was successfully demonstrated that the signals are only shown on the
Mobicare. This demonstrates that the ECG Signal Processing
has correctly identified the relevant abnormal conditions and
proceeded to forward the detected conditions to the Mobicare
Monitoring GUI. The purpose of the second experiments was
to validate the feasibility usage on an average person going
about his/her daily activities. In the second experiment, the
ECG sensor was attached onto a person as a test subject. The
test subject was then asked to go through a series of nonstrenuous activities like moderate jogging and stair climbing.
The ECG signal though received, processed and recorded on
the mobile phone was not sent to the Mobicare Monitoring
GUI as none of the two alarm conditions are fulfilled. Over all
the Signal Processing Program was able to identify correctly
under normal circumstances, the ECG signal should not be
forwarded.
An overall Maturity Score is produced in Table I for
Personal Participatory Systems.
B. Social Participatory Mobile Phone Sensing Systems
The details of social participatory mobile phone sensing
systems are as follows:
1) CenceMe: Emiliano Miluzzol et al [28] have presented
a system called CenceMe, a personal sensing system that
enables members of social networks to share their sensing
presence with their buddies in a secure manner. Sensing
presence captures a users status in terms of his activity (e.g.,
sitting, walking, meeting friends), disposition (e.g., happy,
sad, doing OK), habits (e.g., at the gym, coffee shop today,
at work) and surroundings (e.g., noisy, hot, bright, high
ozone). CenceMe injects sensing presence into popular social
networking applications such as Facebook, MySpace, and IM
(Skype, Pidgin) allowing for new levels of connection and
implicit communication between friends in social networks.
The CenceMe architecture includes the following components:
physical sensors (e.g., accelerometer, camera, microphone)
embedded in off-the-shelf mobile user devices and virtual

software sensors that aim to capture the online life of the
user, a sensor data analysis engine that infers sensing presence
from data, a sensor data storage repository supporting anytime access via a per-user web portal, a services layer that
facilitates sharing of sensed data between buddies and more
globally, subject to user-configured privacy policy.
The CenceMe system is implemented, in part, as a thinclient on a number of standard and sensor-enabled cell phones
and offers a number of services, which can be activated on a
per-buddy basis to expose different degrees of a users sensing
presence. These services include, life patterns which maintains
current and historical data of interest to the user, my presence
which reports the current sensing presence of a user including
activity, disposition, habits, and surroundings, friend feeds
which provides an event driven feed about selected buddies,
social interaction which uses sensing presence data from all
buddies in a group to answer questions such as who in the
buddy list is meeting whom and who is not?, significant
places which represents important places to users that are
automatically logged and classified, allowing users to attach
labels if needed, buddy search which provides a search service
to match users with similar sensing presence profiles, as a
means to identify new buddies, buddy beacon which adapts the
buddy search for real-time locally scoped interactions (e.g., in
the coffee shop), and above average, which compares how a
user is doing against statistical data from a users buddy group
or against broader groups of interest.
Through prototype implementation successful integration is
demonstrated with a number of popular off-the-shelf consumer
computer communication devices and social networking applications and the evaluation results are promising.
2) DietSense: Sasank Reddy et al [41] have developed a
system DietSense to support the use of mobile devices for
automatic multimedia documentation of dietary choices with
just-in-time annotation, efficient post facto review of captured
media by participants and researchers, and easy authoring and
dissemination of the automatic data collection protocols. There
are four components involved in the DietSense architecture:
(1) mobile phones, (2) a data repository, (3) data analysis tools,
and (4) data collection protocol management tools. Mobile
phones act as sensors, worn on a lanyard around the neck with
the camera facing outwards. The phones run custom software
to autonomously collect time-stamped images of food choice,
as well as relevant context, such as audio and location. To
lower the self-reporting burden and increase data integrity, devices implement adaptive data collection protocols for dietary
intake, which are created by researchers. A participant data
repository receives the annotated media collected by the devices and, via tools like ImageScape, allows individuals private
access to their own data for auditing purposes. Participants
approve which media and information to share with health care
professionals. Data analysis tools, including a more featurerich version of ImageScape, provide researchers mechanisms
with which to rapidly browse the resulting large image sets
and code or tag them. Such tools will support assessment
of dietary intake for direct communication to the participant
and to suggest modification to protocols for data collection.
In order to explore the DietSense concept and discover the
projects challenges, a series of pilot studies is conducted in

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

409

TABLE I
PARTICIPATORY P ERSONAL S ENSING S YSTEMS
Project Title/
System
NeuroPhone [35]

WEEG Headsets, iPhone

EyePhone [36]

Nokia N810, Nokia N900

SoundSense [37]

iPhone

CAM [24]

Nokia Series 60

AndWellness [38]

G1 Mobile Phones

PACER [26]

HTC
Touch Pro cell phone

CONSORTS-S [25]

SPA [3]

BALANCE [4]

Hardware Description

Mobile Sensor Router,
NTT-DoCoMo
OMA N903i, 3G Phone
Nokia N95-1, Nonins
purelight 8000 AA-Wo
Adult firger Clip, Noin’s
Arant 4100 Wriest worn
Patient Module.
Nokia N95, MSP’s
Barometer, Heart Rate
Moni-Device

UbiFit Garden [39]

MSP Fitness Device,
Barometer

Hyper Fit [40]

Nokia 6630, Polar S625X
Heart Rate monitor

HealthAware [5]

HTC Touch Diamond
Device
Dopod 595, Windows
Mobile,
2 electrodes ECG Sensor

Mobi Care
Cardio [10]

Software
Description
Software for
Emotivehead sets
GStreamer SDK,
COpen CV
C/C++, Mobile
Sensing Platform
(MSP)
CAM Shell (XML)
Java 1.6, Apaache
Tom Cat 6.0, MySql
5.1, JavaScript,
Android OS.
C++/C#, Windows
Server 2003,
Windows Mobile 6
Professional SDK

Communication
Modules
WiFi

Types Of
Sensors
Biosensor

Applications

Area

Dial Time

Not Mentioned

Phone’s Front
Camera

Not Mentioned
Bluetooth, WiFi

Phone’s
Microphone
Phone’s Camera

Eye Menu, Car
Driver Safety
Audio Daily
Diary, Music
Detector
CamBrowser

Special Purpose
Application
Special Purpose
Application

Bluetooth

Phone’s GPS

AndWellness
application
Mobile Reader
Assistant (MRA),
PACER Map,
Music Scores
Playing

Special Purpose
Application
Special Purpose
Application
Special Purpose
Application

WiFi, GSM
Network

Phone’s Camera

2.4 GHz ISM band,
W-CDMA

wireless sensor,
MESI RF-ECG

Healthcare service

Health
Monitoring

J2ME, Java MIDP
2.0, Windows XP
SP2, S60 Software

Bluetooth, WiFi

Biomedical
sensor, Phone’s
GPS Sensors

Prototype Health
Care Suggestions
applications

Health
Monitoring

Not Mentioned

Bluetooth

Phone’s
Accelerometer,
GPS,

Health
Monitoring

MyExperience
Framework
JSP, Java Servlet, C,
C++, J2EE, HTML,
XHTML, UML,
Microsoft Windows,
Data Access Object
(DAO),

Bluetooth

3D Accelerometer

GSM, Infrared

Phone’s Camera

BALANCE
application
Ubifit Garden’s
Interactive
Application
Hyperfit barcode
reader application,
Energy Calculator,
Food and Exercise
Diary
Obese Prevention
application
Mobicare Cardio
Monitoring
System

Health
Monitoring

J2ME CLDC

C++, Windows
Mobile 6.1 SDK

WiFi, GSM
Network

O2 Xphone II

Bluetooth,
GPRS/3G

which students wore cell phones that captured images and
other context information automatically throughout the day.
The studies suggest the tools needed by a user to choose
what data to share and also to help researchers or health care
professionals to easily navigate contributed data.
3) TripleBeat: Rodrigo de Oliveira et al [42] have presented TripleBeat, a mobile phone based system that assists
runners in achieving predefined exercise goals via musical
feedback and two persuasive techniques: a glance able interface for increased personal awareness and a virtual competition. It is based on a previous system named MPTrain and
encourages users to achieve specific exercise goals.
It allows users to establish healthy cardiovascular goals
from high-level desires (e.g. lose fat), provides real-time musical feedback that guides users during their workout, creates a
virtual competition to further motivate users, and then displays
relevant information and recommendations for action in an
easy-to-understand glanceable interface. TripleBeats software
and hardware architectures are based on MPTrains architecture
which is a mobile phone based system that takes advantage
of the influence of music in exercise performance, enabling
users to more easily achieve their exercise goals. TripleBeat
system has three main components: first a set of physiological

Phone’s Camera
Accelerometer,
GPS Sensor
Wireless ECG
Sensor, Phone’s
Accelerometer

Special Purpose
Application

Health
Monitoring
Health
Monitoring

Health
Monitoring

and environmental sensors (electrocardiogram -ECG- and 3axis accelerometer), second a processing board that receives
and digitizes the raw sensor signals and third a Bluetooth
transmitter to get the processed data and send it wirelessly
to the Mobile Computing Device (cell phone, PDA, etc.).
The Bluetooth Receiver gets the sensed data and makes it
available to TripleBeats software, which then processes the
raw physiological and acceleration data to extract the users
heart-rate and speed. After logging this and other relevant
information (e.g. song being played, percentage of time inside
the training zone, etc.), the software selects and plays a song
from the users Digital Music Library (DML) that would guide
the user towards following his/her desired workout: a song
with faster tempo than the current one will be chosen if the
user needs to speed up, with slower tempo if the user needs
to slow down and with similar tempo if the user needs to
keep the current pace. TripleBeat adds new functionality to
the basic MPTrain for validation of the TripleBeat prototype.
A user study is conducted with 10 runners and it is
unanimously preferred over MPTrain by all participants. From
the study, it is concluded that TripleBeat is significantly more
effective in helping runners achieve their workout goals.

410

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

4) PEIR: Min Mun et al [19] have presented the Personal Environmental Impact Report (PEIR) that uses location
data sampled from everyday mobile phones to calculate personalized estimates of environmental impact and exposure.
PEIR system includes mobile handset based GPS location
data collection, and server-side processing stages such as
HMM-based activity classification, automatic location data
segmentation into trips, lookup of traffic, weather, and other
context data needed by the models; and environmental impact
and exposure calculation using efficient implementations of
established models. It uses mobile handsets to collect and
automatically upload data to server-side models that generate
web-based output for each participant. It provides web-based,
personalized reports on environmental impact and exposure,
currently focusing on mobility-related impacts and exposures,
using only the commodity sensors built into everyday smart
phones. Participants’ mobile phones run custom software that
uploads GPS and cell tower location traces to a private
repository, where they are processed by a set of scientific
models. The processing pipeline includes an activity classifier
to determine whether users are still, walking, or driving. It
then uses both dynamic data sources, such as weather services,
and more slowly changing GIS data, for example the location
of schools and hospitals, or classes of food establishments
to provide other inputs needed for model calculations. In a
private user account, the results are presented to participants
in an interactive, graphical user interface. Users can share
and compare their PEIR metrics to those of other users via
a network rankings web page, or via Facebook by running a
custom application. One quality that distinguishes PEIR from
existing web-based and mobile carbon footprint calculators is
its emphasis on how individual transportation choices simultaneously influence both environmental impact and exposure.
PEIR provides users with information for two types of
environmental impact, and two types of environmental exposure. Carbon Impact, Sensitive Site Impact, Smog Exposure
and Fast Food Exposure. These metrics are selected because
of their social relevance, and their ability to be customized
for individual participants using time-location traces. Mapmatching approach is evaluated with a data gathered from five
PEIR users over the course of two hours.
5) MoVi: Xuan Bao and Romit Roy Choudhury [1] have
built MoVi, a Mobile Phone based Video Highlights system
using Nokia phones and iPod Nanos, and have experimented in
real-life social gatherings. MoVi is a collaborative information
distillation tool capable of filtering events of social relevance.
MoVi it is an assistive solution for improved social event
coverage. A Trigger Detection module scans the sensed data
from different social groups to recognize potentially interesting events. Once an event is suspected, the data is correlated
with the data from other phones in that same group. Confirmed
of an event, the View Selector module surveys the viewing
quality of different phones in that group, and recruits the
one that is best”. Finally, given the best video view, the
Event Segmentation module is responsible for extracting the
appropriate segment of the video, that fully captures the event.
Experiments in real social gatherings, 5 users were instrumented with iPod Nanos (taped to their shirt pockets) and
Nokia N95 mobile phones clipped to their belts. The iPods

video-recorded the events continuously, while the phones
sensed the ambience through the available sensors. The videos
and sensed data from each user were transmitted offline to the
central MoVi server. The server is used to mine the sensed
data, correlate them across different users, select the best
views, and extract the duration over which a logical event
is likely to have happened. Capturing the logical start and
end of the event is desirable, otherwise, the video-clip may
only capture a laugh and not the (previous) joke that may
have induced it. Once all the video-clips have been short
listed, they are sorted in time, and stitched” into an automatic
video highlights of the occasion. The measurements/results are
drawn from three different testing environments. (1) A set of
students gathering in the university lab on a weekend to watch
movies, play video games, and perform other fun activities. (2)
A research group visiting the Duke SmartHome for a guidedtour. (3) A Thanksgiving dinner party at a facultys house,
attended by the research group members and their friends.
Results have shown that MoVi-generated video highlights
(created offline) are quite similar to those created manually,
(i.e., by painstakingly editing the entire video of the occasion).
An overall Maturity Score is produced in Table II for Social
Participatory Sensing Systems.
C. Public Participatory Mobile Phone Sensing Systems
The details of public participatory mobile phone sensing
systems are as follows:
1) EarPhone: Rajib Kumar Rana et al [2] have presented
the design, implementation and performance evaluation of an
end-to-end participatory urban noise mapping system called
Ear-Phone. Ear-Phone, for the first time, leverages Compressive Sensing to address the fundamental problem of recovering
the noise map from an incomplete and random samples
obtained by crowd sourcing data collection. It also addresses
the challenge of collecting accurate noise pollution readings at
a mobile device. It is used for monitoring environmental noise,
especially roadside ambient noise. The key idea is to crowd
source the collection of environmental data in urban spaces
to people, who carry smart phones equipped with sensors and
location-providing Global Positioning System (GPS) receivers.
The overall Ear-Phone architecture consists of a mobile phone
component and a central server component. Noise levels are
assessed on the mobile phones before being transmitted to the
central server. The central server reconstructs the noise map
based on the partial noise measurements. Reconstruction is
done because the urban sensing framework cannot guarantee
that noise measurements are available at all times and locations.
The system performance is evaluated in terms of noise-level
measurement accuracy, resource (CPU, RAM and energy)
consumption and noise-map generation. Extensive simulations
and outdoor experiments have demonstrated that Ear-Phone
is a feasible platform to assess noise pollution, incurring
reasonable system resource consumption at mobile devices and
providing high reconstruction accuracy of the noise map.
2) Micro-Blog: Shravan Gaonkar et al [43] have presented
the architecture and implementation system, called MicroBlog. In this system the authors have identified new kinds

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

411

TABLE II
PARTICIPATORY S OCIAL S ENSING S YSTEMS
Project Title/
System
DietSence [41]

Triple Beat [42]

PEIR [19]

CenceMe [28]

MoVi [1]

Hardware Description
Nokia N80, GPS
Reciver
Alivetec ECG,
Accelerometer
monitor, Andioox
SMT 5600, Cingular
2125
Nokia N80, Nokia
N95, E71
Nokia N95, Nokia
N5500 Sport, Nokia
N80,
Nokia N800, Apple
iPhone, BlueCel
Accelerometer
Nokia N95, iPod
Nanos

Software
Description
Python, MySql, php,
XML, Adobe Flash

Communication
Modules
Bluetooth

Triple Beat Software

Bluetooth

2lead ECG Sensor,
3-axis
Accelerometer

S60, Windows Mobile
(Samsung Black Jack
II), Sun Solaris

GSM Network

Phone’s GPS

GPRS, TCP/IP,
Wifi, Bluetooth,
GSM

Phone’s Camera
Microphone,
Accelerometer,
GPS, Radio,
BlueCel Snsor

Bicycling, Weight
Lifting, Golf Swing
Analysis

Phone’s
Microphone,
Accelerometer,
Camera

Three testing
environments,
University Students
watching Movies and
doing other activities
in LAB, SmartHome
Laboratory,
Thanksgiving party

Python, Symbian OS,
Linux OS, MySQl,
WEKA Work

Matlab, Google
Goggles

Bluetooth, GSM
Network

of application-driven challenges. The authors have described
several potential applications that may emerge on the MicroBlog platform. A localization service is consulted to obtain
a reasonable location estimation. Even when GPS is available, its continuous use may not be energy-efficient. Hence,
the localization service selects one among several localization schemes (WiFi, GSM, GPS, or combinations thereof)
that meet the applications accuracy/energy requirements. The
location-tagged blog is transported to an application server
over a WiFi or cellular connection, which in turn forwards
it to a back-end database. The blogs are organized/indexed
appropriately, based on blog originators, access permissions,
themes, or other keys. When a client wants to access a
microblog, it contacts a web server to retrieve it. The web
server provides only those blogs that the user has permissions
to access. Phones periodically update the Micro-Blog server
with their own locations, which maintains per-phone location
in its localization database. When a user sends a query to
a specific region, R, the server first determines if the query
can be serviced from the database of blogs. If feasible, the
server retrieves all microblogs that match the time, location,
and permission attributes, and returns them to the user in
reverse chronological order. Otherwise, the server selects
phones located in the region R (that have declared themselves
available) and forwards the query to them. Phones that arrive
later at R also receive the query. When some phone responds
to this query, the response is linked to the query and placed
on the map as a new, interactive microblog. Queries are active
for a pre-specified lifetime, configured by its originator. Upon
expiry, they are removed from the server. Data from phones is
received at a Micro-Blog application server. The server accepts
TCP connections from phones, and forwards all received data
to a back-end database server. Depending on whether the
data contains blogs, localization information, or user profile
configuration, it is appropriately stored in relational tables.

Types Of
Sensors
Phone’s Camera
Microphone, GPS

Applications

Area

Image Scape

Health
Monitoring

TripleBeat software
Carbon Impact,
Sensitive Site Impact,
Smog Exposure, Fast
Food Exposure

Health
Monitoring

Environmental
Monitoring

Social
Interaction

Social
Interaction

It is implemented on Nokia N95 mobile phones, and it was
distributed to volunteers for real life use. Feedback from users
was promising which has suggested that Micro-Blog can be
a deployable tool for sharing, browsing, and querying global
information.
3) V-Track: Arvind Thiagarajan et al [12] have proposed
a system called VTrack for travel time estimation using this
sensor data and it addresses two key challenges: energy
consumption and sensor unreliability. While GPS provides
highly accurate location estimates, it has several limitations
and considering those limitations the authors have proposed
that VTrack can use alternative, less energy-hungry but noisier
sensors like WiFi to estimate both a users trajectory and
travel time along the route. VTrack processes streams of
time stamped, inaccurate position samples at time-varying
periodicity from mobile phones. It uses a Hidden Markov
Model (HMM) to model a vehicle trajectory over a block
level map of the area. VTrack performs map matching, which
associates each position sample with the most likely point on
the road map, and produces travel time estimates for each
traversed road segment. VTrack provides real-time estimates
recent to within several seconds to users. It also compiles a
database of historic travel delays on road segments.
The authors key contribution is an extensive evaluation
of VTrack on a large dataset of GPS and WiFi location
samples from nearly 800 hours of actual commuter drives,
gathered from a sensor deployment on 25 cars. The data was
gathered from two sources: an iPhone 3G application, and
from embedded in-car computers equipped with GPS and WiFi
radios. It is shown that VTrack can tolerate significant noise
and outages in these location estimates, and still successfully
identify delay-prone segments, and provide accurate enough
delays for delay-aware routing algorithms. The best sampling
strategies have been studied for WiFi and GPS sensors for
different energy cost regimes.

412

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

4) TrafiicSense: Prashanth Mohan et al [13] have presented
TrafficSense to monitor road and traffic conditions in a setting
where there are much more complex varied road conditions
(e.g., potholed roads), chaotic traffic (e.g., a lot of braking and honking), and a heterogeneous mix of vehicles (2wheelers, 3-wheelers, cars, buses, etc.). TrafficSense performs
rich sensing by piggybacking on smart phones that users carry
around with them. The focus is specifically on the sensing
component, which uses the accelerometer, microphone, GSM
radio, and/or GPS sensors in these phones to detect potholes,
bumps, braking, and honking. TrafficSense addresses several
challenges including virtually reorienting the accelerometer on
a phone that is at an arbitrary orientation, and performing honk
detection and localization in an energy efficient manner. The
idea of triggered sensing is also used in this system, where
dissimilar sensors are used in tandem to conserve energy.
The authors first contributions is that, they have developed
algorithms to virtually reorient a disoriented accelerometer
along a canonical set of axes and then use simple thresholdbased heuristics to detect bumps and potholes, and braking.
Secondly they have used heuristics to identify honking by
using audio samples sensed via the micro- phone. Third is
the evaluation of the use of cellular tower information in
dense deployments in developing countries to perform energyefficient localization and finally triggered sensing techniques
are used wherein a low-energy sensor triggers the operation
of a high-energy sensor.
The system is evaluated to calculate the effectiveness of
the sensing functions in TrafficSense based on experiments
conducted on the roads of Bangalore, with promising results
5) MobileMillennium: Mobile Millennium [14] is a pilot
project of such a technology which allows the general public
with supported devices to participate. Its relevance for urban
traffic and travel in urban environments is of specific interest,
since it potentially will be able to unveil traffic patterns previously unobserved with dedicated monitoring infrastructure.
The aim of Mobile Millennium is to estimate traffic on all
major highways in and around the target area, as well as
on major arterial roads. The system architecture consists of
a physical component: GPS-enabled smart phones onboard
vehicles (driving public), and three cyber components: a
cellular network operator (network provider), cellular phone
data aggregation and traffic service provision (Nokia/Navteq),
and traffic estimation (Berkeley/Navteq). On each participating
mobile device (or client), an application is executed which is
responsible for collecting traffic data through a privacy aware
spatial sampling technique based on Virtual Trip Lines (VTLs)
and displaying the current traffic estimates which are produced
from the aggregate data of all participants. A back end server
aggregates data from a large number of mobile devices and
pushes the data to UC Berkeley estimation engine for data
assimilation, which combines the cell phone data with other
information such as loop detectors to produce the best estimate
of the current state of traffic. The map data server provides
the Navteq Navstreets digital map data which is required for
the network based traffic flow models. Multiple estimation
algorithms are run in parallel as part of ongoing research,
including arterial traffic models.

6) TARIFA: Georgios Adam et al [15] have proposed
a system called TARIFA (Traffic and Abnormalities Road
Instructor For Anyone) that estimates road traffic as well
as road abnormalities, and makes the collected information
available to anyone that has Internet access. This system is
capable of spotting potholes and can also provide information
for the traffic using the GPS receiver. The architecture of the
system consists of two independent parts. A smart phone that
is equipped with an accelerometer and a GPS receiver is placed
inside a car. There is also a local database for the temporary
storage of data. Every second the cars location is estimated by
the GPS. In the same time, the decision of whether a pothole
is present is taken consulting the accelerometers indication.
This piece of information is then stored in the local database.
Then the data is sent to the main server where the central
database is hosted. Using Open Street Maps a user interface
is provided with a marker for every pothole. The amount of
traffic is indicated by differently colored segments of streets.
Low traffic is presented using green lines, medium traffic with
yellow lines and high traffic with red lines. A very simple yet
effective heuristic algorithm is used to detect potholes and
other surface abnormalities.
The system is implemented on a smart phone connected
with a GPS device, where the information is stored and
processed in order to be visible to Internet users. The system,
periodically, attempts to establish a connection with the server
in predefined time gaps. Timeouts are also used for this
purpose in order to prevent the blocking of the connection.
When the connection is established the smartphone side sends
its ID to the server and gets the unix timestamp with most
recent value that is stored in the TARIFA server.
7) LiveCampare: Linda Deng et al [16] have presented
LiveCampare that leverages the ubiquity of mobile camera
phones to allow for grocery bargain hunting through participatory sensing. The authors have utilized two-dimensional
barcode decoding to automatically identify grocery products,
as well as localization techniques to automatically pinpoint
store locations. LiveCompare assumes that each participating grocery-store shopper has a camera phone with Internet
access. The participants use their camera phones to snap a
photograph of the price tag of their product of interest. From
the photograph, the users phone extracts information about
the product using the unique UPC barcode located on the
tag. In most grocery stores, price-tag barcodes are identical
to the barcodes on the actual products and facilitate global
product identification. Once the barcode has been decoded
on the device, the numerical UPC value and the just-taken
photograph are transferred to LiveCompares central server.
This data is stored in Live- Compares database for use in
future queries, and the UPC value determines the unique
product for which price comparisons are requested. The client
also sends its GPS or GSM cell information to the server
so that the current store can be identified. This location
information allows LiveCompare to limit query results to
include only nearby stores (where a distance threshold may
be set by the user). To ensure data integrity, LiveCompare
provides high-quality data through two complementary social
mechanisms. First, LiveCompare relies on humans, rather than
machines, to interpret complex sale and pricing information.

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

The only part of a price tag that must be interpreted by a
computer is the barcode to retrieve a Universal Product Code
(UPC). Because of this, LiveCompare does not need to rely
on error-prone OCR algorithms to extract textual tokens or
on linguistic models to make sense of sets of tokens. Second,
each LiveCompare query returns a subset of the data pool
for a user to consider. If an image does not seem relevant,
the user can quickly flag it. This allows users to collectively
identify malicious data. If a particular user is found to be
the owner of several suspicious entries, he may be banned.
The primary drawback of LiveCompares architecture is that
it does not scale down well i.e., when few queries have been
submitted, query results are unlikely to be helpful. To cope
with this issue, LiveCompare can fall back on existing price
pools such as online grocery stores and drugstores to provide
comparisons when data is scarce.
To determine the usefulness and feasibility of LiveCompare,
field work is conducted in seven different brick and mortar
stores throughout Durham, North Carolina. It is shown that
price dispersion can be observed across a variety of grocery
items, that typical store price tags contain sufficient information to enable LiveCompares infrastructure, and that data
transfer performance is reasonable over an HSDPA network.
8) MobiShop: MobiShop [17] a novel people-centric application is presented which facilitates sharing of product pricing
information amongst consumers. This system is implemented
on an off-the-shelf Nokia N95 mobile phone and it has two
principal modes of operation: product price and user query.
To contribute information, the user captures a digital image of
the store receipt, which lists the products and corresponding
prices using the mobile phone camera. MobiShop implements
Optical Character Recognition (OCR) on the mobile device to
extract the pricing information from the image. The products
and prices are uploaded along with the GPS (Global Position
System) coordinates of the user and the time of purchase to the
central server. The server collates the user inputs and maintains
an updated repository of the product prices at different stores.
This database is interfaced to a GIS (Global Information
System) street map populated with store locations. In the
query mode, a MobiShop user can request for the prices of
a particular product in her neighborhood. The query sent to
the server includes the GPS location of the user. The server
replies back with a list of the stores featuring this product
along with their prices in the vicinity of the user.
9) PetrolWatch: PetrolWatch [18] is a system which automatically collects fuel prices using camera phones. This
system is implemented as a client-server program and has two
principal modes of operation: fuel price collection and user
query. The fuel price collection is completely automated and
only requires the camera phone to be mounted on the dashboard, with the camera lens pointing towards the road. The
system automatically triggers the mobile phones to photograph
the roadside fuel price boards when they approach service
stations. Sophisticated computer vision algorithms are used to
scan these images and retrieve the fuel prices. To deal with
a non-structured environment, and to reduce computer vision
complexity, it relies on the GIS database and GPS location
to know the service station brand and uses the fact that each
brand uses a specific color for its price board. The metadata

413

(location coordinates, brand and time) are extracted and stored
separately. The images and fuel brand data are passed on to
the image processing engine, which is implemented on the
mobile phone. The first step detects the existence of a fuel
price board. For each fuel brand, a tailored color thresholding
is employed that can capture regions within the images, having
a color scheme similar to the fuel brand price board. In certain
situations, surrounding objects in the image may have colors
resembling the board, e.g. the blue sky may be similar to the
Mobil price board. In this case, post processing techniques
are used to narrow the search. The price board dimensions
are used to exclude some of the candidate regions selected by
color thresholding. This is further refined by comparing the
color histogram of all candidate regions with that of a sample
price board image. The image is cropped to contain only the
board, and normalized to standard size and resolution. The
color image is converted to binary and connected component
labeling is used to extract the individual numeral characters.
A Neural Network algorithm is used to classify the digits.
The extracted prices are uploaded to the server and stored in
a database, linked to a GIS road network database populated
with service station locations. The server updates fuel prices
of the appropriate station if the current price has a newer
timestamp. History is also maintained to analyze pricing
trends.
10) Learmometer: Laermometer [21] is developed to solve
the problems of creating noise maps by utilizing mobile
phones and their built-in microphones. Laermometer consists
of two main parts. The first one is a mobile phone application,
which is responsible for the sound recording and provides
functionality like different visualization of sound points, administrating comments, viewing the noise maps at different
points of time via the timeline etc. The second one is the
server that is used to store, upload and retrieve sound points.
The main functionality is to provide noise information for
any place in the world. Users can add further information
like a noise description or comments about the location and
its sound level. Every user can view the noise maps and
comments, anywhere using their mobile devices. The basic
idea of Laermometer is to use mobile phones to create socalled noise maps. Noise maps visualize differences in noise
levels of different areas. The Laermometer concept of creating
noise maps is based on using the built-in microphones of
mobile phones to collect the required data to create noise
maps. In order to get exact current position of the device
GPS modules of the mobile phone (either built-in or external)
are used. The next step is to analyze the sound level of
the environment, so, the microphone of the mobile phone
is used. Now, with these two types of information, so-called
sound level points are created. To combine sound levels with
GPS coordinates, Laermometer utilizes geo-tagging which is
commonly used to enhance maps with additional useful information. The Laermometer concept has two main advantages
compared to the usual approaches: Firstly, it is based on real
recorded sound levels and thus more precise than modeling
based systems. Second, no extra costs despite the internet
connection are generated, because already existing hardware
the users mobile phones is used. Laermometer automatically
does everything to analyze the sound level and upload it to the

414

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

server. Only comments have to be uploaded actively by the
users. The evaluation of this system is not yet performed but
for this, a user study is planned. Participants will be equipped
with Laermometer enabled devices and given some specific
tasks over a period of several days (or weeks). This is done
to gather qualitative information about the system and to find
further enhancements.
11) MobGeoSen: Eiman Kanjo et al [44] have developed
a system called MobGeoSen which enables individuals to
monitor their local environment (e.g. pollution and temperature) and their private spaces (e.g. activities and health) by
using mobile phones in their day to day life. The MobGeoSen
is a combination of software components that facilitates the
phone’s internal sensing devices (e.g. microphone and camera)
and external wireless sensors (e.g. data loggers and GPS
receivers) for data collection. It also adds a new dimension of
spatial localization to the data collection process and provides
the user with both textual and spatial cartographic displays.
While collecting the data, individuals can interactively add
annotations and photos which are automatically added and
integrated in the visualization file/log. This makes it easy
to visualize the data, photos and annotations on a spatial
and temporal visualization tool. In addition, the authors have
presented ways in which mobile phones can be used as noise
sensors using an on-device microphone.
In order for the phone to simultaneously collect sensor data
from the datalogger and location from GPS, an advanced component was developed which establishes multiple Bluetooth
device connection and communicates over those connections.
Bluetooth GPS and datalogger act as slaves and wait for other
devices such as the mobile phone to connect to it. Once the
connections are established, messages can be sent from the
master device to the connected slaves to start reading data.
The sound sensor application turns the mobile phone into
a low-cost data logger for monitoring environmental noise.
The software combines the sound data with the external GPS
receiver data in order location data in order to generate a map
of sound levels encountered during a journey. The software
prompted the users to add geo-coded annotations and place
marks during their journey. Images could be embedded in the
data log with no further action required.
In order to demonstrate the domain and use of MobGeoSen
kit ,the project worked closely with science teachers and
children at two schools. Sixty pupils involved in the project
were given mobile phones to monitor pollution levels on their
journey to and from school over two weeks. Results of Google
Earth analysis of the sessions and teacher interviews suggest
that this context inclusive approach is significant.
12) NoiseTube: NoiseTube [20] is a new approach for the
assessment of noise pollution involving the general public.
The goal of this project is to turn GPS-equipped mobile
phones into noise sensors that enable citizens to measure their
personal exposure to noise in their everyday environment.
Thus each user can contribute by sharing their geo-localized
measurements and further personal annotation to produce a
collective noise map. NoiseTube consists of an application
that the users must install on their smart phones and a
server collecting, analyzing and visualizing the information
sent from the phones. The mobile sensing application runs

on GPS-equipped mobile phones. This application collects
local information from different sensors (noise level, GPS
coordinates, time, user input) and sent them to the NoiseTube
server. The server centralizes and processes the data sent by
the phones. Although untested, many other phone brands and
models are supported as well, as long as the device supports
the Java J2ME platform, with multimedia and localization
extensions.
13) Citizen Journalist: Citizen Journalist [45] is an application inspired by Micro-Blogs and involves participatory
sensing, wherein PRISM provides location-based triggers to
alert human users, who are in the vicinity of a location
of interest, to respond to the application. Responses could
take the form of answering simple queries, taking pictures of
interesting events, etc. Such an application could be used, for
example, by small news organizations to collect information
for particular events of interest. In this context, two types
of application requirements exist. Firstly the critical queries
where fast response to application queries is necessary (e.g.,
someone reports an accident and the news organization requires a citizen to take a photograph of the scene). Secondly
the queries that are not latency sensitive but may need answers
from areas that are sparsely populated (e.g., someone writing
an article about the condition of school buildings in remote
villages and requires a recent photograph of the same). The
application requests PRISM to deliver the sensing task to a
certain number of camera-equipped phones in the vicinity of
the desired location. The location is specified by (lat, long) and
includes a coarse radius for deployment and a fine radius for
actual execution. If matching phones are not readily available,
PRISMs trigger mechanism is used to deploy at the location
as and when PRISM clients register/send updates from the
desired location.
The citizen journalist application was deployed on a smallscale using ten volunteers. The volunteers were given windows
mobile phones with GPRS (2G) data subscription and they
carried the phones whenever they left work (e.g., to go
home or for walks). A total of 30 locations of interest was
identified in an area of few square kilometer in the vicinity
of the Microsoft Research India lab in Bangalore. Custom
tasks seeking responses from users at these locations, were
generated periodically by the application server and sent to
the PRISM server for deployment. For example, a task would
ask the user how heavy the traffic is at an intersection and also
ask them to optionally take a picture. Given that the speed limit
in the area of interest was 30kmph and many volunteers used
the system at walking speeds, a fine-grain radius of 30m and
a coarse-grain radius of 75m were chosen for vast majority
of the tasks. These choices ensure a high application launch
success rate with ample notification time based on the microbenchmark results reported earlier.
14) Party Thermometer: Party Thermometer [45] is an
application which is also a human-query application, where
queries are directed to users who are at parties. For example,
a query could be how hot a particular party is. Like in the
citizen journalist application, location is a key part of the
predicate used to target the queries. However, unlike in the
citizen journalist application, location alone is not enough
for targeting because there is a significant difference between

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

a person who is actually in a party and a person who is
just outside, possibly having nothing to do with the party.
Thus, in addition to location, (party) music detection is also
employed using the microphone sensor to establish the users
context more precisely. The location predicates used in the
party thermometer application must be more precise than,
say, in the citizen journalist application since the application
has to perform an energy intensive activity (detecting music
through microphone sensing) before even determining whether
to involve the user. To enable a precise fine-grain predicate, the
location of the party down to a building is chosen as the toplevel predicate and further require that the phone be stationary
(e.g., within the building) before deploying applications to
the phone. Once the application is deployed, the second level
predicate requires music to be heard for the application to
launch, thus ensuring that the user is prompted only when he
is present in the party. To detect music, one simple heuristic
is to perform a Fast Fourier Transform (FFT) of the audio
samples and examine the spikes in the frequency domain
for harmonics. Since, this operation is required to be done
efficiently, an off-the-shelf efficient FFT code written in C is
used to build a dynamic linked library that is downloaded with
the party application.
D. Hybrid Participatory Mobile Phone Sensing Systems (containing personal, social and public sensing elements)
The details of Hybrid participatory mobile phone sensing
systems are as follows:
1) BikeNet: Andrew T. Campbell et al [46] have presented
BikeNet, a mobile sensing system for mapping the cyclist
experience. BikeNet is built leveraging the MetroSense architecture to provide insight into the real-world challenges of
people-centric sensing. It uses a number of sensors embedded
into a cyclists bicycle to gather quantitative data about the
cyclists rides. It exploits dual-mode operation for data collection, using opportunistically encountered wireless access
points in a delay-tolerant fashion by default, and leveraging the
cellular data channel of the cyclists mobile phone for real-time
communication as required. BikeNet also provides a Webbased portal for each cyclist to access various representations
of her data, and to allow for the sharing of cycling-related
data (for example, favorite cycling routes) within cycling
interest groups, and data of more general interest (for example,
pollution data) with the broader community. Sensors collect
cyclist and environmental data along the route. Application
tasking and sensed data uploading occurs when the sensors
come within radio range of a static Sensor Access Point
(SAP) or via a mobile SAP along the route. Sensed data
mulling can occur when cyclists come within mutual radio
range. Data is collected about the cyclist (heart rate, galvanic skin response), about the cyclists performance (wheel
speed, pedaling cadence, frame tilt, frame lateral tilt, magnetic
heading), and about the cyclists surroundings (sound level,
carbon dioxide level, cars). Characteristics of this system
include: Cyclist Performance/Fitness Measurement, Environment/Experience Mapping, Long-Term Performance Trend
Analysis, Data Collection and Local Presentation, Data Query
and Remote Presentation, Disconnected Operation. Existing

415

technologies such as SSL or IKE are used as appropriate
to provide for data security. Several groups of experiments
are performed targeting at: quantifying the cyclist experience
from sensed data collected about a single cyclist and his
environment; looking at performance aspects of key BikeNet
subsystems; and measuring the real-time performance of a
deployed system across the Dartmouth campus and in adjacent
areas of the town of Hanover, NH, USA. Initial results are
encouraging.

2) MPCS: Mobile-phone based Patient Compliance System
(MPCS) [9] is proposed that can reduce the time-consuming
and error-prone processes of existing self-regulation practice to facilitate self-reporting, non-compliance detection, and
compliance reminders. The novelty of this work is to apply
social behavior theories to engineer the MPCS to positively
influence patients compliance behaviors, including mobiledelivered contextual reminders based on association theory;
mobile-triggered questionnaires based on self-perception theory; and mobile enabled social interactions based on socialconstruction theory. The self-regulation approach is described
which is used for patient centered chronic illness care. A
self-regulation model of patient compliance typically uses
a negative feedback loop. The patients regimen-relevant behavior is monitored and compared with the recommended
treatment regimen. When deviation is detected, an error signal
is generated as a feedback to the patient. If the patient is
motivated to comply, he will adjust his behaviors, which will
be continuously monitored for the full self-regulation loop.
In practice, patients can use a logbook for self-recording and
compliance deviation can be identified during periodic patient
visits. MPCS connects patients with their community using
social-construction theory, which suggests that a person will
conform to others behavior, such as adopting new technology,
as consensus expectations of a workgroup in which members
share similar goals The clinician can submit a recommended
treatment regimen, as a set of rules, to the MPCS server,
which also receives compliance self-reports gathered from
the patients mobile phone, either using manual inputs or
automatic sensing. The users context information is also
periodically inferred and sent to the server, which uses the user
context and historical data to determine an optimal reminder
delivery schedule. The server also detects non-compliance by
comparing the treatment regiment and the self-reports, and
triggers a rating questionnaire on the patients mobile phone.
Family members can also log in to see the patients health
conditions and compliance activities. Patients themselves can
interact with their social community through their mobile
phones. In particular, they can browse group-level compliance
activities of their peers and follow detailed compliance actions
of their buddies, as permitted by the privacy settings. In
addition, a patient may explicitly define some group members
as his buddies, such as those he knows in real life, or those
introduced by the same clinician, or those he interacts with in
the community but decides to establish a closer connection.
A patient can receive detailed activity updates from his ego
network (friends) as permitted.

416

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

TABLE III
PARTICIPATORY P UBLIC S ENSING S YSTEMS
Project Title /
System
Earphone [2]

Hardware
Description
Nokia N95, HPiPAQ

MicroBlog [43]

Nokia N95

Citizen Journalist
[45]

HPiPAQ nw6965,
Samsung SGHi780,
HTC
Adrantoge
7510,7501
iPhone,
Nokia
N95 embede in
car computer

V-Track [12]

Software
Description
Java
MySQl,
PHP,
Nokia
Energy Profiles
Carbide
C++
Symian
OS,
C++, PHP 5,
Ajax,
MySQl,
Apache 2.0 web
server
MS
Windows
Mobile 5.0, 6.1,
Windows 7, C#,
C/C++

Communication
Modules
Wifi

Not Mentioned

Wifi, Bluetooth

Wifi, GSM

Bluetooth,
GPRS, EDGE,
3G Radio

TrafficSense [13]

HPiPAQ nw6965,
Sparkfon WiTilt
accelerometer
HTC Typhoon

Windows mobile
5.0,
Windows
Mobile 2003

Bluetooth, Wifi,
GSM

LiveCampare
[16]

Nokia N95

Symbian OS

HSDPA,
GPS,
Wifi, GSM

MobiShop [17]

Nokia N95 8GB,
GPS Reciver

GPRS, HSDPA,
Wifi, GSM

PetrolWatch [18]

Nokia N95

Laermometer
[21]

Any
Mobile
device equipped
with Microphone
Nokia
Series
60
Camera
Phones,
GPS
Reciver, Sensor
Datalogger
Nokia N95, GPS
Reciver

My SQl, Java
ME, Windows/
Linux Symbian
OS 9.2, OCR
engine, Tomcat
J2me,
Open
source
JJIL
Imaging Library
MySQL, XML,
Apache Sever
XML
Earth

Bluetooth, GPRS

MobGeoSen [44]

NoiseTube [20]

Party Thermometer [45]

HPiPAQ nw6965,
Samsung SGHi780,
HTC
Adrantoge
7510,7501

Google

Java,
Symbian
S60 OS, MySQl,
Google Earth and
Google Maps
MS
Windows
Mobile 5.0, 6.1,
Windows 7, C#,
C/C++

Types Of Sensors
Phones
Microphone,
GPS Sensor
Phones
Microphone,
Camera,
GPS
Sensor,
Accelerometer

Applications

Area

MobSLM

Special Purpose
Application
Micro
Micro

Special Purpose
Application

Phones
Microphone,
Camera,
GPS
Sensor,
Accelerometer
Phones GPS Sensor

Citizen Journalist

Special Purpose
Application

Detecting
and
Visualizing
hotspots,
Real
time
Route
planning
Monitoring
of
Roads and Traffic
Conditions

Traffic Monitoring

Price Dispersion

Commerce

Price Dispersion

Commerce

Phones
Microphone,
Camera,
GPS
Sensor,
Accelerometer,
GSM Radio
Phones Camera,
GPS
Sensor,
GSM Radio
Phones Camera,
GPS Sensor

Tourism,
News,
Maps

Traffic Monitoring

GSM, GPRS, 3G

Phones Camera,
GPS Sensor

Price Dispersion

Commerce

GSM Network

Phones
Microphone,
GPS Sensor,
Phones Camera,
GPS Sensor, Microphone

Noise Map Creation and Visualization
Monitoring
Sound level

Environmental
Monitoring

Bluetooth

Phones
Microphone,
GPS Sensor

Mobile Sensing
Application

Environmental
Monitoring

Bluetooth

Phones
Microphone,
Camera,
GPS
Sensor

Party Thermometer

Social Interaction

IV. O PPORTUNISTIC S ENSING S YSTEMS
Many opportunistic sensing systems have been developed
so far, In this section we have categorized them into Personal,
Social and Public opportunistic sensing systems.

A. Personal Opportunistic Mobile Phone Sensing Systems
The details of personal opportunistic mobile phone sensing
systems are as follows:
1) PerFallID: Nicholas D Lane et al [8] have proposed
PerFallID, utilizing mobile phones as a platform for pervasive
fall detection system whose only requirement is a mobile

Environmental
Monitoring

phone which has an accelerometer. PerFallD has few false
positives and false negatives; it is available in both indoor
and outdoor environment; it is user-friendly, and it requires
no extra hardware and service cost. It is also lightweight and
power efficient. The design of this system is general and it
is not constrained to a particular brand or type of mobile
phone. It is divided into five major components: user interface,
monitoring daemon, data processing, alert notification and
system configuration. After the program starts, a user profile is
loaded. A user dependent profile contains basic fall detection
configuration such as the default sampling frequency, default
detection algorithm, emergency contact list, etc. In different
scenarios, users activity patterns have varying degrees of

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

rapidity, and it is more efficient to use different sampling
frequencies in different scenarios. After the user profile is
loaded, users are provided the chance to adjust the sampling
frequency when interfaces that invoke sensor functions at
different frequencies are provided. Then the main program,
working as a background daemon is launched. If information
collected in real time satisfies a certain preset condition, the
pattern matching process begins to determine if a fall occurs.
If no fall is detected, execution immediately returns to the
daemon. If a fall is detected, the daemon service transmits
a signal that triggers an alarm and starts a timer. If the user
does not manually turn off the alarm within a certain time
period, the system automatically calls contacts stored in the
emergency contact list according to their priorities. Data of
falls is collected with different directions (forward, lateral and
backward), different speeds (fast and slow) and in different
environment (living room, bedroom, kitchen and outdoor
garden). Data of activities of daily living (ADL) including
walking, jogging, standing and sitting is also collected.
Experiments are conducted to evaluate the system. In
particular, PerFallDs performance is compared with that of
existing work and a commercial product. Experimental results
show that PerFallD achieves strong detection performance and
power efficiency. PerFallD outperforms existing algorithms,
and achieves better balance between false negative and false
positive when compared with the commercial product.
2) I-Fall: IFall [47] system is presented which is an
alert system for fall detection using common commercially
available electronic devices to both detect the fall and alert
authorities. An Android based smart phone is used with an
integrated tri-axial accelerometer. Data from the accelerometer
is evaluated with several threshold based algorithms and
position data to determine a fall. The threshold is adaptive
based on user provided parameters such as: height, weight, and
level of activity. The algorithm adapts to unique movements
that a phone experiences as opposed to similar systems which
require users to mount accelerometers to their chest or trunk.
If a fall is suspected a notification is raised requiring the users
response. If the user does not respond, the system alerts prespecified social contacts with an informational message via
SMS. If a contact responds the system commits an audible
notification, automatically connects, and enables the speakerphone. If a social contact confirms a fall, an appropriate
emergency service is alerted.
This system provides a realizable, cost effective solution
to fall detection using a simple graphical interface while not
overwhelming the user with uncomfortable sensors. A service
allows the fall monitor to constantly run in the background.
When the monitor suspects a fall, an intent is sent to an iFall
activity. This wakes up the application and attempts to get
the users attention by repeatedly vibrating, flashing LEDs and
screen, and playing an audio message. The app prompts the
user with a simple pop-up window telling them to press an onscreen button or verbally state if they require help. A canceled
alert closes iFall and the interrupted activity is restored.
3) HeartToGo: HeartToGo [7] is a cell phone-based personalized medicine technology for cardiovascular disease
(CVD), capable of performing continuous monitoring and
recording of ECG in real time, generating individualized

417

cardiac health summary report in laymans language, automatically detecting abnormal CVD conditions and classifying
them at any place and anytime. Specifically, an artificial
neural network (ANN)-based machine learning technique is
developed, combining both individualized medical information
and clinical ECG database data to train the cell phone to
learn to adapt to apt to its users physiological conditions
to achieve better ECG feature extraction and more accurate
CVD classification results. To acquire real-time ECG signals,
Alive Technologys state-of-the-art wireless ECG and heart
monitor is employed, which is a light-weight, low-power
wearable 2-lead ECG sensing device capable of recording 300
8-bit samples per second. It is equipped with a Bluetooth
transmitter, which can send its data to cell phones or other
wireless devices.
In addition to the constructed physical test bed, the complete platform includes an efficient ECG processing module
capable of taking the collected ECG data and dynamically
extracting various ECG features, such as detecting P wave,
QRS complex, and T wave, and producing a ECG summary
report that may include, but are not limited to: the heart
rate, rhythm, axis, RR interval, QRS duration, ST segment,
P/Q/R/S/T wave morphologies. The produced ECG summary
report will be similar to those generated by stationary ECG
machines used by cardiologists in many hospitals. First, a rulebased method is implemented to perform a quick, first pass
of CVD detection. This serves as a light-weight checker for
diagnosing CVDs on the cell phone platform in real time.
Upon the acquisition of each heart beat, this light-weight
CVD checker will process and analyze each heart beat and
classify it by condition, be it normal or a condition indicating
a CVD, for example premature ventricular contraction (PVC).
After being processed by the rule-based checker, the initial
classification results will be fed into a Hybrid Fuzzy Network
based neural classifier to determine the possible indications
for any abnormal CVDs.
In order to perform a rapid prototyping of the algorithms,
a LabVIEW-based platform has been developed. Using LabVIEW Mobile Module, the algorithms implemented in MATLAB are tested on the Windows Mobile cell phone in order
to assess their performance for being deployed in real-time
mobile environments.
4) HealthGear: HealthGear [6] is a real-time wearable
system for monitoring, visualizing and analyzing physiological
signals. HealthGear consists of a set of non-invasive physiological sensors wirelessly connected via Bluetooth to a cell
phone which stores, transmits and analyzes the physiological
data, and presents it to the user in an intelligible way.
HealthGear is implemented using a blood oximeter to monitor
the users blood oxygen level and pulse while sleeping. Two
different algorithms are described for automatically detecting
sleep apnea events and the performance of the overall system
in a sleep study with 20 volunteers is illustrated. HealthGear
with an oximeter constantly monitors and analyze the users
blood oxygen level (SpO2), heart rate and plethysmographic
signals in a light-weight fashion.
In HealthGear the authors have implemented two methods
for the automatic detection of sleep apnea events. The first
method operates in the time domain, while the second operates

418

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

in the frequency domain. The experiment consisted of using
HealthGear by each participant for one full night in their own
homes. After the meeting, the participants took the hardware
with them and wore it during that night in their homes. They
returned the system the next morning. After the experiment,
they were asked to fill out a second questionnaire which focused on rating the experience and the usability of HealthGear.
The experiment was successful as in the sleep study (1)
None of the volunteers experienced any technical problem and
they all collected data successfully, (2) Automatic Obstructive
Sleep Apnea (OSA) detection algorithms identified with 100%
accuracy all 3 cases of known OSA and clearly identified 1
case of severe and 2 cases of mild OSA, among the pool
of participants who suspected they might be suffering from
the condition, but had not undergone any medical diagnosis;
(3) 100% of participants were willing to wear HealthGear to
monitor their sleep on a regular basis and have recommend
the system to friends and family.
5) EmotionSense: EmotionSense [48] is a mobile sensing
platform for social psychological studies based on mobile
phones. The key characteristics of this system include the
ability of sensing individual emotions as well as activities,
verbal and proximity interactions among members of social
groups. This can be used to understand the correlation and the
impact of interactions and activities on the emotions and behavior of individuals. EmotionSense system consists of several
sensor monitors, a programmable adaptive framework based
on a logic inference engine, and two declarative databases
(Knowledge Base and Action Base). Each monitor is a thread
that logs events to the Knowledge Base, a repository of all the
information extracted from the on-board sensors of the phones.
The system is based on a declarative specification (using firstorder logic predicates) of facts, i.e., the knowledge extracted
by the sensors about user behavior (such as his/her emotions)
and his/her environment (such as the identity of the people
involved in a conversation with him/her). actions, i.e., the set
of sensing activities that the sensors have to perform with
different duty cycles, such as recording voices (if any) for 10
seconds each minute or extracting the current activity every 2
minutes. By means of the inference engine and a user-defined
set of rules (a default set is provided), the sensing actions are
periodically generated. The actions that have to be executed
by the system are stored in the Action Base. The Action Base
is periodically accessed by the EmotionSense Manager that
invokes the corresponding monitors according to the actions
scheduled in the Action Base. Users can define sensing tasks
and rules that are interpreted by the inference engine in order
to adapt dynamically the sensing actions performed by the
system.
The authors have presented the design of two novel subsystems for emotion detection and speaker recognition which are
built on a mobile phone platform. These subsystems are based
on Gaussian Mixture methods for the detection of emotions
and speaker identities. EmotionSense automatically recognizes
speakers and emotions by means of classifiers running locally
on off-the-shelf mobile phones. A programmable adaptive
system is proposed with declarative rules. The rules are
expressed using first order logic predicates and are interpreted
by means of a logic engine. The rules can trigger new sensing

actions (such as starting the sampling of a sensor) or modify
existing ones (such as the sampling interval of a sensor).
The results of a real deployment designed in collaboration
with social psychologists are presented. It is found that the
distribution of the emotions detected through Emotion- Sense
generally reflected the self-reports by the participants.
6) Darwin: Emiliano Miluzzo et al [22] have presented
Darwin, an enabling technology for mobile phone sensing that
combines collaborative sensing and classification techniques to
reason about human behavior and context on mobile phones.
Darwin advances mobile phone sensing through the deployment of efficient but sophisticated machine learning techniques
specifically designed to run directly on sensor-enabled mobile phones (i.e., smart phones). Darwin is a collaborative
reasoning framework built on three concepts: classifier/model
evolution, model pooling, and collaborative inference. Darwin
can be applied to other mobile phone sensing applications and
systems which use the microphone as an audio sensor. Darwin
can be integrated in a mobile social networking application, a
place discovery application, and a friend tagging application.
It uses classifier evolution to make sure the classifier of an
event on a phone is robust across different environments.
Darwin operates in three steps. In the first step each mobile
phone builds a model of the event to be sensed through a
seeding phase. Over time, the original model is used to recruit
new data and evolve the original model. The intuition behind
this step is that, by incrementally recruiting new samples, the
model will gather data in different environments and be more
robust to environmental variations. The phone computes the
feature vector locally on the phone itself and sends the features
to a backend server for training. In the second step when
multiple mobile phones are co-located they exchange their
models so that each phone has its own model as well as the colocated phones’ models. Model pooling allows phones to share
their knowledge to perform a larger classification task (i.e.,
in the case of speaker recognition, going from recognizing
the owner of the phone to recognizing all the people around
in conversation). After models are pooled from neighboring
mobile phones, each phone runs the classification algorithm
independently. However, each phone might have a different
view of the same event i.e., different phone sensing context.
In third step the collaborative inference exploits this diversity
of different phone sensing context viewpoints to increase the
overall duality of classification accuracy. The raw sensor data
never leaves the mobile phone nor is it stored on the phone.
Only models and features are stored which are computed from
the raw sensor data.
Darwin represents a general framework applicable to a wide
variety of emerging mobile sensing applications, a speaker
recognition application and an augmented reality application
are implemented to evaluate the benefits of Darwin. In the
case of the speaker recognition application, the content of a
conversation is never disclosed, nor is any raw audio data ever
communicated between phones. The data exchanged between
phones consists of classification confidence values and event
models. Mobile phone users always have the ability to opt in
or out of Darwin, hence, no model pooling and collaborative
inference would take place unless the users make such a
determination.

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

Experimental results are shown from eight individuals carrying Nokia N97s and it is demonstrated that Darwin improves
the reliability and scalability of the proof-of-concept speaker
recognition application without additional burden to users. The
results indicate that the performance boost offered by Darwin
is capable of setting problems with sensing context and
conditions and presents a framework for scaling classification
on mobile devices.
7) Activity Recognition system: Jennifer R. Kwapisz et al
[11] have described and evaluated a system that uses phonebased accelerometers to perform activity recognition, a task
which involves identifying the physical activity a user is performing. For implementation of this system the authors have
collected labeled accelerometer data from twenty-nine users
as they performed daily activities such as walking, jogging,
climbing stairs, sitting, and standing, and then aggregated this
time series data into examples that summarize the user activity
over 10- second intervals. Then the resulting training data is
used to induce a predictive model for activity recognition. The
activity recognition model allows to gain useful knowledge
about the habits of millions of users passively just by having
them carry cell phones in their pockets. Applications of this
system includes automatic customization of the mobile devices
behavior based upon a users activity (e.g., sending calls
directly to voicemail if a user is jogging) and generating a
daily/weekly activity profile to determine if a user (perhaps
an obese child) is performing a healthy amount of exercise.
B. Social Opportunistic Mobile Phone Sensing Systems
The details of social opportunistic mobile phone sensing
systems are as follows:
1) WhozThat: WhozThat [27] is a system that achieves
the vision of seamless social interaction through MoSoNet
technology by implementing a basic two step protocol that
first shares identities between any two nearby cellular smart
phones (e.g., via Bluetooth or WiFi) and then consults an
online social network with the identity to import the relevant
social context into the local context to enrich local human
interaction. WhozThat is a context-aware music player in a
bar that could adapt its song playlist based on the tastes of
the people in the bar, that is, on the social profiles obtained
from the identities advertised by the smartphones of people
in that bar. The authors have assumed that smartphones will
soon become ubiquitous, and will possess both a local wireless
capability e.g., Bluetooth or WiFi and a wide-area wireless
connection to the Internet, through either a cellular data plan
such as enhanced data rates for GSM evolution (EDGE), a
universal mobile telecommunications system (UMTS) etc.
The WhozThat protocol is advantageous for its simplicity,
energy/bandwidth efficiency, agnosticism, and extensibility.
The two-phase protocol is powerful yet simple to implement,
which should substantially ease its deployment on mobile
devices. The protocol is also lightweight for mobile devices
by expending only a small amount of energy and bandwidth.
Modest time/energy is spent periodically transmitting the
social ID and small queries to the online social networking
site, whereas the rest is consumed in the relatively low-energy
task of receiving the fetched social context data. Another

419

great advantage of design of WhozThat is that it is fully
extensible, so that an array of more advanced applications and
services can be integrated into the basic information-sharing
mechanism.
An application is context-aware music playlist generation
application, called WZPlaylistGen. It is implemented on a PC
with the Java Standard Edition (SE) run-time environment. After installation, WZPlaylistGen Listens over Bluetooth using
the WhozThat protocol for advertised social networking IDs,
retrieves the users musical preferences from Facebook, uses
the Audio scrobbler API to generate a playlistand then plays
that play list in the local environment.
2) OLS: Opportunistic Localization system (OLS) [49]
is an opportunistic location system based on smart phone
devices. which enables localization services that works seamlessly throughout heterogeneous environment including indoors as opposed to GPS based systems being available only
outdoors under unobstructed sky. People are eager to locate
their peers on a campus or in buildings and stay connected
with them and OLS makes that simple. OLS is a phonecentric localization system which grasps at any location related
information readily available in the mobile phone. In contrast
to most of the competing indoor localization systems, OLS
does not require a fixed dedicated infrastructure to be installed
in the environment making OLS a truly ubiquitous localization service. OLSs architecture is migrated from the original
client-server to the current service-oriented architecture to
cope with increasing demands on reusability across various
environments and platforms and to scale up to service a large
number of various clients. The server side runs the main
OLS services such as the location, management, registration
and communication service, data fusion engine, database,
and visualization provider. OLS can also interface third-party
external services such as Google Earth. The key feature of
OLSs design is its ease-of use and therefore, when interfaced
with Google Earth, an OLS customer can build an indoor
building environment with Google Sketch-Up drawing tool.
OLS then imports the Sketch-Up building model and parses
it to the data fusion engine to perform the map filtering upon
the fused location information The OLS Server is responsible
for hosting the application and providing all the services.
The Visualization Provider offers 2D and 3D visualization.
The Communication Service is responsible for providing
and maintaining communication interface between clients and
the OLS Server. The Registration Service registers localized
objects and OLS clients, the users of the Location Service.
The Location Service provides location updates for localized
objects and instantiates and manages the instances of the
main processing components of OLS Server. The Data Fusion
Engine provides the data fusion service.. The Management
Service manages and maintains the OLS Server and facilitates
its administration.
The Database stores environment description such as maps
and 3D model of buildings. It also stores information necessary for the data fusion algorithm etc. The Mobile Client is
a smart phone device, which is localized by the OLS server
upon the streamed sensory data from its GPS, GSM/UMTS,
accelerometers Wi-Fi and Bluetooth. The Mobile client can
also subscribe for location updates in order to further process

420

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

TABLE IV
O PPORTUNISTIC P ERSONAL S ENSING S YSTEMS
Project Title /
System
PerFall ID [8]
I-Fall [47]

Hardware
Description
Android
Phones
Android
Phone

Gl
GI

Heart ToGo [7]

Alive Bluetooth
ECG
Monitor,
Alive
Heart
Activity Monitor,
Windows Mobile

Heart Gear [6]

Nonins
Clex
Oximeter,
Audiovox
SMT5600 GSM
Cell phone, XPod
and batteries
Nokia 6210 Navigator Phone

Emotion
[48]

Sense

Activity Recognition [11]

Nexus One, HTC
Hero, Motorola
BackFlip

Software
Description
Java Andriod 1.6
SDk, Eclipse
Android SDK

Communication
Modules
GSM Network,
SMS
SMS, GSM Network

Types Of Sensors
Phones
Accelerometer
Phones Tri-axial
Accelerometer,
GSP Sensor
ECG sensor, 3axis Accelerometer

Applications

Area

Fall
Detection
System
Fall
Detection
System

Special Purpose
Application
Special Purpose
Application

MS Visual Stdio,
Matlab,
LAB
View,
Visual
C++, EPLimited,
arrhythmia
software package
MS
Windows
Mobile 2003 OS,
Promi
ESD-2
module

Bluetooth

Cardiovascular
Disease
Detection

Health Monitoring

Bluetooth

Oximetry Sensor

Sleep Apnea Application

Health Monitoring

Nokia Symbian
S60,
C++,
Python, HTKtool
kit,
Windows,
Linux
Android OS

Bluetooth

Phones
Accelerometer,
Microphone

Emotion
and
Speaker
Recognition

Human
Behavioral
Monitoring

GSM Network

Phones
Accelerometer

Activity
nition

Human
Behavioral
Monitoring

and visualize its location etc. The Laptop Client is a third-party
client typically with higher processing and 3D visualization
capabilities. The laptop clients run third-parties location based
applications, which further process the location data provided
by OLS.
C. Public Opportunistic Mobile Phone Sensing Systems
The details of public opportunistic mobile phone sensing
systems are as follows:
1) Nericell: Nericell [11] is a system that performs rich
sensing by piggybacking on smart phones that users carry with
them in normal course. The authors have focused specifically
on the sensing component, which uses the accelerometer,
microphone, GSM radio, and/or GPS sensors in these phones
to detect potholes, bumps, braking, and honking. Nericell
addresses several challenges including virtually reorienting the
accelerometer on a phone that is at an arbitrary orientation,
and performing honk detection and localization in an energy
efficient manner. The authors have used the idea of triggered
sensing, where dissimilar sensors are used in tandem to conserve energy. The data is gathered through GPS-tagged cellular
tower measurements during several drives over the course of
4 weeks. GPS-tagged accelerometer data measurements are
also separately gathered on drives on some of the same routes
over the course of 6 days. Cellular tower measurements are
also gathered over the course of a few days in the Seattle area.
The system could be used to annotate traditional traffic
maps with information such as the bumpiness of roads, and
the noisiness and level of chaos in traffic, for the benefit of the
traffic police, the road works department, and ordinary users.
Nericell uses honk detection to identify noisy and chaotic
traffic conditions like that at an unregulated intersection.
Localization is a key component of Nericell, as it is in
any sensing application. Each phone participating in Nericell

Recog-

would need to continuously localize its current position, so
that sensed information such as honking or braking can be
tagged with the relevant location. Thus, an energy-efficient
localization service is a key requirement in Nericell. Thus,
the authors have relied on using GSM radios for energyefficient coarse-grain localization and when necessary they
have triggered the use of fine-grain localization using GPS.
The effectiveness of the sensing functions in Nericell is
evaluated based on experiments conducted on the roads of
Bangalore, with promising results.
2) Road Bump Monitor: Road Bump Monitor [45] is an
application of PRISM platform which is inspired by Pothole Patrol and Nericell and involves opportunistic sensing,
wherein phones equipped with GPS and accelerometer sensors
are used to detect and locate road bumps automatically without
any user involvement. The application server uses the deployor-cancel mode rather than the trigger mode. Also, the sensed
(accelerometer) data is processed locally on the phones to
extract the desired information (the location of road bumps),
before it is shipped back to the server.
To evaluate this application, an experiment was conducted
where the 3 accelerometer-equipped phones were taken on
a 2.5 km long drive through a neighborhood. The actual
locations of the road bumps were manually recorded. Then
the road bump monitoring application was opportunistically
deployed on the phones and the bumps detected by the
application were compared with the manual recording of road
bumps.
V. S ECURITY AND P RIVACY IN M OBILE P HONE S ENSING
S YSTEMS
Security and privacy of mobile phone sensing systems is
still in its infancy. However some of the existing systems
provide reasonable privacy and security which are described
below.

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

421

TABLE V
O PPORTUNISTIC P UBLIC S ENSING S YSTEMS
Project Title /
System
NeriCell [11]

Hardware
Description
Nokia N95, Hpi
PAQnw6965,
HTCTyphoon,
Sparkfun witilt
Accelerometer

Software
Description
Perl,
windows
mobile
5.0,Windows
mobile
2003,
Python, C#

Communication
Modules
GSM,
GPRS,
UNTS, EDGE,
Wifi, Bluetooth

Mobile Century

Nokia N95

VTL database

GSM Network

Road
Bump
Monitor [45]

HPiPAQ nw6965,
Samsung SGHi780,
HTC
Adrantoge
7510,7501

MS
Windows
Mobile 5.0, 6.1,
Windows 7, C#,
C/C++

Bluetooth,
GPRS, EDGE,
3G Radio

A. AnnoySense
AnonySense [50] is a privacy-aware system for realizing
pervasive applications based on collaborative, opportunistic
sensing by personal mobile devices. AnonySense allows applications to submit sensing tasks to be distributed across
participating mobile devices, later receiving verified, yet
anonymized, sensor data reports back from the field. The
foundation of the AnonySense architecture rests on a dynamic
set of mobile nodes (MNs) that volunteer to participate.
The authors have assumed that there are a variety of node
platforms, including mobile phones, PDAs, laptops, or other
personal mobile devices, with widely varying capabilities
for sensing the physical and network environment around
them. The applications and mobile nodes communicate via the
Internet with the systems four core services: the registration
authority, the task service, the report service, and a Mix
network. These services can be administratively independent,
in the sense that they are operated by autonomous entities,
with trust relationships.
The Mobile Nodes (MNs) are devices with sensing, computation, memory, and wireless communication capabilities. Mobile nodes are carried by people, or are attached to objects such
as vehicles. The Registration Authority (RA) is responsible
for registering nodes that wish to participate, and for issuing
certificate to the task service and the report service so that
applications and nodes can verify the authenticity of the services. The Task Service (TS) receives task descriptions from
applications, performs some consistency checking (related to
the carriers privacy requirements and the feasibility of the
task), and distributes the current tasks to mobile nodes when
they ask to download new tasks. It returns to the application
a token that may be used in retrieving the tasked The Report
Service (RS) receives reports from mobile nodes, aggregates
them internally to provide additional privacy, and responds
to queries from applications who present a token to collect
their tasks sensor data. The Mix Network (MIX) serves as
an anonymizing channel between mobile nodes and the report
service: it de-links reports submitted by MNs before they reach
the RS data.
The authors have defined a simple and expressive language called AnonyTL for applications to specify their tasks.
AnonyTL allows an application to specify a tasks behavior by
providing a set of acceptance conditions, report statements,

Types Of Sensors
Phones
Microphone,
GSM
Radio,
GPS
sensor,
Accelerometer,
Camera
Phones GPS Sensor
Phones
Microphone,
Camera,
GPS
Sensor,
Accelerometer

Applications

Area

Bump, Breaking
and Honking Detection

Traffic Monitoring

Real Time Traffic
Estimation
Road Bumps Detection

Traffic Monitoring
Traffic Monitoring

and termination conditions. The authors have described their
trust model according to which each entity trusts about the
others. The two major protocols are presented: one for getting
tasks from applications to mobile nodes, and the other for
mobile nodes to report sensor data back to applications. These
AnonySense protocols according to the given trust model
provide anonymity to the MN users and ensures integrity of
the sensor data reported to the applications.
The feasibility of this approach is shown through two
plausible applications: a Wi-Fi rogue access point detector and
a lost-object finder. Results have shown that sensor data can
be reliably obtained, from anonymous users, without much
overhead.
B. Secure SocialAware
Secure SocialAware [30] is a framework to support secure
and anonymous exchange of social network or other personal
information throughout a users physical location. It allows for
the interaction of social network information with real-world
location-based services without compromising user privacy
and security. Through exchanging an encrypted nonce (EID)
associated with a verified user location, SSA allows location
based services to query the local area for social network
information without disclosing user identity or any set of
information which could be positively matched to users.
The Secure SocialAware (SSA) framework consists of three
major components: the stationary component (SC), the mobile
component (MC), and the authentication server (AS). The
SC is embedded into the users environment, while the MC
component resides on mobile devices. The SC is responsible
for detecting the presence of users, obtaining information
about these users from the AS, and performing actions based
on this information. The MC on a users mobile device
is responsible for advertising that users encrypted identifier
(EID) using a wireless technology such as Bluetooth so that
it is available to the SC. The AS generates unique EIDs for
each MC, and provides a service to the SC so that the SC can
obtain the users information from a social networking web site
given an EID. The AS allows SCs and MCs to join the SSA
system by signing up for stationary and mobile user accounts,
respectively. After a mobile user signs up for a user account,
the AS assigns that user a unique EID. The AS provides
secure services that the MC uses to determine its EID and

422

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

inform the AS of its current location. The AS also provides
a secure service that the SC uses to retrieve the mobile users
information from a social networking Web site given that users
EID.
The authors have implemented a context-aware mobile social networking application, called SocialAwareFlicks, which
uses SSA and demonstrates the feasibility of the SSA framework. SocialAwareFlicks displays recommended movie trailers that match the movie preferences of one or more users
jointly watching a common display. SocialAwareFlicks could
be deployed in locations such as video-rental establishments
for marketing purposes, to make customers aware of new
video rentals that match their interests. Performance metrics
are gathered for the SSA Authentication Server and the results
have shown that it works reasonably well.
C. SmokeScreen
Landon P. Cox et al [51] have presented a system called
SmokeScreen that provides flexible and power-efficient mechanisms for privacy management. The authors have described
two complementary mechanisms. First, to enable flexible
sharing between social relations, users broadcast clique signals which can be activated or deactivated depending on
the social environment. Second, to enable flexible sharing
between strangers, users also broadcast opaque identifiers
(OIDs) which are time, place, and broadcaster specific and
can only be resolved to an identity via a centralized trusted
broker. Together these mechanisms allow users to both manage
their location-privacy and reap the full benefit of presencesharing. Furthermore, these mechanisms are power-efficient
since devices can avoid broadcast-time cryptographic work
by pre-computing and comfortably storing 48 hours worth of
future signals and OIDs.
Trust in SmokeScreen is splited into two categories: 1) users
may be trusted to handle shared cryptographic state such as
secret keys, and 2) users may be trusted to record a user’s
presence at a given place and time. The first category of
trust is symmetric and established among a group of social
relations. The second category is potentially asymmetric and
depends on the social context of a particular time and place.
SmokeScreen is resilient to collusion among adversaries, but is
vulnerable to collusion between adversaries and trusted users.
SmokeScreen also cannot prevent an adversary from detecting
a user’s absence. If a user leaves a location, SmokeScreen
will not continue to broadcast their presence information.
SmokeScreen is currently focused on device information such
as Bluetooth device names and WiFi SSIDs that are easy to
change in software, but full presence-privacy also requires
eliminating the static MAC addresses broadcast by layer two
wireless protocols.
The authors have presented four design goals control,
disclosure, isolation, and dispersion and with these goals in
mind, they have separated the problem of presence privacy into
two cases and applied a separate solution to each case: clique
signals regulates haring between social relations and brokered
exchanges regulate sharing between strangers. The authors
have implemented the prototype system consists of three
components: the mobile device, the broker, and the client. The

system is evaluated by doing Reality Mining Analysis, Power
consumption analysis and Resolution Performance.
D. Prisense
Jing Shi et al. [52] have presented the design and evaluation of PriSense, a novel solution to privacy-preserving data
aggregation in people- centric urban sensing systems. PriSense
is based on the concept of data slicing and mixing and can
support a wide range of statistical additive and non-additive
aggregation functions such as Sum, Average, Variance, Count,
Max/Min, Median, Histogram, and Percentile with accurate
aggregation results. PriSense can support strong user privacy
against a tunable threshold number of colluding users and
aggregation servers. PriSense consists of the following two
components. The first component aims at additive aggregation
functions. Its basic idea is for each node to slice its data into a
certain number (say, n+1) of slices before answering the query
from an aggregation server. Then it randomly chooses n other
nodes, called its cover nodes, to which a unique data slice is
sent.
Finally, each node sends to the aggregation server the sum
of its own slice left and the slices received from others along
with little side information, based on which the aggregation
server can compute an accurate additive aggregation result.
In this way, a users data will be disclosed only when the
aggregation server and all his cover nodes collude. The
second component is a non-trivial combination of the slicing
and mixing technique and binary search to enable privacy
preserving Count queries and to further support a wide range
of non-additive aggregation functions like max/min, median,
histogram, and percentile, all with accurate results.
The system features a high-speed wireless backbone consisting of M powerful aggregation servers (AS) which also
provide network access services for system nodes. Each AS is
in charge of a certain region referred to as a cell and interacts
with nodes there. The term node is used to indicate a human
being who carries a portable device like mobile phones, PDAs,
laptops, and MP3 players. A node may join the system at
will to participate in data sensing and sharing and also enjoy
network access. To prevent fraudulent use of system resources
and also provide basic privacy assurance to nodes, the system
and nodes need mutually authenticate each other.
The authors have focused on thwarting attacks on breaching
nodes data privacy. Other important issues such as DoS
defenses are outside the scope. The performance of PriSense
is thoroughly evaluated by simulating a cell with N = 100
nodes, among which 50 are malicious, and a malicious AS at
the center of the cell. The evaluation results demonstrate that
PriSense is very suitable and practical as a solution to privacypreserving data aggregation in people-centric urban sensing
systems.
E. SMILE
Secure MIssed connections through Logged Encounters
SMILE [53] is a privacy-preserving missed-connections service in which the service provider is un-trusted and users
are not assumed to have pre-established social relationships
with each other. At a high-level, SMILE uses short-range

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

wireless communication and standard cryptographic primitives
to mimic the behavior of users in existing missed-connections
services such as Craigslist: trust is founded solely on anonymous users ability to prove to each other that they shared an
encounter in the past. In SMILE trust is established solely
on the basis of shared encounters; the service provider is not
trusted to access users location information.
At the heart of the service is the notion of an encounter,
which is defined as a short period of co-location between
people. This service is modeled after the popular missedconnections services found in newspapers and websites like
Craigslist. The key features of a missed-connections service
are: (1) strangers who were at the same place and time
should be able to contact each other at a later time; (2)
once connected, those strangers should be able to prove
to each other that they actually encountered one another.
Three complementary techniques are used to provide these
features without exposing users location information to either
the service provider or adversaries claiming to have been
physically present at a particular place and time: First is that
Co-located participants perform periodic passive key exchange
with each other using short-range wireless broadcasts. Second
is that Participants use key hashes to establish a rendezvous
point at a centralized server without exposing the encounter
location to the service provider. And thirst is that Participants
limit the service providers ability to infer which pairs of
users were involved in an encounter by carefully inducing
key-hash collisions at the server and relying on clients to
resolve ambiguities. The basic structure of SMILEs messaging
protocol is as follows: Firstly mobile users passively exchange
cryptographic keys with nearby peers. Secondly users periodically upload batches of key hashes to a central coordinating
server. Thirdly a user sends a message to the server encrypted
with one such key and labels it with the corresponding key
hash. Fourthly the server forwards the encrypted message
to all users that have uploaded the same key hash. Lastly
only encounter participants are able to decrypt the message.
SMILE offers protection against malicious agents attempting
to determine or disclose a users location history, encounter
history, or private messages.
SMILE is evaluated using protocol analysis, an informal
study of Craigslist usage, and experiments with a prototype
implementation and found it to be both privacy-preserving and
feasible.
F. Serendipity
Nathan Eagle and Alex have presented a system called
Serendipity [29]. This system is used for cueing informal
interactions using the combination of Bluetooth hardware. It
addresses to identify people and a database of user profiles.
Serendipity consists of a central server containing information
about individuals in a user’s proximity and several methods
of matchmaking. These profiles are similar to those stored
in other social software programs such as Friendster and
Match.com. However, Serendipity users also provide weights
that determine each piece of information’s importance when
calculating a similarity score. The similarity score is calculated
by extracting the commonalities between two users’ profiles

423

and summed using user-defined weights. If the score is above
the threshold set by both users, the server alerts the users
that there is someone in their proximity whom might be
of interest. The thresholds and the weighting scheme that
defines the similarity metric can be set on the phones and
correspond to the existing profile types such as meeting,
outdoors, silent mode, etc. When it has been determined that
the two individuals should have an interaction, an alert is sent
to the phones with each user’s picture and a list of talking
points. Serendipity receives the BTID (Bluetooth Identification
Code) and threshold variables from the phones and queries a
MySQL database for the user’s profile associated with the
discovered BTID address. If the profile exists, another script
is called to calculate a similarity score between the two
users. When this score is above both users’ thresholds, the
script returns the commonalities as well as additional contact
information (at each user’s discretion) back to the phones.
Unlike other social software introduction systems, Serendipity
does not require users to login to a website to register for the
service.
A current user just needs to send the installation file
(Symbin.sis) to a friend’s compatible phone over Bluetooth or
IR. When the application is opened and installed, the phone
automatically connects to the network and the server creates
a new profile with the friend’s phone number, BTID, and
a link to the original user as a ’friend’. By replying to the
introduction message with a number value from one to ten,
users can give feedback about the value of the introduction.
The Serendipity system has been tested and iterated upon
for almost one year. There are currently one hundred Serendipity users divided into two university departments. The privacy
concerns involving Serendipity are numerous. Providing a
service that supplies nearby strangers with a user’s name and
picture is rife with liability and privacy issues. Utmost care
must be made to ensure this service never jeopardizes a user’s
expectation of privacy.
VI. D ISCUSSION & R ESEARCH C HALLENGES
The development of urban sensing systems is still in its
infancy as there exits a lot of interesting and unresolved issues
and research challenges within such sensing systems.
A people-centric urban sensing system differs significantly
from a traditional wireless sensor network in many ways.
For example the system devices are no longer owned and
managed by a single authority but belong to individuals
with diverse interests. Also system devices have much more
powerful resources than sensor nodes and can be charged
regularly. Another difference is that sensing data are more
related to interactions between people and between people
and their surroundings instead of some physical phenomena
of interest. Finally, people are no longer just passive data
users but also active data contributors. The people-centric
architectural approach is not without its challenges. Firstly,
reliance on a people-powered mobile architecture means that
sensing device characteristics will be heterogeneous, different
sensor types (e.g., camera, microphone, accelerometer) will
be embedded in different devices and these devices will have
different storage, processing and communication capabilities.

424

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

TABLE VI
M OBILE S ENSING S ECURITY S YSTEMS
Project Title /
System
AnonySense [50]

Hardware
Description
Nokia N800, Apple iPhone

Secure
Social
Aware [30]

Macbook
notebook

SmokeScreen
[51]

Nokia
6670,
Sharp
Zaurus
SL-5600 PDA,
Nokia 6600

Serendipity [29]

Nokia Series 60
phone

Pro

Software
Description
SQL,
XQuery,
Linux
server,
C++,
XML,
Open SSL
Mac
OS
X
10.5 JME, J2SE
5.0, MIDP 2.0,
BlueCove JSR82 Emulator tool,
Open
Source
SimpleJPA tool,
VLC
media
player
Symbian
OS,
Linux
2.4.18,
Python,
C++,
Postgre
SQL
7.4.7,
Pretec
CompactFlash
Mobile Information Device Profile MIDP 2.0,
MySQL

Communication
Modules
Bluetooth, WiFi
S

Security
Applications
Method/Techniques
HA-1,
RSA,
RogueFinder,
Open SSL secure
ObjectFinder
channel

Bluetooth

HTTPS, SHA-1
cryptographic
hash function

SocialAwareFlicks

Social Interaction

Bluetooth, WiFi

RSA, AES

Presence-sharing
Apllication

Social Interaction

Bluetooth, WiFi,
GPRS

Privacy Control
Policies
for
Users Proximity

BlueAware,
BlueDar

Social Interaction

Secondly, sensors will be carried in a manner most convenient
to the human (e.g., in a pocket or purse) and not necessarily
in a manner most conducive to high fidelity data gathering
for an application. Thirdly, due to the uncontrolled mobility
of people, rendezvous among the sensors and the static infrastructure elements may not happen on the time scales best
suited to the needs of applications. Together these challenges
embody what we call sensor availability problem.
The widespread deployment of urban sensing systems face
many obstacles. Both classes of urban sensing systems i.e.,
participatory and opportunistic have their own challenges and
research issues. As participatory sensing begins and ends with
people, both individuals and community members, thus human
element adds some additional security challenges [54]. Firstly,
with respect to privacy, the user may leak more information
about his/her identity by the nature of his/her response.
Secondly, a users textual response may contain grammatical
errors, abbreviations, or other clues about the users identity.
Thirdly, with respect to integrity, the user has an easy way
to fabricate sensor data of his/her choosing and the reliability
of data thus depends upon the ability of the user to respond
the task effectively. Also the users can easily suppress data by
either not responding to tasks, or by responding to tasks with
data that is not useful.
Along with the benefits of opportunistic sensing, the opportunistic model also offers many challenges. Opportunistic
sensing systems take on much more of the decision making
responsibility and are thus more complex that may use more
resources [34]. Providing sensing coverage when sensor mobility is uncontrolled, ensuring consistent sensor calibration,
determining sensor context to allow for more targeted sampling and protecting custodian privacy [33] are some of the
challenges of opportunistic sensing systems.
Cell phones have become an indispensable tool not only for
todays highly mobile workforce but also for general people
to transfer and exchange diverse mobile data. Thus, securing

Area
Special Purpose
Application

mobile phone users critical data as well as protecting mobile
phone based sensing application systems from unauthorized
access and diverse attacks is also a major concern of mobile
phone sensing systems. Some of the security threats to mobile
or cell phones include loss, theft or disposal, unauthorized
access, malware, spam, electronic eavesdropping, electronic
tracking, cloning and server resident data [55]. As mobile
phones are small in size and when are used outside home
or office, they can be easier to misplace or to have stolen
than a laptop or notebook computer. Also if they do fall into
the wrong hands, gaining access to the information they store
can be relatively easy. Communications networks, desktop
synchronization, and tainted storage media can be used to
deliver malware to mobile phones.Malware is often disguised
as a game, device patch, utility, or other useful third-party
application available for download. Once installed, malware
can initiate a wide range of attacks and spread itself onto
other devices. Similar to desktop computers, cell phones and
PDAs are subject to spam, but this can include text messages
and voice mail, in addition to electronic mail. Besides the
inconvenience of deleting spam, charges may apply for inbound activity. Spam can also be used for phishing attempts.
Electronic eavesdropping on phone calls, messages, and other
wirelessly transmitted information is possible through various
techniques. Installing spy software on a device to collect and
forward data elsewhere, including conversations captured via
a built-in microphone, is perhaps the most direct means, but
other components of a communications network, including
the airwaves, are possible avenues for exploitation. Location
tracking services allow the whereabouts of registered cell
phones to be known and monitored. While it can be done
openly for legitimate purposes, it may also take place surreptitiously. It is also possible to create a clone of certain phones
that can masquerade as the original. Server-resident content,
such as electronic mail maintained for a user by a network
carrier as a convenience, may expose sensitive information

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

through vulnerabilities that exist at the server. These threats
can be countered by using authentication, encryption and
temporary identification numbers ensuring the privacy and
anonymity of the systems users as well as safeguarding the
system against fraudulent use. Some of the existing privacy
and security aware mobile phone sensing systems use authentication, encryption and cryptographic techniques (shown
in Table V) to confront the above mentioned attacks and
threats. In [56] the authors have described three main issues
with mobile phone social networking systems which include
direct anonymity issues, indirect or k-anonymity issues and
eavesdropping, spoofing, replay and wormhole attacks. They
have also implemented a system called Identity Server for
resolving anonymity problems and countering other attacks.
Although the existing security solutions for mobile phone
sensing systems have promising results of forwarding the data
securely and without compromising users security and privacy,
there is still a need for more and better security and privacy
of health monitoring and social networking systems. In case
of health monitoring systems, the information about the users
health status has to remain secure and should not be allowed
to be disclosed to anyone besides to systems wearer and to
the physicians who are supervising the user. Users private
information also needs to be secured when there is social
interaction using mobile social networks. In building novel
and effective security solutions, the developers must consider
the following needs and challenges [57]. Firstly, the security
solutions must be implemented in an energy saving approach
by keeping in mind the feature of mobile phones that they
have limited battery life and operation time. Secondly, the
limited computing capability and processing power of mobile
devices restrict the applications of many existing complex
security solutions, which require heavy processors. Thirdly,
the restricted size of screen and keyboard restricts the input
and output capabilities of mobile phones, which cause some
security related applications, for example, password protection
may not be easy for mobile users. Fourthly, mobile security
technologies and solutions must be implemented with a higher
portability to address interoperation issues, since mobile devices may be equipped with different mobile platforms and
operation environments.
VII. C ONCLUSION
This paper reviewed the state of the art in research and
development of Mobile Phone Sensing Systems. Smart Phones
are getting smarter because of all the sensors being added to
them. It is shown that the current status of Smart Phone sensors
have the potential to revolutionize various fields of human life.
In-built mobile phone sensors have many such capabilities that
can improve peoples lives cutting down the time it takes to
find things, to prevent people from getting lost, improve health
conditions, and even more serious applications are emerging
that could actually save lives. Security and privacy is one of
the utmost issue that needs more attention while developing
mobile phone sensing systems as when Mobile phone is used
for social interactions users main concern is to secure their
private data. However, this study highlights the fact that there
are still a lot of challenges and issues that need to be resolved

425

for mobile phone sensing systems to become more applicable
to real-life situations and spawn further research in this area.
ACKNOWLEDGMENT
The authors wish to acknowledge the anonymous reviewers
for their valuable comments and special thanks to Jun Zhang
& Chao Chen (Deakin University) for helping to prepare this
manuscripts.
R EFERENCES
[1] X. Bao and R. Roy Choudhury, “Movi: mobile phone based video
highlights via collaborative sensing,” in Proceedings of the 8th
international conference on Mobile systems, applications, and services,
ser. MobiSys ’10. New York, NY, USA: ACM, 2010, pp. 357–370.
[Online]. Available: http://doi.acm.org/10.1145/1814433.1814468
[2] R. K. Rana, C. T. Chou, S. S. Kanhere, N. Bulusu, and W. Hu,
“Ear-phone: an end-to-end participatory urban noise mapping system,”
in Proceedings of the 9th ACM/IEEE International Conference on
Information Processing in Sensor Networks, ser. IPSN ’10. New
York, NY, USA: ACM, 2010, pp. 105–116. [Online]. Available:
http://doi.acm.org/10.1145/1791212.1791226
[3] K. Sha, G. Zhan, W. Shi, M. Lumley, C. Wiholm, and B. Arnetz,
“Spa: a smart phone assisted chronic illness self-management
system with participatory sensing,” in Proceedings of the 2nd
International Workshop on Systems and Networking Support for
Health Care and Assisted Living Environments, ser. HealthNet ’08.
New York, NY, USA: ACM, 2008, pp. 5:1–5:3. [Online]. Available:
http://doi.acm.org/10.1145/1515747.1515755
[4] T. Denning, A. Andrew, R. Chaudhri, C. Hartung, J. Lester,
G. Borriello, and G. Duncan, “Balance: towards a usable pervasive
wellness application with accurate activity inference,” in Proceedings
of the 10th workshop on Mobile Computing Systems and Applications,
ser. HotMobile ’09. New York, NY, USA: ACM, 2009, pp. 5:1–5:6.
[Online]. Available: http://doi.acm.org/10.1145/1514411.1514416
[5] C. Gao, F. Kong, and J. Tan, “Healthaware: Tackling obesity with health
aware smart phone systems,” in Robotics and Biomimetics (ROBIO),
2009 IEEE International Conference on, dec. 2009, pp. 1549 –1554.
[6] N. Oliver and F. F. Mangas, “Healthgear: Automatic sleep apnea detection and monitoring with a mobile phone,” Journal of Communications,
March 2007.
[7] Z. Jin, J. Oresko, S. Huang, and A. Cheng, “Hearttogo: A personalized
medicine technology for cardiovascular disease prevention and detection,” in Life Science Systems and Applications Workshop, 2009. LiSSA
2009. IEEE/NIH, april 2009, pp. 80 –83.
[8] J. Dai, X. Bai, Z. Yang, Z. Shen, and D. Xuan, “Perfalld: A pervasive
fall detection system using mobile phones,” in Pervasive Computing
and Communications Workshops (PERCOM Workshops), 2010 8th IEEE
International Conference on, 29 2010-april 2 2010, pp. 292 –297.
[9] G. Chen, B. Yan, M. Shin, D. Kotz, and E. Berke, “Mpcs: Mobilephone based patient compliance system for chronic illness care,” in
Mobile and Ubiquitous Systems: Networking Services, MobiQuitous,
2009. MobiQuitous ’09. 6th Annual International, july 2009, pp. 1 –
7.
[10] X. Chen, C. Ho, E. Lim, and T. Kyaw, “Cellular phone based online
ecg processing for ambulatory and continuous detection,” in Computers
in Cardiology, 2007, 30 2007-oct. 3 2007, pp. 653 –656.
[11] P. Mohan, V. N. Padmanabhan, and R. Ramjee, “Nericell: rich
monitoring of road and traffic conditions using mobile smartphones,” in
Proceedings of the 6th ACM conference on Embedded network sensor
systems, ser. SenSys ’08. New York, NY, USA: ACM, 2008, pp. 323–
336. [Online]. Available: http://doi.acm.org/10.1145/1460412.1460444
[12] A. Thiagarajan, L. Ravindranath, K. LaCurts, S. Madden,
H. Balakrishnan, S. Toledo, and J. Eriksson, “Vtrack: accurate, energyaware road traffic delay estimation using mobile phones,” in Proceedings
of the 7th ACM Conference on Embedded Networked Sensor Systems,
ser. SenSys ’09. New York, NY, USA: ACM, 2009, pp. 85–98.
[Online]. Available: http://doi.acm.org/10.1145/1644038.1644048
[13] P. Mohan, V. N. Padmanabhan, and R. Ramjee, “Trafficsense: Rich
monitoring of road and traffic conditions using mobile smartphones,”
Tech. Rep. no. MSR-TR-2008-59, April 2008.
[14] R. Herring, A. Hofleitner, D. Work, O.-P. Tossavainen, and A. M.
Bayen, “Mobile millennium - participatory traffic estimation using
mobile phones,” in CPS Forum, Cyber-Physical Systems Week 2009,
San Francisco, CA, April 2009.

426

IEEE COMMUNICATIONS SURVEYS & TUTORIALS, VOL. 15, NO. 1, FIRST QUARTER 2013

[15] D. G. Georgios Adam and I. Oikonomidis, “Tarifa: Traffic and abnormalities road instructor for anyone,” in 2nd Student Workshop on Wireless
Sensor Networks, Athens, Greece, October 2009.
[16] L. Deng and L. P. Cox, “Livecompare: grocery bargain hunting
through participatory sensing,” in Proceedings of the 10th workshop
on Mobile Computing Systems and Applications, ser. HotMobile ’09.
New York, NY, USA: ACM, 2009, pp. 4:1–4:6. [Online]. Available:
http://doi.acm.org/10.1145/1514411.1514415
[17] S. Sehgal, S. S. Kanhere, and C. T. Chou, “Mobishop: Using mobile
phones for sharing consumer pricing information,” in In Demo Session
of the Intl. Conference on Distributed Computing in Sensor Systems,
Santorini, Greece, June 2008.
[18] Y. F. Dong, L. Blazeski, D. Sullivan, S. Kanhere, C. T. Chou, and
N. Bulusu, “Petrolwatch: Using mobile phones for sharing petrol prices,”
in The 7th Annual International Conference on Mobile Systems, Applications and Services, Krakw, Poland, June 2009.
[19] M. Mun, S. Reddy, K. Shilton, N. Yau, J. Burke, D. Estrin,
M. Hansen, E. Howard, R. West, and P. Boda, “Peir, the personal
environmental impact report, as a platform for participatory sensing
systems research,” in Proceedings of the 7th international conference
on Mobile systems, applications, and services, ser. MobiSys ’09.
New York, NY, USA: ACM, 2009, pp. 55–68. [Online]. Available:
http://doi.acm.org/10.1145/1555816.1555823
[20] N. Maisonneuve, M. Stevens, M. E. Niessen, and L. Steels,
“Noisetube: Measuring and mapping noise pollution with mobile
phones,” in Information Technologies in Environmental Engineering,
ser. Environmental Science and Engineering, R. Allan, U. Frstner,
and W. Salomons, Eds. Springer Berlin Heidelberg, 2009, pp.
215–228, 10.1007/978-3-540-88351-7 16. [Online]. Available: http:
//dx.doi.org/10.1007/978-3-540-88351-7 16
[21] M. Bilandzic, M. Banholzer, D. Peev, V. Georgiev, F. BalagtasFernandez, and A. De Luca, “Laermometer: a mobile noise mapping
application,” in Proceedings of the 5th Nordic conference on Humancomputer interaction: building bridges, ser. NordiCHI ’08. New
York, NY, USA: ACM, 2008, pp. 415–418. [Online]. Available:
http://doi.acm.org/10.1145/1463160.1463208
[22] E. Miluzzo, C. T. Cornelius, A. Ramaswamy, T. Choudhury, Z. Liu,
and A. T. Campbell, “Darwin phones: the evolution of sensing and
inference on mobile phones,” in Proceedings of the 8th international
conference on Mobile systems, applications, and services, ser. MobiSys
’10. New York, NY, USA: ACM, 2010, pp. 5–20. [Online]. Available:
http://doi.acm.org/10.1145/1814433.1814437
[23] J. R. Kwapisz, G. M. Weiss, and S. A. Moore, “Activity
recognition using cell phone accelerometers,” SIGKDD Explor.
Newsl., vol. 12, no. 2, pp. 74–82, Mar. 2011. [Online]. Available:
http://doi.acm.org/10.1145/1964897.1964918
[24] T. S. Parikh, “Cam: A mobile interaction framework for digitizing
paper processes in the developing world,” in ACM Symposium on User
Interface Software and Technology (UIST), Seattle, Washington, October
2005.
[25] A. Sashima, Y. Inoue, T. Ikeda, T. Yamashita, and K. Kurumatani,
“Consorts-s: A mobile sensing platform for context-aware services,” in
Intelligent Sensors, Sensor Networks and Information Processing, 2008.
ISSNIP 2008. International Conference on, dec. 2008, pp. 417 –422.
[26] C. Liao, Q. Liu, B. Liew, and L. Wilcox, “Pacer: fine-grained interactive
paper via camera-touch hybrid gestures on a cell phone,” in Proceedings
of the 28th international conference on Human factors in computing
systems, ser. CHI ’10. New York, NY, USA: ACM, 2010, pp. 2441–
2450. [Online]. Available: http://doi.acm.org/10.1145/1753326.1753696
[27] A. Beach, M. Gartrell, S. Akkala, J. Elston, J. Kelley, K. Nishimoto,
B. Ray, S. Razgulin, K. Sundaresan, B. Surendar, M. Terada, and R. Han,
“Whozthat? evolving an ecosystem for context-aware mobile social
networks,” Network, IEEE, vol. 22, no. 4, pp. 50 –55, july-aug. 2008.
[28] E. Miluzzo, N. Lane, S. Eisenman, and A. Campbell, “Cenceme:
Injecting sensing presence into social networking applications,”
in Smart Sensing and Context, ser. Lecture Notes in Computer
Science, G. Kortuem, J. Finney, R. Lea, and V. Sundramoorthy,
Eds. Springer Berlin / Heidelberg, 2007, vol. 4793, pp. 1–28,
10.1007/978-3-540-75696-5 1. [Online]. Available: http://dx.doi.org/
10.1007/978-3-540-75696-5 1
[29] N. Eagle and A. Pentland, “Social serendipity: mobilizing social software,” Pervasive Computing, IEEE, vol. 4, no. 2, pp. 28 – 34, jan.-march
2005.
[30] A. Beach, M. Gartrell, B. Ray, and R. Han, “Secure socialaware: A
security framework for mobile social networking applications,” Department of Computer Science, University of Colorado, Boulde, Technical
Report CU-CS-1054-09, June 2009.

[31] J. Burke, D. Estrin, M. Hansen, A. Parker, N. Ramanathan, S. Reddy,
and M. B. Srivastava, “Participatory sensing,” in World Sensor Web
Workshop, ACM Sensys 2006, Boulder, Colorado, 2006.
[32] N. Bulusu, C. T. Chou, S. Kanhere, Y. Dong, S. Sehgal, D. Sullivan,
and L. Blazeski, “Participatory sensing in commerce: Using mobile
camera phones to track market price dispersion,” in Proceedings
of the International Workshop on Urban, Community and Social
Applications of Networked Sensing Systems - UrbanSense08, in
conjunction with ACM SenSys 2008, Raleigh, USA, Novermber 2008.
[Online]. Available: http://citeseerx.ist.psu.edu/viewdoc/summary?doi=
?doi=10.1.1.139.6491
[33] N. D. Lane, S. B. Eisenman, M. Musolesi, E. Miluzzo, and A. T.
Campbell, “Urban sensing systems: opportunistic or participatory?” in
Proceedings of the 9th workshop on Mobile computing systems and
applications, ser. HotMobile ’08. New York, NY, USA: ACM, 2008,
pp. 11–16. [Online]. Available: http://doi.acm.org/10.1145/1411759.
1411763
[34] A. Campbell, S. Eisenman, N. Lane, E. Miluzzo, R. Peterson, H. Lu,
X. Zheng, M. Musolesi, K. Fodor, and G.-S. Ahn, “The rise of peoplecentric sensing,” Internet Computing, IEEE, vol. 12, no. 4, pp. 12 –21,
july-aug. 2008.
[35] A. Campbell, T. Choudhury, S. Hu, H. Lu, M. K. Mukerjee, M. Rabbi,
and R. D. Raizada, “Neurophone: brain-mobile phone interface using a
wireless eeg headset,” in Proceedings of the second ACM SIGCOMM
workshop on Networking, systems, and applications on mobile
handhelds, ser. MobiHeld ’10. New York, NY, USA: ACM, 2010, pp.
3–8. [Online]. Available: http://doi.acm.org/10.1145/1851322.1851326
[36] E. Miluzzo, T. Wang, and A. T. Campbell, “Eyephone: activating
mobile phones with your eyes,” in Proceedings of the second
ACM SIGCOMM workshop on Networking, systems, and applications
on mobile handhelds, ser. MobiHeld ’10. New York, NY, USA:
ACM, 2010, pp. 15–20. [Online]. Available: http://doi.acm.org/10.1145/
1851322.1851328
[37] H. Lu, W. Pan, N. D. Lane, T. Choudhury, and A. T. Campbell,
“Soundsense: scalable sound sensing for people-centric applications on
mobile phones,” in Proceedings of the 7th international conference
on Mobile systems, applications, and services, ser. MobiSys ’09.
New York, NY, USA: ACM, 2009, pp. 165–178. [Online]. Available:
http://doi.acm.org/10.1145/1555816.1555834
[38] J. Hicks, N. Ramanathan, D. Kim, M. Monibi, J. Selsky, M. Hansen,
and D. Estrin, “Andwellness: an open mobile system for activity
and experience sampling,” in Wireless Health 2010, ser. WH ’10.
New York, NY, USA: ACM, 2010, pp. 34–43. [Online]. Available:
http://doi.acm.org/10.1145/1921081.1921087
[39] S. Consolvo, D. W. McDonald, T. Toscos, M. Y. Chen, J. Froehlich,
B. Harrison, P. Klasnja, A. LaMarca, L. LeGrand, R. Libby, I. Smith,
and J. A. Landay, “Activity sensing in the wild: a field trial of
ubifit garden,” in Proceedings of the twenty-sixth annual SIGCHI
conference on Human factors in computing systems, ser. CHI ’08.
New York, NY, USA: ACM, 2008, pp. 1797–1806. [Online]. Available:
http://doi.acm.org/10.1145/1357054.1357335
[40] P. Jarvinen, T. Jarvinen, L. Lahteenmaki, and C. Sodergard, “Hyperfit:
Hybrid media in personal nutrition and exercise management,” in Pervasive Computing Technologies for Healthcare, 2008. PervasiveHealth
2008. Second International Conference on, 30 2008-feb. 1 2008, pp.
222 –226.
[41] S. Reddy, A. Parker, J. Hyman, J. Burke, D. Estrin, and M. Hansen,
“Image browsing, processing, and clustering for participatory sensing:
lessons from a dietsense prototype,” in Proceedings of the 4th
workshop on Embedded networked sensors, ser. EmNets ’07. New
York, NY, USA: ACM, 2007, pp. 13–17. [Online]. Available:
http://doi.acm.org/10.1145/1278972.1278975
[42] R. de Oliveira and N. Oliver, “Triplebeat: enhancing exercise
performance with persuasion,” in Proceedings of the 10th international
conference on Human computer interaction with mobile devices and
services, ser. MobileHCI ’08. New York, NY, USA: ACM, 2008,
pp. 255–264. [Online]. Available: http://doi.acm.org/10.1145/1409240.
1409268
[43] S. Gaonkar, J. Li, R. R. Choudhury, L. Cox, and A. Schmidt,
“Micro-blog: sharing and querying content through mobile phones and
social participation,” in Proceedings of the 6th international conference
on Mobile systems, applications, and services, ser. MobiSys ’08.
New York, NY, USA: ACM, 2008, pp. 174–186. [Online]. Available:
http://doi.acm.org/10.1145/1378600.1378620
[44] E. Kanjo, S. Benford, M. Paxton, A. Chamberlain, D. Fraser,
D. Woodgate, D. Crellin, and A. Woolard, “Mobgeosen: facilitating
personal geosensor data collection and visualization using mobile
phones,” Personal and Ubiquitous Computing, vol. 12, pp. 599–

KHAN et al.: MOBILE PHONE SENSING SYSTEMS: A SURVEY

[45]

[46]

[47]

[48]

[49]

[50]

[51]

[52]

[53]

[54]

[55]

[56]

[57]

607, 2008, 10.1007/s00779-007-0180-1. [Online]. Available: http:
//dx.doi.org/10.1007/s00779-007-0180-1
T. Das, P. Mohan, V. N. Padmanabhan, R. Ramjee, and A. Sharma,
“Prism: platform for remote sensing using smartphones,” in Proceedings
of the 8th international conference on Mobile systems, applications, and
services, ser. MobiSys ’10. New York, NY, USA: ACM, 2010, pp. 63–
76. [Online]. Available: http://doi.acm.org/10.1145/1814433.1814442
S. B. Eisenman, E. Miluzzo, N. D. Lane, R. A. Peterson,
G.-S. Ahn, and A. T. Campbell, “Bikenet: A mobile sensing
system for cyclist experience mapping,” ACM Trans. Sen. Netw.,
vol. 6, no. 1, pp. 6:1–6:39, Jan. 2010. [Online]. Available:
http://doi.acm.org/10.1145/1653760.1653766
F. Sposaro and G. Tyson, “ifall: An android application for fall monitoring and response,” in Engineering in Medicine and Biology Society,
2009. EMBC 2009. Annual International Conference of the IEEE, sept.
2009, pp. 6119 –6122.
K. K. Rachuri, M. Musolesi, C. Mascolo, P. J. Rentfrow, C. Longworth,
and A. Aucinas, “Emotionsense: a mobile phones based adaptive
platform for experimental social psychology research,” in Proceedings
of the 12th ACM international conference on Ubiquitous computing,
ser. Ubicomp ’10. New York, NY, USA: ACM, 2010, pp. 281–290.
[Online]. Available: http://doi.acm.org/10.1145/1864349.1864393
M. Klepal, M. Weyn, W. Najib, I. Bylemans, S. Wibowo, W. Widyawan,
and B. Hantono, “Ols: opportunistic localization system for smart
phones devices,” in Proceedings of the 1st ACM workshop on
Networking, systems, and applications for mobile handhelds, ser.
MobiHeld ’09. New York, NY, USA: ACM, 2009, pp. 79–80.
[Online]. Available: http://doi.acm.org/10.1145/1592606.1592630
C. Cornelius, A. Kapadia, D. Kotz, D. Peebles, M. Shin, and
N. Triandopoulos, “Anonysense: privacy-aware people-centric sensing,”
in Proceedings of the 6th international conference on Mobile
systems, applications, and services, ser. MobiSys ’08. New York,
NY, USA: ACM, 2008, pp. 211–224. [Online]. Available: http:
//doi.acm.org/10.1145/1378600.1378624
L. P. Cox, A. Dalton, and V. Marupadi, “Smokescreen: flexible privacy
controls for presence-sharing,” in Proceedings of the 5th international
conference on Mobile systems, applications and services, ser. MobiSys
’07. New York, NY, USA: ACM, 2007, pp. 233–245. [Online].
Available: http://doi.acm.org/10.1145/1247660.1247688
J. Shi, R. Zhang, Y. Liu, and Y. Zhang, “Prisense: Privacy-preserving
data aggregation in people-centric urban sensing systems,” in INFOCOM, 2010 Proceedings IEEE, march 2010, pp. 1 –9.
J. Manweiler, R. Scudellari, and L. P. Cox, “Smile: encounter-based
trust for mobile social services,” in Proceedings of the 16th ACM
conference on Computer and communications security, ser. CCS ’09.
New York, NY, USA: ACM, 2009, pp. 246–255. [Online]. Available:
http://doi.acm.org/10.1145/1653662.1653692
A. Kapadia, D. Kotz, and N. Triandopoulos, “Opportunistic sensing: Security challenges for the new paradigm,” in Communication Systems and
Networks and Workshops, 2009. COMSNETS 2009. First International,
jan. 2009, pp. 1 –10.
W. Jansen and K. Scarfone, Guidelines on Cell Phone and PDA Security.
National Institute of Standards and Technology Special Publication 800124, 2008.
A. Beach, M. Gartrell, and R. Han, “Solutions to security and privacy
issues in mobile social networking,” in Computational Science and
Engineering, 2009. CSE ’09. International Conference on, vol. 4, aug.
2009, pp. 1036 –1042.
N. Jobanputra, V. Kulkarni, D. Rao, and J. Gao, “Emerging security
technologies for mobile user accesses,” The electronic Journal on ECommerce Tools and Applications, 2008.

427

Wazir Zada Khan is currently with School of Computer Science, Jazan University, Kingdom of Saudi
Arabia. He received his MS in Computer Science
from Comsats Institute of Information Technology,
Pakistan. His research interests include network and
system security, sensor networks, wireless and ad
hoc networks. His subjects of interest include Sensor
Networks, Wireless Networks, Network Security and
Digital Image Processing, Computer Vision.

Dr. Yang Xiang received his PhD in Computer
Science from Deakin University, Australia. He is
currently with School of Information Technology,
Deakin University. His research interests include
network and system security, distributed systems,
and networking. In particular, he is currently leading
in a research group developing active defense systems against large-scale distributed network attacks.
He is the Chief Investigator of several projects in
network and system security, funded by the Australian Research Council (ARC). He has published
more than 100 research papers in many international journals and conferences, such as IEEE Transactions on Parallel and Distributed Systems, IEEE
Transactions on Information Security and Forensics, and IEEE Journal on
Selected Areas in Communications. He has served as the Program/General
Chair for many international conferences such as ICA3PP 12/11, IEEE/IFIP
EUC 11, IEEE TrustCom 11, IEEE HPCC 10/09, IEEE ICPADS 08, NSS
11/10/09/08/07. He has been t4he PC member for more than 50 international
conferences in distributed systems, networking, and security. He serves as the
Associate Editor of IEEE Transactions on Parallel and Distributed Systems
and the Editor of Journal of Network and Computer Applications. He is a
member of the IEEE.

Dr. Mohammed Y Aalsalem is currently dean
of e-learning and assistant professor at School of
Computer Science, Jazan University. Kingdom of
Saudi Arabia. He received his PhD in Computer
Science from Sydney University. His research interests include real time communication, network
security, distributed systems, and wireless systems.
In particular, he is currently leading in a research
group developing flood warning system using real
time sensors. He is Program Committee of the
International Conference on Computer Applications
in Industry and Engineering, CAINE2011. He is regular reviewer for many
international journals such as King Saud University Journal (CCIS-KSU
Journal).

Quratulain Arshad received her BS in Computer Science from Comsats
Institute of Information Technology, Pakistan. Her research interests include
network security, trust and reputation in sensor networks and ad hoc networks.
Her subjects of interest include Network Security, Digital Image Processing
and Computer Vision.

