OPEN ACCESS
Ind. Journal on Computing
Vol. 1, Issue. 2, Sept 2016. pp. 97-116
doi:10.21108/indojc.2016.1.2.105

ISSN 2460-9056
socj.telkomuniversity.ac.id/indojc

Klasifikasi Keadaan Mata Berdasarkan
sinyal EEG menggunakan Extreme Learning
Machines
Ersa Christian Prakoso #1, Untari Novia Wisesty *2, Jondri #3
# School of Computing, Telkom University
Jl. Telekomunikasi No. 01, Terusan Buah Batu, Bandung, Jawa Barat, Indonesia
1 ersachristian@students.telkomuniversity.ac.id
2

untari.n.wisesty@gmail.com

Abstract
Electroencephalography signal or EEG signal is one of biosignals that currently being hot topic for
research. EEG signal has many benefits including detection of epilepsy from patients, sleep
disorders, or an input for a computer application. A kind of input that can be used based on EEG
signal is eye state. However, An Classification with a suffice performance is needed for that
purpose. Therefore, writer will do a research which will implement a new learning method for
Artificial Neural Network called Extreme Learning Machine for classifying eye state based on
EEG signal. Dataset that will be used for training and testing were donated by Oliver Roesler and
combined with dataset from Repository University of California, Irvinel (UCI). There are 7
corpora which consist of EEG records of 4 differents people. Based on system testing, we can
draw a conclusion that ELM classifier can be used to classify eye-state based on ELM with good
performance. Tested system can achieve 97,95% accuracy and only need 0,81 second of training if
the corpus is used separately. However, if all the corpora are used together as one big corpus,
ELM classifier can only achieved 78,94% accuracy with 5,71 seconds training time.
Keywords : Classification, Electroencephalography (EEG), Extreme Learning Machine (ELM).
Abstrak
Electroencephalography atau sinyal EEG adalah salah satu biosignal yang marak menjadi topik
penelitian saat ini. Sinyal EEG memiliki banyak manfaat seperti pendeteksian epilepsi, gangguan
tidur, atau input dalam aplikasi komputer. Salah satu input yang dapat dideteksi berdasarkan sinyal
EEG adalah keadaan mata. Namun untuk digunakan sebagai input dalam aplikasi diperlukan
klasifikasi dengan performansi yang memadai. Oleh karena itu penulis akan dilakukan penelitian
dimana salah satu metode pembelajaran Jaringan Syaraf Tiruan yaitu Extreme Learning Machine
(ELM) akan diimplementasikan untuk mengklasifikasikan kondisi mata berdasarkan sinyal EEG.
Dataset yang digunakan untuk melatih dan menguji model adalah dataset eye-state yang
didonasikan oleh Oliver Roesler digabung dengan dataset yang berasal dari website repository
Universitas of California, IrvineI (UCI) . Terdapat 7 corpus yang terdiri dari perekaman EEG
yang dilakukan kepada 4 orang berbeda, lalu ditambahkan 1 corpus yang merupakan
penggabungan seluruh corpus lain. Dari hasil pengujian yang dilakukan disimpulkan bahwa ELM
dapat digunakan untuk klasifikasi keadaan mata dengan akurasi mencapai 97,95% dengan waktu
latih hanya 0,81 detik jika masing-masing data digunakan secara terpisah, sedangkan
penggabungan keseluruhan dataset hanya mencapai akurasi 78,94% dengan waktu latih 5,71 detik.
Kata Kunci : Klasifikasi, Electroencephalography (EEG), Extreme Learning Machine (ELM).

Received on August 2016. Accepted on Sept 2016

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

I.

98

PENDAHULUAN

Akhir-akhir ini riset tentang bagaimana cara otak manusia bekerja semakin marak dan menjadi topik hangat
untuk diperbincangkan dalam biomedik. Umumnya penelitian dilakukan dengan menganalisa sinyal yang
dikeluarkan dari tubuh manusia, atau yang disebut biosignal. Berbagai metode dan alat diciptakan untuk
menangkap sinyal yang ada dari tubuh manusia, antara lain adalah EEG, EOG, ECG, EMG, dan sebagainya.
Salah satu biosignal yang paling umum digunakan adalah EEG atau Electroencephalography. EEG paling
umum digunakan sebagai metode untuk mendeteksi epilepsi. Namun dalam perkembangannya, EEG juga
digunakan untuk mendeteksi berbagai hal seperti gangguan tidur, brain death, serta sebagai input dalam
aplikasi komputer. Untuk digunakan sebagai brain-computer interface, selain diperlukan sistem klasifikasi
dengan akurasi yang memadai, sistem harus dapat mengeluarkan hasil dengan cepat agar tidak delay antara
input dengan respon yang akan dilakukan komputer terutama jika digunakan untuk sistem real-time.
Salah satu riset yang telah dilakukan adalah bagaimana perubahan EEG terhadap pergerakan mata manusia.
Kesimpulan yang didapat adalah perbedaan terbesar dari kondisi saat mata tertutup dan terbuka adalah
kekuatan dari kedua kondisi, kekuatan di mata saat mata tertutup adalah lebih besar daripada saat mata
terbuka [1]. Hasil dari riset tersebut dapat digunakan untuk fitur dalam klasifikasi 2 status yang ada. Namun
tidak banyak riset lanjutan yang mencoba menciptakan sistem klasifikasi untuk eye-state [2].
Salah satu riset yang telah dilakukan mencoba menggunakan berbagai metode yang ada untuk
menklasifikasikan kedua kondisi tersebut berdasarkan sinyal EEG yang didapat [2]. K-star dapat
menghasilkan akurasi yang tinggi pada kasus ini yaitu hingga mencapai 97% tanpa perlu dilakukan preprocessing pada data EEG. Namun terdapat kelemahan yang cukup fatal dari K-star yaitu sangat lambat untuk
mengeluarkan output, seperti halnya instance-based learner lain. Pada data ini diperlukan waktu hingga 38
menit untuk mendapatkan label hasil pengujian K-star dari keseluruhan data yang ada, sangat tidak bagus
untuk digunakan dalam brain-computer interface yang bersifat real-time.
Jaringan Syaraf Tiruan (JST) adalah salah satu metode yang umum digunakan untuk kasus regresi maupun
klasifikasi. Namun perkembangannya mengalami kemacetan. Pada tahun 2006, muncul konsep yang secara
filosifi meniru cara belajar dari otak manusia, yaitu Extreme Learning Machine (ELM) [3]. Berbeda dengan
JST dan Deep Learning, ELM menganggap neuron dari hidden layer tidak perlu di-tuning. Selain itu karena
tidak perlu melakukan iterasi dalam data seperti Backpropagation, ELM dapat memangkas waktu training
menjadi jauh lebih cepat [3]. Deep Learning sendiri telah diuji untuk kasus klasifikasi emosi berdasarkan
sinyal EEG dan didapatkan performansi yang cukup baik hingga mencapai lebih dari 80% [4]. Riset lain telah
dilakukan dan terbukti bahwa dalam kasus klasifikasi emosi menggunakan EEG, salah satu variasi ELM,
yaitu GELM mampu menyaingi performansi dari Support Vector Machine dengan waktu training jauh lebih
singkat. Selain itu karena modelnya hanya berupa perkalian matriks JST umumnya dapat mengeluarkan hasil
yang cepat dari input yang ada.
Dalam penelitian kali ini, penulis ingin mengimplementasikan konsep Extreme Learning Machine untuk
pengklasifikasian eye-state berbasis EEG. Penulis ingin membuktikan bahwa dengan waktu training yang
jauh lebih cepat, ELM dapat memberikan performansi yang baik.
II. TINJAUAN PUSTAKA
A) Electroenchephalography
Selama otak bekerja, neuron dalam otak akan menghasilkan suatu aktivitas elektrik tertentu.
Electroenchephalography adalah suatu kegiatan untuk merekam aktivitas elektrik spontan dari otak dalam
periode tertentu [5]. Perekaman dilakukan menggunakan alat yang dinamakan Electroenchapalogram (EEG).
Penggunaan alat EEG dilakukan dengan menempelkan elektrode EEG ke bagian-bagian tertentu dari kepala.
Alat yang digunakan dalam perekaman adalah Emotiv Epoc Headset yang dikembangkan oleh perusahaan
EMOTIV dan dijual bebas untuk umum. Alat berikut memiliki daya sampling sebanyak 128 Hz yang berarti
dalam 1 detik, headset dapat merekam hingga 128 nilai dari masing-masing channel. Rentang nilai yang
dihasilkan dari tiap channel berkisar antara 0 hingga 9600. Seperangkat Emotiv Epoc Headset dijual antara

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

99

US$400 hingga US$900 tergantung kelengkapannya. Emotiv Epoc Headset memiliki 14 channel yang
penempatannya dapat dilihat pada gambar berikut:

Fig. 1 Penempatan Elektrode pada dataset Eye-state [2]

Penelitian menunjukkan bahwa perbedaan terbesar dari keadaan saat mata tertutup dan terbuka adalah
power. Power saat keadaan mata tertutup adalah lebih besar daripada saat mata terbuka [1]. Hal ini terlihat
pada dataset eye-state yang dikeluarkan oleh Oliver Roesler [2]. Menurut dataset nilai corpus tersebut,
amplitudo dari sensor F7, F3, O2, P8, T8, FC6, dan F4 menunjukkan nilai maksimum saat mata terbuka lebih
besar daripada saat mata tertutup dan nilai minimumnya cenderung sama. Namun untuk sensor AF3, FC5, T7,
P7, O1, F8, dan AF4 nilai minimum saat mata terbuka lebih besar daripada saat mata tertutup dan nilai
maksimumnya cenderung tetap.
Ting Wang pada salah satu risetnya [10] melakukan ekstraksi fitur dari seluruh nilai secara temporal dan
didapatkan first-order feature dan second-order feature untuk dicari rata-rata dan standar deviasinya sebagai
fitur baru, dan terbukti dapat membantu akurasi dari sistem klasifikasi yang digunakan.
B) Artifical Neural Network
Artifical Neural Network atau Jaringan Syaraf Tiruan (JST) merupakan salah satu upaya manusia dalam
memodelkan cara berpikir manusia kedalam komputer. JST dapat diartikan sebagai proses tersebar pararel
yang sangat besar yang memiliki kecenderungan untuk menyimpan pengetahuan yang bersifat pengalaman
dan membuatnya siap digunakan [6]. Dalam JST pengetahuan yang didapat dipresentasikan dalam bobot
koneksi antar sel syaraf yang ada (neuron). Dalam setiap neuron terjadi perhitungan sebagai berikut:
𝑦(𝑥) = 𝑓(𝑠(𝑥))
Dimana s(x) adalah kombinasi linear dari input x, dengan bobot w dan bias b.

(1)

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

100

𝑠(𝑥) = ∑ wi xi + 𝑏

(2)

Secara umum ANN terdiri atas 3 bagian layer, yaitu input layer, hidden layer, output layer. Jumlah dari
input layer, dan output layer adalah 1, sedangkan hidden layer dapat terdiri dari 1 layer ataupun lebih
tergantung dari arsitektur yang digunakan [5].
Salah satu jenis ANN yang paling simpel dan umum digunakan adalah feedforward neural network. Pada
arsitektur ini, seluruh koneksi antar neuron terhubung ke neuron di layer berikutnya tanpa ada koneksi yang
kembali ke layer sebelumnya.

Fig. 2 Feedforward Neural Network [5]

Metode belajar paling umum yang digunakan untuk feedforward neural network adalah Backpropagation.

C) Extreme Learning Machines (ELM)
Extreme Learning Machines atau biasa disingkat ELM adalah algoritma learning yang awalnya dirancang
untuk Single Layer Feedforward Neural Network (SLFN) untuk menggantikan Backpropagation. ELM
menawarkan proses belajar yang ribuan kali lebih cepat dibanding Backpropagation namun dengan
performansi generalisasi yang lebih baik [3].
Berbeda dengan Backpropagation yang melakukan iterasi dan mengubah nilai bobot koneksi antar seluruh
neuron untuk meminilasi error, ELM membuktikan bahwa bobot dari input layer dan bias dari hidden layer
dapat diberi nilai acak jika fungsi aktivasi di hidden layer terdiferensiasi.
Beberapa masalah dalam algoritma belajar BP yang dianggap perlu diperbaiki oleh ELM adalah [3]:
1) Parameter Learning rate dalam BP berpengaruh besar terhadap performansi sistem. Jika terlalu kecil,
maka proses belajar akan berjalan sangat lambat, sedangkan jika terlalu besar, algoritma menjadi tidak
stabil dan sulit mencapai konvergen.
2) BP cenderung terjebak dalam lokal minima.
3) Perlu metode khusus untuk mencegah over-fit.
4) Gradient-based Learning seperti BP sangat menghabiskan waktu untuk kebanyakan aplikasi.
Sebuah ELM dengan Hidden node dan fungsi aktifiasi g dapat dimodelkan sebagai berikut:
𝛽 𝑇 𝐻 = 𝑇,
𝑔(𝑤1 . 𝑥1 + 𝑏1 )
…
Dimana 𝐻 = [
𝑔(𝑤𝐾 . 𝑥1 + 𝑏𝐾 )

…
…
…

(3)
𝑔(𝑤1 . 𝑥𝑁 + 𝑏1 )
…
]
𝑔(𝑤𝐾 . 𝑥𝑁 + 𝑏𝐾 ) 𝐾∗𝑁

(4)

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

𝛽1𝑇
.
𝛽= .
, 𝑇 = [𝑡1 , … . , 𝑡𝑛 ]𝑚∗𝑁
.
[𝛽𝐾𝑇 ]𝐾∗𝑚

101

(5)

wj = (wj1, wj2, ..., wjd) adalah weight input dari vektor yang menghubungkan hidden node ke-j dengan node
input, dan βj =(βj1, βj2, ..., βjm)T adalah weight dari vektor yang menghubungkan hidden node ke-j dengan
node output. Bj adalah bias dari node ke-j.
Guang-Bin Huang [3] mengungkapkan teori bahwa untuk Single Layer Feed Forward Network dengan
fungsi aktivasi g : R -> R dimana fungsi tersebut infinitely differentiable, untuk sampel (xi, ti), dimana xi ∈
𝑅𝑛 , 𝑡𝑖 ∈ 𝑅𝑚 yang berbeda sejumlah N, untuk segala wi dan bi dipilih secara acak dalam interval 𝑅𝑛 dan 𝑅𝑚
maka dengan probabiltas 1, terdapat output dari matriks hidden layer H untuk SLFN dimana ‖𝐻𝛽 − 𝑇‖ = 0.
Dari teori diatas maka terbukti bahwa bobot maupun bias dari hidden layer tidak perlu di-tune namun dapat
dibangkitkan secara acak. Untuk nilai bobot dan bias tertentu maka untuk melatih SLFN secara sederhana
dapat digambarkan sebagai mencari solusi least-squares dari sistem linear Hβ = T.
Jika jumlah hidden node sama dengan jumlah sampel yang berbeda dari data latih, maka matriks H adalah
persegi dan dapat di-inverse, dan SLFN dapat memperkirakan sampel latih tersebut dengan error 0. Namun,
untuk kebanyakan kasus, jumlah hidden node jauh lebih kecil daripada jumlah sampel data latih berbeda yang
digunakan, maka H adalah matriks non-persegi dan solusi dengan norm terkecil dari sistem linear tersebut
bisa didapat dari persamaan:
𝛽 = 𝑯+ 𝑻
𝑯+ adalah Moore-Penrose generalized inverse dari matriks H.

(6)

Secara sederhana terdapat 3 langkah dalam proses latih ELM [3]:
Andaikan terdapat sebuah training set § = {(𝑥𝑖 , 𝑡𝑖 )|𝑥𝑖 ∈ 𝑅𝑛 , 𝑡𝑖 ∈ 𝑅𝑚 , 𝑖 = 1, … … , 𝑛}, fungsi aktivasi g(x)
dan hidden node berjumlah Ñ,
1. Tetapkan nilai bobot input wi dan bias bi, 𝑖 = 1, … … , Ñ.
2. Hitung matriks H output dari hidden layer.
3. Hitung bobot dari output β
𝛽 = 𝑯+ 𝑻

(7)

dimana 𝑻 = [𝒕𝟏 , … , 𝒕𝑵 ]𝑻
Orthogonal Projection dapat digunakan untuk menghitung Moore-Penrose, 𝑯+ = (𝑯𝑻 𝑯)-1 𝑯𝑻 jika 𝑯𝑻 𝑯
nonsingular, atau 𝑯+ = 𝑯𝑻 (𝑯𝑯𝑻 )-1 jika 𝑯𝑯𝑻 nonsingular. Menurut ridge regression theory, disarankan
untuk menambahkan bilangan positif ke diagonal 𝑯𝑻 𝑯 atau 𝑯𝑯𝑻 pada penghitungan bobot 𝛽 sehingga model
menjadi lebih stabil dan memiliki performansi generalisasi yang lebih baik [8, 14]. Sehingga penghitungan
bobot 𝛽 dapat ditulis sebagai berikut:
−1
𝐼
𝛽 = 𝐻𝑇 ( + 𝐻𝐻𝑇 ) 𝑇
𝐶

(8)

−1
𝐼
𝛽 = ( + 𝐻 𝑇 𝐻) 𝐻 𝑇 𝑇
𝐶

(9)

Atau,

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

102

dimana I adalah matriks identitas sebesar matriks persegi 𝑯𝑯𝑻 ataupun 𝑯𝑻 𝑯, dan C adalah parameter yang
ditentukan oleh user. Untuk sistem dengan jumlah hidden neuron lebih sedikit dari jumlah baris data latih
yang digunakan disarankan menggunakan persamaan (9) sedangkan untuk kasus sebaliknya disarankan
menggunakan persamaan (8) [8, 14].
D) Moore-Penrose generalized inverse
Solusi dari sistem linear Ax = y, dimana A mungkin singular atau tidak persegi, dapat dibuat sederhana
dengan menerapkan Moore-Penrose generalized inverse [3]. Matriks G dengan ordo n x m adalah MoorePenrose generalized inverse untuk matriks A berordo n x m jika:
(10)
𝐴𝐺𝐴 = 𝐴, 𝐺𝐴𝐺 = 𝐺, (𝐴𝐺)𝑇 = 𝐴𝐺, (𝐺𝐴)𝑇 = 𝐺𝐴.
Solusi Moore-Penrose generilized inverse bisa didapatkan menggunakan berbagai metode seperti Single
Value Decomposition (SVD), dan Orthogonal Projection
E) Penulisan Terkait
Oliver Roesler [2] adalah yang pertama mengangkat kasus klasifikasi keadaan mata sekaligus membuat data
yang digunakan penulis. Dataset EEG terdiri atas 15 atribut dimana 14 atribut adalah nilai dari masing-masing
elektrode dan 1 atribut keadaan mata. Data disimpan secara terurut untuk memungkinkan analisa dependansi
temporal. Menurut data berikut, amplitudo dari sensor F7, F3, O2, P8, T8, FC6, dan F4 menunjukkan nilai
maksimum saat mata terbuka lebih besar daripada saat mata tertutup dan nilai minimumnya cenderung sama.
Namun untuk sensor AF3, FC5, T7, P7, O1, F8, dan AF4 nilai minimum saat mata terbuka lebih besar
daripada saat mata tertutup dan nilai maksimumnya cenderung tetap. Untuk eksperimen klasifikasi, digunakan
weka toolkit dengan parameter standar. Classifier umum seperti naive bayes, ANN, SMO, dan logistic
regression menghasilkan performansi yang buruk dengan error lebih dari 30%. Algoritma Decisian Tree
menghasilkan performansi lebih baik hingga sekitar 15%. Performansi terbaik didapat instance-based learner
seperti KStar dengan error hanya mencapai 3,2%. Kelemahan dari instance-based learner ini adalah waktu
testing yang lama. Untuk melakukan testing pada keseluruhan corpus pada paper terkait dibutuhkan waktu
kurang lebih 38 menit sehingga perlu menjadi pertimbangan jika digunakan untuk real-time system.
Oliver Roesler melakukan riset lanjutan yang menguji pengaruh dari alat rekam EEG terhadap performansi
sistem klasifikasi keadaan mata [9]. Terdapat 3 alat yang digunakan untuk perekaman EEG yaitu MindWave,
Emotiv EPOC, dan BrainAmp Standart. Perbedaan terbesar dari alat-alat tersebut adalah jumlah channel dan
Sampling rate masing-masing alat. MindWave memiliki hanya 1 channel namun dengan sampling rate cukup
tinggi yaitu 512Hz, dan dijual umum dengan harga 80$. Emotiv EPOC adalah alat rekam lain selain
MindWave yang dijual umum, namun dengan harga yang lebih tinggi yaitu sekitar 700$. Emotiv EPOC
memiliki 14 channel dengan sampling rate 128Hz. Alat terakhir yaitu BrainAmp Standart tidak dijual untuk
umum, karena harganya yang cukup mahal hingga mencapai 60000€. BrainAmp Standart memiliki 32
channel dengan sampling rate mencapai 1kHz. Dilakukan pengujian pengaruh alat masing-masing terhadap
klasifikasi keadaan mata, namun khusus BrainAmp hanya digunakan 12 channel saja untuk menguji apakah
pada jumlah channel yang sama, hasil yang didapat akan sama dengan alat lain atau tidak. Hasilnya,
BrainAmp memiliki error rate yang paling tinggi. Hal ini tidak dikarenakan jumlah channel yang hanya 1,
karena telah diuji klasifikasi menggunakan Emotiv EPOC dengan hanya 1 channel namun dapat
menghasilkan akurasi yang jauh lebih baik, sedangkan Error rate Emotiv EPOC sendiri dengan menggunakan
14 channel hanya sedikit tertinggal dibawah BrainAmp Standart yang menggunakan 12 channel yaitu dari
11,1% menadji 16,5% . Perlu diingat bahwa harga Emotiv EPOC berada jauh dibawah alat profesional
BrainAmp Standart namun dengan performansi yang tidak terpaut jauh, sehingga Emotiv EPOC sangat cocok
untuk digunakan sebagai Brain-Computer Interface yang dapat digunakan secara umum, hanya perlu
dikembangkan sistem yang dapat menerjemahkan input Emotiv EPOC
Guang-Bin Huang [7] melakukan perbandingan antara Extreme Learning Machine (ELM) dengan Support
Vector Machine (SVM) dan Least Squares- Support Vector Machine (LS-SVM). Masing-masing metode diuji
dengan berbagai dataset untuk kasus binary classification, multi-class classification, dan Regression. Pada
sebagian besar kasus ELM dapat menyaingi performansi SVM maupun LS-SVM dengan waktu training yang

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

103

lebih singkat. Contohnya untuk dataset Wine, ELM mampu mencapai akurasi 98.57 % dengan waktu latih
0.0206 detik dibanding SVM yang mencapai akurasi 98.37 dengan waktu latih 0.075 detik dan LS-SVM yang
hanya mencapai akurasi 97.63 dengan waktu latih 1.82 detik. Contoh lain adalah pada dataset Colon, ELM
mencapai akurasi 90.63% dibanding SVM dan LS-SVM dengan akurasi 84.38% dan 87.5%, dengan masingmasing waktu training 0.001 detik, 0.0462 detik, dan 0.0469 secara berurutan. Melihat waktu latih yang
sangat singkat namun dengan akurasi yang lebih baik dari SVM, penulis melihat ELM sebagai alternatif yang
dapat dicoba untuk classifier sinyal EEG.
Ting Wang [10] menggunakan dataset yang sama dengan yang digunakan pada paper 1. Metode yang
digunakan sebagai classifier adalah Neural Network dengan menerapkan Increasing Input Dimension (ITID)
dimana input dari learning akan bertambah seiring berjalannya proses learning. Pengujian dilakukan dengan 4
skenario. Skenario pertama adalah penggunaan temporal feature extraction untuk mendapatkan first-order
feature dan second-order feature, penghitungan standar deviasi dan rata-rata sebagai fitur baru, lalu dilakukan
pengurutan input untuk ITID. Pengurutan fitur input ini adalah proses khusus yang hanya dilakukan dalam
sistem berbasis Incremental Attribute Learning. Pendekatan kedua adalah menggunakan Temporal Feature
Extraction, lalu menghitung standar deviasi dan rata-rata sebagai fitur baru seperti skenario 1, namun
dilakukan pengurutan ulang input dan mempertahankan urutan lama dari dataset. Skenario 3 menggunakan
Batch-training dengan menggunakan fitur dari second-order feature. Skenario 4 adalah Batch-training, tanpa
adanya temporal feature extraction, sehingga dataset digunakan secara langsung untuk training. Hasil dari
tiap pendekatan secara terurut adalah error sebesar 27,4573%; 27,4793%; 29,5046%; 30,6328%.
Jia-Yi Zhu [11] memperkenalkan variasi baru dari ELM yaitu GELM dengan tujuan menyeimbangkan
konsistensi properti dari data berdimensi besar, dan mendorong keluaran dari sampel di kelas yang sama
menjadi semirip mungkin. Algoritma tersebut diterapkan dalam kasus klasifikasi emosi berdasarkan EEG
dimana emosi dibagi menjadi 3 kelas yaitu positif, negatif, dan netral. Performansi keseluruhan dari GELM
mampu menyaingi Support Vector Machine (SVM) dengan rata-rata 80,25% dan standar deviasi ±11,92%
dibanding 76,62% dan standar deviasi ±13,12%.
Yong Peng [12] memperkenalkan variasi lain yang baru untuk ELM dengan nama MRELM. GELM hanya
memaksa output dari sampel kelas yang sama agar menjadi mirip. Namun dalam studi lebih lanjut,
performansi learning dapat ditingkatkan jika struktur geometri dari data dieksploitasi. Algoritma tersebut
diterpakan dalam kasus yang sama dengan paper nomor 3, yaitu klasifikasi emosi berdasarkan EEG dengan
membagi kelas emosi menjadi 3, positif, negatif, dan neutral. Secara keseluruhan performansi MRELM
mampu menyaingi GELM maupun SVM dengan akurasi 81,01% dan standar deviasi ±12,24%.
III. METODE PENELITIAN
A) Pengumpulan Data
Seluruh datasets yang akan digunakan didapatkan dari donasi oleh Oliver Roesler dan disatukan dengan
dataset eye-state
dari website Repository University of California, Irvine (UCI) dengan
URL:https://archive.ics.uci.edu/ml/datasets/EEG+Eye+State yang dibuat oleh orang yang sama. Dataset
terdiri atas 7 corpus dimana masing-masing corpus merupakan hasil perekaman selama kurang lebih 2 menit
dari 4 orang yang berbeda. Masing-masing orang menghasilkan 2 corpus kecuali orang terakhir. Terdapat
kamera yang memeriksa keadaan mata dari pelaku yang kemudian akan ditambahkan kedalam dataset sebagai
target. Dataset corpus memiliki 15 feature, 14 atribut nilai real EEG dari channel AF3, F7, F3, FC5, T7, P7,
O1, O2, P8, T8, FC6, F4, F8, AF4 dan 1 nilai integer target keadaan mata. 0 menandakan keadaan mata
terbuka dan 1 menandakan keadaan mata tertutup. Seluruh keadaan saat mata belum sepenuhnya tertutup
dikategorikan sebagai mata terbuka.

B) Alur sistem Keseluruhan
Berikut adalah Flowchart dari sistem klasifikasi keadaan mata berdasarkan EEG menggunakan
Extreme Learning Machine:

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

104

Fig. 3 Flowchart Pengujian Sistem

Secara umum terdapat 4 proses utama dari sistem klasifikasi yang dibuat yaitu: Cross Validation,
Preprocessing, Proses Training ELM, dan klasifikasi dengan ELM untuk data uji.

1) Data latih dan data Uji
Dataset akan dibagi menjadi data latih dan data uji menggunakan teknik 10-fold cross validation. Berikut
adalah contoh baris fitur yang menjadi input untuk sistem serta target atau keluarannya:
TABLE I
CONTOH INPUT DAN TARGET SISTEM

X1
4329.23
4292.31
4317.44
....
4302.56

X2
4009.23
4005.64
4010.77
....
4006.67

Input
X3
4289.23
4246.67
4258.46
....
4249.74

.....
.....
.....
.....
.....
.....

X14
4393.85
4345.13
4376.41
....
4375.9

Target
0
1
0
....
0

2) Pre-Processing
Tahap Pre-Processing yang dilakukan adalah normalisasi data menjadi berkisar antara 0 hingga 1. Proses
normalisasi dilakukan dengan persamaan berikut:
X′ =

𝑋 − 𝑋𝑚𝑖𝑛
𝑋𝑚𝑎𝑥 − 𝑋𝑚𝑖𝑛

(11)

Dimana X ′ adalah nilai baru fitur dalam domain normalisasi, 𝑋 adalah nilai sebelum normalisasi, 𝑋𝑚𝑖𝑛
adalah nilai terkecil dari seluruh data yang akan dinormalisasi, dan 𝑋𝑚𝑎𝑥 adalah nilai terbesar dari seluruh
data yag akan dinormalisasi

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

105

3) Sistem Klasifikasi ELM
Dalam kasus klasifikasi keadaan mata ini, akan digunakan Extreme Machine Learning (ELM) sebagai
classifier. ELM adalah sebuah Neural Network dengan 1 Hidden Layer dengan menggunakan dengan
algoritma Least Square based untuk proses latih [13]. Berikut adalah flowchart proses latih dari model ELM:

Fig. 4 Flowchart Proses Training ELM

Sebuah ELM dengan 1 Hidden Layer dan fungsi aktivasi g dapat dimodelkan sebagai berikut:
𝛽 𝑇 𝐻 = 𝑇,

(12)

Dimana:
𝑔(𝑤1 . 𝑥1 + 𝑏1 )
…
𝐻= [
𝑔(𝑤𝐾 . 𝑥1 + 𝑏𝐾 )

…
…
…

𝑔(𝑤1 . 𝑥𝑁 + 𝑏1 )
…
]
𝑔(𝑤𝐾 . 𝑥𝑁 + 𝑏𝐾 ) 𝐾∗𝑁

𝛽1𝑇
.
𝛽= .
, 𝑇 = [𝑡1 , … . , 𝑡𝑛 ]𝑚∗𝑁
.
[𝛽𝐾𝑇 ]𝐾∗𝑚

(13)

(14)

wj = (wj1, wj2, ..., wjd) adalah weight input dari vektor yang menghubungkan hidden node ke-j dengan node
input, dan βj =(βj1, βj2, ..., βjm)T adalah weight dari vektor yang menghubungkan hidden node ke-j dengan
node output. Bj adalah bias dari node ke-j.
Matriks Target akan menggunakan one hot encoding dimana kelas yang menjadi target akan diberi nilai 1,
dan sisanya akan diberi nilai -1. Weight dari β dapat diestimasikan [14]:
−1
𝐼
𝛽 = 𝑎𝑟𝑔𝛽 min‖𝛽 𝑇 𝐻 − 𝑇‖ = 𝐻 + 𝑇 = ( + 𝐻𝑇 𝐻) 𝐻𝑇 𝑇
𝐶

(15)

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

106

Jika digambarkan dalam bentuk Neural Network, berikut adalah arsitektur dari ELM yang akan
digunakan:

Fig. 5 Penggambaran Model dalam arsitektur NN

Nilai weight yang telah didapat kemudian dapat digunakan untuk klasifikasi dengan melakukan pengalian
Matriks dari Input Weight, penambahan Bias, hingga Hidden Weight. Karena kasus keadaan mata merupakan
binary classification dan digunakan 2 output neuron. Setiap output neuron mewakili masing-masing kelas,
jika nilai yang keluar pada output neuron 0 lebih besar dari output neuron 1 maka baris data tersebut
ditentukan sebagai kelas 0, begitu pula sebaliknya.
C) Parameter Performansi
Parameter performansi dari sistem klasifikasi ini adalah akurasi dari sistem, sensitivity, specificity dan
waktu latih model. Semakin tinggi akurasi maka performansi sistem semakin baik sedangkan semakin rendah
waktu latih, semakin baik. Akurasi dari sistem didapat dari persamaan:
𝐴𝑘𝑢𝑟𝑎𝑠𝑖 =

𝐽𝑢𝑚𝑙𝑎ℎ 𝑘𝑙𝑎𝑠𝑖𝑓𝑖𝑘𝑎𝑠𝑖 𝑦𝑎𝑛𝑔 𝑏𝑒𝑛𝑎𝑟
∗ 100%
𝑇𝑜𝑡𝑎𝑙 𝐷𝑎𝑡𝑎 𝑦𝑎𝑛𝑔 𝑑𝑖𝑘𝑙𝑎𝑠𝑖𝑓𝑖𝑘𝑎𝑠𝑖

(16)

Sensitivity sistem didapat dari persamaan: (diasumsikan kelas 1 sebagai True Positive)
𝑆𝑒𝑛𝑠𝑖𝑡𝑖𝑣𝑖𝑡𝑦 =

𝑇𝑟𝑢𝑒 𝑃𝑜𝑠𝑖𝑡𝑖𝑣𝑒
∗ 100%
𝑇𝑟𝑢𝑒 𝑃𝑜𝑠𝑖𝑡𝑖𝑣𝑒 + 𝐹𝑎𝑙𝑠𝑒 𝑁𝑒𝑔𝑎𝑡𝑖𝑣𝑒

(17)
(16)

Specificity sistem didapat dari persamaan: (diasumsikan kelas 1 sebagai True Positive)
𝑆𝑝𝑒𝑐𝑖𝑓𝑖𝑐𝑖𝑡𝑦 =

𝑇𝑟𝑢𝑒 𝑁𝑒𝑔𝑎𝑡𝑖𝑣𝑒
∗ 100%
𝑇𝑟𝑢𝑒 𝑁𝑒𝑔𝑎𝑡𝑖𝑣𝑒 + 𝐹𝑎𝑙𝑠𝑒 𝑃𝑜𝑠𝑖𝑡𝑖𝑣𝑒

(18)
(16)

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

107

IV. HASIL DAN ANALISIS
A) Tujuan Pengujian
Tujuan dari pengujian yang akan dilakukan adalah sebagai berikut:
1. Menganalisis pengaruh jumlah hidden neuron terhadap akurasi dan waktu latih sistem.
2. Menganalisis pengaruh nilai C terhadap akurasi dan waktu latih sistem.
3. Menganalisis pengaruh fungsi aktivasi terhadap akurasi dan waktu latih sistem.
4. Menganalisis perbedaan tiap data saat diklasifikasikan dengan sistem.
B) Skenario Pengujian
Berikut adalah skenario parameter yang akan diuji untuk mengukur performansi dari sistem klasifikasi:
1. Jumlah Hidden Neuron
Sistem ELM hanya menggunakan 1 hidden layer, namun Jumlah Hidden Neuron mempengaruhi seberapa
besar matriks dari ELM feature Mapping, yang secara teori dengan jumlah cukup besar dapat
menghasilkan matriks output layer yang memiliki error = 0 terhadap data latih [3]. Diuji perubahan
jumlah neuron dari 100 hingga 1000 dengan interval +100.
2. Nilai C
Sistem ELM menerapkan teori ridge regression dengan menambahkan konsanta 1/C ke diagonal Random
Feature Mapping, yang akan meningkatkan kestabilan dari model yang dihasilkan saat proses latih [7] .
Nilai C akan diuji dari 0,1 hingga 1E+17 dengan interval *10 dan nilai 0. Nilai 0 berarti tidak ditambahkan
nilai konstan apapun.
3. Fungsi Aktivasi
Hidden Neuron pada ELM dapat menggunakan berbagai jenis fungsi aktivasi asalkan merupakan nonlinier
piecewise continuous function. Fungsi aktivasi yang berbeda akan memberikan matriks ELM Feature
Mapping yang berbeda juga, sehingga dapat mempengaruhi tahap penyelesaianleast-square problem. Pada
pengujian diuji menggunakan fungsi sigmoid, dan fungsi radial basis.
4. Data latih dan data uji
Data yang akan digunakan adalah masing-masing corpus yang berjumlah 7 ditambah dengan corpus yang
merupakan penggabungan dari keseluruhan corpus yang lain. Setiap orang memiliki ciri EEG yang
berbeda, baik dari variansi, nilai maksimum, nilai minimum pada kondisi tertentu dsb. Oleh karena itu
perlu diuji keefektifan model yang ada untuk orang yang berbeda.
Seluruh skenario akan dikombinasikan untuk melihat pengaruh parameter di tiap corpus yang berbeda, dan
mendapatkan parameter terbaik untuk masing-masing corpus. Seluruh corpus akan diberlakukan 10-fold cross
validation dan diulang sebanyak 5 kali dan dirata-ratakan. Selain itu untuk meminimalkan keacakan dari hasil
yang dihasilkan sistem, pada setiap kombinasi parameter dengan jumlah hidden neuron yang sama akan
menggunakan 5 matriks input weight yang sama yang telah dibangkitkan terlebih dahulu.
Berikut adalah spesifikasi masing-masing data yang akan digunakan dalam sistem:
C) Spesifikasi Data
Berikut adalah spesifikasi dari setiap corpus yang akan digunakan untuk proses latih dan uji pada sistem
ELM yang ada:
TABLE II
SPESIFIKASI DATA YANG DIGUNAKAN

Data

Jumlah Baris Data

1-1
1-2
2-1
2-2

15475
15483
15483
15479

Persentase Kelas(%)
0
1
49,03
50,97
63,72
36,28
56,20
43,80
48,34
51,66

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

3-1
3-2
4
Gabungan

108

15473
15434
14976
107803

17,76
40,57
55,11
47,22

82,24
59,43
44,89
52,78

Terdapat data gabungan yang merupakan penggabungan dari keseluruhan data di atas. Data 1-1 menandakan
corpus pertama oleh orang pertama, data 1-2 menandakan corpus kedua oleh orang pertama, dan seterusnya.
Corpus 1, 2, dan 3 adalah corpus yang digunakan dalam penelitian Oliver Roesler [9], sedangkan corpus ke 4
adalah yang digunakan dalam Oliver Roesler [8]. Pada sebagian besar corpus persentase kelas yang ada
seimbang, hanya pada corpus 3-1 kelas yang ada sangat tidak seimbang yaitu 17,76% untuk kelas 0 dan
82,24% untuk kelas 1. Nilai-nilai yang berada di luar batas yang memungkinkan di seluruh corpus dihapus,
yang diakibatkan kesalahan pada alat perekaman yang digunakan.
D) Hasil Pengujian
Berikut adalah hasil pengujian dari tiap skenario yang ada:
1. Jumlah Hidden Neuron
Berikut adalah tabel hasil pengujian pengaruh jumlah hidden neuron terhadap sistem klasifikasi yang
dibangun dengan mengambil akurasi dan waktu latih tertinggi pada tiap parameter:
TABLE III
AKURASI SISTEM ELM PADA JUMLAH HIDDEN NEURON TERTENTU

Jumlah
Hidden
Neuron
100
200
300
400
500
600
700
800
900
1000

Akurasi Sistem (%)
1-1

1-2

2-1

2-2

3-1

3-2

4

Gabungan

88,70
92,80
94,18
95,10
95,79
96,45
96,81
97,15
97,40
97,60

93,11
95,14
96,06
96,59
96,98
97,19
97,43
97,69
97,90
97,95

81,00
86,83
89,10
90,37
91,37
92,20
93,07
93,42
93,92
94,07

82,85
86,52
87,32
88,05
88,63
89,32
89,87
90,26
90,85
91,03

90,56
93,49
94,61
95,33
95,96
96,37
96,62
96,93
97,11
97,32

88,70
92,80
94,18
95,10
95,79
96,45
96,81
97,15
97,40
97,60

80,42
86,73
88,94
90,13
91,01
91,68
92,20
92,77
92,96
93,34

70,60
73,63
74,54
75,01
75,73
76,59
77,25
77,94
78,46
78,94

TABLE IV
SENSITIVITY SISTEM ELM PADA JUMLAH HIDDEN NEURON TERTENTU

Jumlah
Hidden
Neuron
100
200
300
400
500
600
700
800
900
1000

Sensitivity (%)
1-1

1-2

2-1

2-2

3-1

3-2

4

Gabungan

86,42
90,87
92,73
93,10
93,38
93,55
93,53
93,83
93,95
94,07

87,74
92,23
93,75
94,65
95,16
95,47
95,94
96,23
96,51
96,53

69,11
78,54
81,96
84,14
86,00
87,65
89,16
89,85
90,80
91,09

82,56
85,92
86,68
87,27
87,72
88,52
89,03
89,43
89,98
90,20

99,64
99,33
99,20
99,14
99,09
99,07
99,03
99,04
99,07
99,12

93,21
95,50
96,04
96,40
96,94
97,49
97,71
97,97
98,20
98,36

72,27
81,76
85,12
86,82
87,99
88,90
89,64
90,43
90,57
91,09

91,83
89,19
87,60
86,74
85,91
85,48
85,01
84,59
84,43
84,23

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

109

TABLE V
SPECIFICITY SISTEM ELM PADA JUMLAH HIDDEN NEURON TERTENTU

Jumlah
Hidden
Neuron
100
200
300
400
500
600
700
800
900
1000

Specifity (%)
1-1

1-2

2-1

2-2

3-1

3-2

4

Gabungan

89,37
92,54
94,09
94,66
95,00
95,18
95,30
95,48
95,72
95,79

90,23
93,22
94,52
95,27
95,80
96,09
96,44
96,80
97,09
97,15

76,11
83,93
86,81
88,44
89,71
90,77
91,85
92,28
92,90
93,08

83,24
86,82
87,59
88,29
88,84
89,53
90,07
90,46
91,04
91,22

94,46
96,12
96,77
97,20
97,57
97,81
97,96
98,15
98,26
98,38

90,73
94,03
95,15
95,90
96,48
97,03
97,33
97,62
97,82
97,99

76,80
84,68
87,35
88,75
89,78
90,56
91,15
91,82
92,03
92,46

74,43
76,69
77,53
77,87
78,42
79,02
79,49
80,01
80,45
80,82

TABLE VI
LAMA WAKTU LATIH SISTEM ELM PADA JUMLAH HIDDEN NEURON TERTENTU

Jumlah
Hidden
Neuron
100
200
300
400
500
600
700
800
900
1000

Lama Waktu latih (s)
1-1

1-2

2-1

2-2

3-1

3-2

4

Gabungan

0,04
0,09
0,15
0,21
0,29
0,39
0,49
0,61
0,72
0,86

0,04
0,09
0,15
0,21
0,29
0,38
0,48
0,58
0,70
0,83

0,04
0,09
0,15
0,22
0,30
0,39
0,49
0,60
0,72
0,86

0,04
0,09
0,15
0,21
0,29
0,38
0,47
0,58
0,70
0,83

0,04
0,09
0,15
0,21
0,29
0,38
0,48
0,58
0,70
0,82

0,04
0,09
0,15
0,21
0,29
0,38
0,47
0,58
0,70
0,82

0,04
0,08
0,14
0,20
0,28
0,37
0,46
0,56
0,68
0,80

0,29
0,63
1,04
1,59
2,18
2,82
3,53
4,24
5,05
5,98

Berdasarkan Tabel III, IV, dan V terlihat bahwa pada semakin besar jumlah hidden neuron yang digunakan
pada sistem, maka akurasi, Sensitivity, dan Specificity sistem semakin meningkat. Pada data 3-1 Sensitivity
pada jumlah Hidden neuron 100 paling tinggi diakibatkan kurang seimbangnya kelas dari corpus tersebut,
dimana kelas 1 jauh lebih dominan. Peningkatan akurasi dari cenderung makin mengecil pada saat jumlah
hidden neuron semakin besar. Contohnya pada data 1-1, terlihat bahwa peningkatan jumlah hidden neuron
dari 100 ke 200 terjadi peningkatan akurasi dari 88,70% menuju 92,80%, namun pada jumlah hidden neuron
900 ke 1000, hanya terjadi peningkatan akurasi dari 97,40% menjadi 97,60%. Sedangkan untuk sensitivity
dan specificity, dengan meningkatnya jumlah hidden neuron, keseimbangan antara kedua hal tersebut akan
semakin baik, seperti pada data 3-1 dimana pada jumlah hidden neuron 100 sensitivity mencapai nilai
tertinggi yaitu 99,64% namun specificity hanya mencapai 94,46%. Pada jumlah hidden neuron 1000,
walaupun sensitivity mengalami penurunan kecil menjadi 99,12% namun specificity mengalam peningkatan
drastis hingga 98,38% sehingga lebih baik dalam merekognisi kedua kelas. Selain itu pada tabel VI tampak
bahwa jumlah hidden neuron sangat mempengaruhi seberapa lama waktu latih yang dibutuhkan oleh sistem
ELM. Semakin besar jumlah hidden neuron maka waktu latih yang dibutuhkan semakin tinggi. Peningkatan
waktu latih tidak terjadi secara linear seiring semakin banyak jumlah hidden neuron, namun secara
eksponensial. Contohnya pada data 1-2, peningkatan jumlah hidden neuron dari 100 ke 200 hanya

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

110

meningkatkan waktu latih dari 0,04 detik menjadi 0,09 detik, namun pada jumlah hidden neuron 900 menuju
1000, terjadi peningkatan waktu latih dari 0,70 detik menjadi 0,83 detik.

2. Nilai C
Berikut adalah tabel hasil pengujian pengaruh jumlah hidden neuron terhadap sistem klasifikasi yang
dibangun dengan mengambil akurasi dan waktu latih tertinggi pada tiap parameter:
TABLE VII
AKURASI SISTEM ELM PADA NILAI C TERTENTU

Nilai C
0
0,1
1
10
100
1000
10000
100000
1000000
10000000

1-1
95,80
84,89
86,23
87,96
90,57
92,37
93,91
94,75
95,22
95,63

1-2
97,95
94,44
95,76
96,82
97,47
97,82
97,93
97,94
97,95
97,95

2-1
94,07
68,68
72,39
75,93
79,97
84,10
87,03
89,19
90,87
92,30

Akurasi Sistem (%)
2-2
3-1
3-2
91,03 97,32 97,60
80,80 90,69 91,10
84,50 93,31 94,02
86,94 95,29 95,74
88,10 96,35 96,82
89,29 96,88 97,30
90,20 97,05 97,40
90,66 97,08 97,40
90,71 97,08 97,44
90,72 97,27 97,60

4
93,34
81,95
87,02
89,87
91,85
92,92
93,23
93,20
93,21
93,31

Gabungan
78,94
66,57
68,02
69,68
71,58
73,37
74,27
75,09
76,06
77,27

TABLE VIII
STANDAR DEVIASI AKURASI SISTEM ELM PADA NILAI C TERTENTU

Nilai C
0
0,1
1
10
100
1000
10000
100000
1000000
10000000

1-1
3,29
0,93
0,86
0,83
0,82
0,77
0,73
0,68
0,66
0,60

1-2
0,43
0,74
0,64
0,57
0,50
0,48
0,45
0,44
0,43
0,43

2-1
4,84
1,68
2,11
2,72
3,04
2,94
2,60
2,12
1,69
1,36

Standar Deviasi (%)
2-2
3-1
3-2
0,82
0,58
0,66
1,18
0,82
1,02
1,11
0,77
0,92
1,01
0,71
0,84
0,96
0,68
0,75
0,88
0,64
0,73
0,84
0,62
0,70
0,83
0,61
0,68
0,83
0,59
0,67
0,83
0,59
0,67

4
0,77
1,22
1,16
1,05
0,95
0,88
0,85
0,82
0,78
0,77

Gabungan
2,49
0,56
0,55
0,58
0,58
0,53
0,54
0,51
0,48
0,46

TABLE IX
SENSITIFITY AKURASI SISTEM ELM PADA NILAI C TERTENTU

Nilai C
0
0,1
1
10
100
1000
10000
100000

1-1
93,92
80,30
81,28
83,55
88,17
90,67
92,41
93,29

1-2
96,53
90,58
93,38
94,98
95,83
96,34
96,47
96,50

2-1
91,09
49,09
54,17
61,37
67,38
73,38
77,86
81,58

Sensitivity (%)
2-2
3-1
3-2
90,20 99,09 98,34
81,19 99,64 95,23
84,83 98,97 96,28
86,66 98,77 97,05
87,46 98,88 97,80
88,67 99,00 98,11
89,63 99,01 98,17
90,02 98,98 98,17

4
91,09
71,87
81,38
85,94
88,77
90,42
90,92
90,99

Gabungan
84,09
91,83
84,73
81,99
82,19
82,58
82,99
83,63

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

1000000
10000000

93,68
94,07

96,53
96,53

84,48
87,32

89,98
89,96

99,05
99,12

111

98,29
98,36

91,03
91,02

83,90
84,08

TABLE X
SPECIFICITY AKURASI SISTEM ELM PADA NILAI C TERTENTU

Nilai C
0
0,1
1
10
100
1000
10000
100000
1000000
10000000

1-1
95,79
84,33
85,74
87,60
90,50
92,37
93,92
94,76
95,23
95,64

1-2
97,15
92,19
94,10
95,59
96,48
96,97
97,12
97,14
97,15
97,15

2-1
93,08
57,83
63,11
68,96
74,56
80,06
83,97
86,83
89,00
90,84

Specificity (%)
2-2
3-1
3-2
91,22 98,38 97,98
81,37 94,57 92,71
84,95 96,04 95,03
87,26 97,18 96,44
88,36 97,81 97,34
89,53 98,12 97,74
90,43 98,22 97,82
90,87 98,24 97,82
90,91 98,24 97,85
90,92 98,35 97,99

4
92,46
78,13
84,90
88,39
90,71
91,97
92,33
92,31
92,32
92,41

Gabungan
80,82
73,31
72,67
73,86
75,33
76,59
77,30
77,99
78,71
79,61

TABLE XI
LAMA WAKTU LATIH SISTEM ELM PADA NILAI C TERTENTU

Nilai C
0
0,1
1
10
100
1000
10000
100000
1000000
10000000

1-1
0,86
0,83
0,83
0,83
0,83
0,83
0,83
0,83
0,83
0,83

1-2
0,82
0,82
0,82
0,82
0,83
0,82
0,83
0,82
0,82
0,82

2-1
0,86
0,83
0,83
0,83
0,83
0,83
0,83
0,83
0,83
0,83

Lama Waktu latih (s)
2-2
3-1
0,81
0,82
0,82
0,82
0,83
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82

3-2
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82
0,82

4
0,79
0,80
0,80
0,80
0,79
0,79
0,79
0,79
0,80
0,80

Gabungan
5,98
5,78
5,78
5,78
5,80
5,78
5,78
5,78
5,78
5,80

Pada Tabel VII, IX, dan X terlihat semakin besar nilai C, yang berarti semakin kecil nilai konstan yang
ditambahkan ke dalam diagonal dari ELM feature Mapping akurasi, specificity, dan sensitivity dari sistem
cenderung semakin meningkat. Rata-rata akurasi terbaik sendiri didapatkan pada seluruh data kecuali data
saat tidak ditambahkan nilai konstan apapun atau nilai I/C adalah 0 kecuali untuk data 3-2. Pada data 1-2
sendiri akurasi pada nilai C yang sangat besar yaitu 1E+06 dan 1E+07 dapat mencapai nilai akurasi yang
hampir sama dengan saat nilai konstan sama dengan 0 yaitu 97,95%. Hal ini juga terjadi pada data 3-2
dimana akurasi sama-sama mencapai 97,60% pada nilai C 1E+07 dan saat nilai konstan diset sama dengan
nol, dengan akurasi 1E+07 sedikit lebih tinggi dengan perbedaan 0,005%. Walaupun rata-rata akurasi yang
didapat cukup tinggi pada cross validation namun tidak menambahkan nilai konstan sama sekali dapat
berdampak pada stabilitas sistem yang berkurang. Pada satu data 1-1 Standar deviasi akurasi sistem yang
menggunakan nilai konstan 0 memiliki standar deviasi yang cukup tinggi dibanding saat menggunakan nilai
konstan yang sangat kecil sekalipun. Pada data 1-1 dengan nilai C 1E+07 hanya memiliki standar deviasi
0,6%, sedangkan saat konstanta diset menjadi 0, standar deviasi meningkat jauh hingga 3,29%. Hal ini juga
terjadi pada 2-1 dan data gabungan. Oleh karena itu lebih baik menggunakan nilai konstan yang kecil. Selain
didapatkan sistem dengan stabilitas lebih baik dengan standar deviasi yang lebih kecil, juga tidak menurunkan
performansi sistem terlalu banyak dari segi akurasi, sensitivity, dan specificity, mengingat pada beberapa

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

112

kasus seperti pada data 3-2 sensitivity dan specificity tertinggi didapat pada saat nilai C 1E+07, lebih tinggi
daripada saat tidak ditambahkan nilai konstan tertentu.
Untuk pengaruh waktu latih dari perubahan nilai C sendiri, terlihat pada tabel XI bahwa perubahannya tidak
banyak mempengaruhi lama waktu latih yang dibutuhkan. Pada data yang terpisah seperti data 1-1 hingga 4,
dibutuhkan waktu latih yang kurang lebih sama berkisar antara 0,82 hingga 0,83 detik yang kemungkinan
dipengaruhi faktor lain dalam komputer saat eksperimen, sedangkan waktu latih dari data gabungan sendiri
kurang lebih berada pada nliai 5,78 hingga 5,80. Namun pada saat nilai konstan diset sama dengan nol,
kadang terjadi pelonjakan waktu latih seperti yang terjadi pada 1-1, 2-1 dan data gabungan. Pada data 1-1 dan
2-1 waktu latih menjadi 0,86 detik dibandingkan dengan waktu latih pada parameter yang lain yang berkisar
antara 0,82 hingga 0,83 detik, sedangkan pada data gabungan waktu latih naik menjadi 5,98 detik dibanding
pada parameter lain yang berkisar pada 5,78 hingga 5,80 detik.

3. Fungsi Aktivasi
Berikut adalah tabel hasil pengujian pengaruh fungsi aktivasi yang digunakan terhadap sistem klasifikasi
yang dibangun dengan mengambil akurasi dan waktu latih tertinggi pada tiap parameter:
TABLE XII
AKURASI SISTEM ELM DENGAN FUNGSI AKTIVASI TERTENTU

Fungsi
Aktivasi
Sigmoid
Radbas

1-1
95,00
95,80

1-2
97,81
97,95

2-1
89,10
94,07

Akurasi Sistem (%)
2-2
3-1
3-2
91,03 97,32 97,60
90,72 97,09 97,41

4
93,34
93,23

Gabungan
74,34
78,94

TABLE XIII
SENSITIFITY SISTEM ELM DENGAN FUNGSI AKTIVASI TERTENTU

Fungsi
Aktivasi
Sigmoid
Radbas

1-1
93,31
94,07

1-2
96,30
96,53

2-1
81,96
91,09

Sensitivity (%)
2-2
3-1
3-2
90,20 99,64 98,36
90,02 99,01 98,17

4
91,09
91,03

Gabungan
91,83
84,71

TABLE XIV
SPECIFITITY SISTEM ELM DENGAN FUNGSI AKTIVASI TERTENTU

Fungsi
Aktivasi
Sigmoid
Radbas

1-1
95,00
95,79

1-2
96,96
97,15

2-1
86,81
93,08

Specificity (%)
2-2
3-1
3-2
91,22 98,38 98,36
90,92 98,24 97,83

4
92,46
92,33

Gabungan
77,53
80,82

TABLE XV
LAMA WAKTU LATIH SISTEM ELM DENGAN FUNGSI AKTIVASI TERTENTU

Fungsi
Aktivasi
Sigmoid
Radbas

1-1
0,82
0,86

1-2
0,83
0,81

2-1
0,86
0,85

Lama Waktu latih (s)
2-2
3-1
3-2
4
0,83 0,82 0,82 0,80
0,82 0,82 0,82 0,79

Gabungan
5,98
5,74

Tabel VII menunjukkan bahwa tiap fungsi aktivasi yang digunakan berpengaruh berbeda-beda pada tiap data
yang digunakan. Terdapat sistem ELM yang menghasilkan akurasi lebih baik saat menggunakan fungsi
aktivasi sigmoid, dan ada juga yang sebaliknya. Pada data 2-1 dan data gabungan bahkan didapatkan akurasi,

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

113

sensitivity, dan specificity yang berbeda cukup signifikan saat menggunakan kedua fungsi aktivasi yang
berbeda yaitu 89,10%; 81,96%; 86,81% untuk sigmoid, dan 94,07%; 91,09%; 93,08% untuk radial basis.
Begitu juga dengan waktu latih dari sistem, masing-masing fungsi aktivasi memberikan perilaku yang
berbeda pada tiap-tiap data yang ada. Namun fungsi aktivasi sigmoid cenderung menghasilkan waktu latih
yang lebih tinggi daripada radial basis. Walaupun pada beberapa data, sigmoid tercatat memiliki waktu latih
yang lebih tinggi namun perbedaannya dengan waktu latih radial basis pada saat itu tidak terpaut jauh. Namun
tidak ada korelasi antara lama waktu latih dari sistem dengan akurasi yang didapat, karena pada data 1-1, 1-2,
2-1 dan gabungan yang menggunakan sistem aktivasi radial basis membutuhkan waktu latih yang lebih
rendah dibanding sigmoid namun didapat akurasi yang lebih baik. Sedangkan pada data lainnya, walaupun
waktu latih dari radial basis lebih rendah, namun akurasi dari fungsi aktivasi sigmoid lebih baik dibanding
menggunakan radial basis.

E) Analisis Keseluruhan
Berikut adalah tabel kombinasi parameter yang menghasilkan akurasi terbaik pada masing-masing data:
TABLE XVI
KOMBINASI PARAMETER TERBAIK UNTUK MASING-MASING DATA

Data

Fungsi
Aktivasi

1-1
1-2
2-1
2-2
3-1
3-2
4
Gabungan

Radial Basis
Radial Basis
Radial Basis
Sigmoid
Sigmoid
Sigmoid
Sigmoid
Radial Basis

Jumlah
Hidden
Neuron
1000
1000
1000
1000
1000
1000
1000
1000

Nilai C

Akurasi
(%)

Waktu
Latih (s)

0
0
0
0
0
1E+07
0
0

95,80
97,95
94,07
91,03
97,32
97,60
93,34
78,94

0,81
0,81
0,85
0,81
0,82
0,82
0,79
5,71

Seperti terlihat pada Tabel XVI, saat masing-masing data dilatih dan diuji secara terpisah, sistem dengan
kombinasi parameter yang tepat dapat melakukan klasifikasi dengan akurasi yang terhitung baik, yaitu diatas
90%. Sistem bahkan dapat mencapai akurasi diatas 95% untuk beberapa data. Hanya data 2-1, 2-2 dan 4 yang
tidak mencapai batas 95%. Hal ini diduga karena setiap orang bisa saja dalam kondisi fisik maupun mental
yang berbeda pada saat perekaman data. Orang 2 dan 4 terhitung lebih sulit diklasifikasi dibanding orang 1
dan 3 yang dapat mencapai akurasi lebih tinggi. Namun untuk data gabungan yang merupakan pencampuran
dari keseluruhan data menjadi satu, akurasi dari sistem turun drastis hingga hanya dapat mencapai 78,80%.
Hal ini menandakan bahwa sistem masih belum dapat digunakan untuk klasifikasi EEG umum secara
langsung. Suatu model yang dibangun berdasarkan sinyal EEG satu orang tidak dapat digunakan untuk kasus
klasifikasi dari sinyal EEG milik orang yang berbeda. Hal ini bisa diakibatkan pola sinyal EEG masingmasing orang yang berbeda-beda, mengingat tiap data memiliki nilai maksimum, minimum, dan rata-rata
yang berbeda di tiap channel. Oleh karena itu perlu dilakukan suatu fitur ekstraksi untuk menyamakan ciri
fitur dari kelas yang sama dari data milik orang yang berbeda. Dengan begitu walaupun secara mentah nilai
sinyal masing-masing orang berbeda-beda, namun pada kelas yang sama bisa didapatkan suatu ciri yang
sama.
Sistem klasifikasi ELM menggunakan metode Random Feature Mapping yang berarti pada setiap proses
training dapat menghasilkan model yang benar-benar berbeda satu dengan lain walaupun menggunakan data
dan parameter yang sama persis, karena sangat bergantung pada nilai random yang dihasilkan. Namun dari
Standar Deviasi akurasi yang didapat dari masing-masing data, terlihat bahwa performansi yang didapat tidak
terlalu jauh walaupun bergantung pada nilai acak. Pada nilai C sama dengan 0, atau tidak ditambahkan

Ersa Christian Prakoso et.al.
Klasifikasi Keadaan Mata Berdasarkan Sinyal...

114

konstanta sama sekali, kadang dapat berdampak stabilitas proses latih ELM yang kurang baik. Seperti yang
terjadi data 1-1 dimana pada parameter C lain standar deviasi dari akurasi pengujian tidak sampai titik 1%,
namun pada saat nilai C sama dengan 0, standar deviasi akurasi pengujian sistem meningkat hingga 4%.
Peristiwa ini jarang terjadi, karena pada parameter nilai C sama dengan 0 untuk data lain tidak terjadi hal itu,
namun dapat menjadi pertimbangan untuk selalu menggunakan parameter nilai C walaupun sekecil mungkin
untuk mendapatkan stabilitas proses latih sistem yang lebih baik.
V. KESIMPULAN
Setelah melakukan perancangan, implementasi, pengujian dan analisis, maka kesimpulan yang dapat
diambil dari penelitian ini adalah:
1. Sistem klasifikasi ELM dapat digunakan untuk melakukan klasifikasi keadaan mata berdasarkan sinyal
EEG. Akurasi dinilai baik namun hanya jika setiap corpus dilatih dan diuji secara terpisah, terlihat dari
akurasi sistem yang mencapai paling tinggi 97,95% untuk data terpisah, namun hanya dapat mencapai
78,94% untuk data gabungan.
2. Sistem klasifikasi ELM cocok digunakan untuk melakukan proses training secara real-time karena dalam
1 kali proses latih tidak memakan waktu yang lama, bahkan untuk data yang sangat banyak sekalipun.
Untuk data terpisah waktu latih terlama yang dibutuhkan hanya 0,86 detik, sedangkan data gabungan
hanya dibutuhkan waktu 5,98 detik.
3. Dengan semakin banyaknya jumlah hidden neuron, maka akurasi sistem akan semakin tinggi, terlihat dari
akurasi terbaik selalu didapat pada jumlah hidden neuron 1000 pada seluruh data hingga 97,95%. Hanya
saja perlu dipertimbangkan peningkatan waktu latih dari sistem yang akan digunakan.
4. Tidak menambahkan konstanta pada matriks ELM Feature Mapping menghasilkan sistem dengan akurasi
terbaik pada hampir seluruh data kecuali pada data 3-2 dengan akurasi mencapai 97,95%, namun
terkadang dapat berdampak pada stabilitas sistem ELM yang kurang baik, terlihat pada standar deviasi
pengujian data 1-1 yang besar hingga mencapai 4%. Penggunaan parameter C cukup besar dapat
menghasilkan sistem dengan akurasi yang tidak banyak menurun namun dengan stabilitas yang lebih baik
seperti 1E+07 yang dapat mencapai akurasi yang sama namun dengan standar deviasi yang jauh lebih
kecil yaitu hanya sekitar 1%.
5. Fungsi aktivasi memiliki pengaruh masing-masing pada data yang berbeda, contohnya pada data 2-2
sigmoid dapat mencapai akurasi 91,03% namun radial basis hanya mencapai 90,72%, tetapi pada data 2-1
sigmoid hanya mencapai akurasi 89,10% dibanding radial basis yang mencapai 94,07%
6. Dengan didapatkannya model dengan akurasi yang baik dengan waktu latih yang cenderung cepat,
algoritma ELM dapat dimanfaatkan untuk sebagai Brain-computer Interface dengan sebelumnya
melakukan pelatihan berdasarkan sinyal EEG orang bersangkutan dengan waktu singkat untuk
membangun model. Namun karena model dari 1 orang tidak bisa digunakan untuk orang yang berbeda,
maka untuk setiap orang yang berbeda yang menggunakan sistem, perlu dilakukan proses latih ulang.
UCAPAN TERIMA KASIH
Penulis ingin berterima kasih kepada Oliver Roesler yang telah mendonasikan dataset eye-state yang
digunakan penulis untuk penelitian ini, dan kepada Lab Artificial Intelligence, Lab Computing, dan Lab
Praktikum Informatika Universitas Telkom yang telah meminjamkan komputer untuk uji coba sistem.

REFERENSI
[1]
[2]

Chen, L., L. Li, and L. Xiao. "Differences of EEG between Eyes-Open and Eyes-Closed States Based on Autoregressive Method."
Journal Of Electronic Science And Technology Of China, 2009: 175-179.
Roesler, Oliver, dan David Suendermann. “A First Step towards Eye State Prediction Using EEG.” in Proceedings of International
Conference on Applied Informatics for Health and Life Science. Istanbul: Turkey, 2013.

Ind. Journal on Computing Vol. 1, Issue. 2, Sept 2016

[3]
[4]
[5]
[6]
[7]
[8]
[9]

[10]

[11]

[12]

[13]
[14]

115

Huang, Guang-Bin, Qin-Yu Zhu, dan Chee-Kheong Siew. “Extreme Learning Machine: Theory and applications.”
Neurocomputing 70, 2006: 489–501.
Zheng, Wei-Long, Jia-Yi Zhu, Yong Peng, dan Bao-Liang Lu. “EEG-based emotion classification using deep belief networks.”
IEEE International Conference on Multimedia and Expo. Chengdu: IEEE, 2014. 1-6.
Naibaho, Vania Cathlin Raissa. Klasifikasi Emosi Melalui Sinyal EEG yang Dihasilkan Otak dengan Menggunakan Discrete
Wavelet Transform dan Backpropagation Artificial Neural Network. Undergraduate Thesis, Bandung: Telkom University, 2013.
Suyanto. Artificial Intelligence. Bandung: Informatika Bandung, 2009.
Huang, Guang-Bin, Hongming Zhou, Xiaojian Ding, dan Rui Zhang. “Extreme Learning Machine for Regression and Multiclass
Classification.” IEEE Transaction on Systems, Man, and Cybernetics, 2012: 513-529.
Tang, Jiexiong, Chenwei Deng, dan Guang-Bin Huang. “Extreme Learning Machine for Multilayer Perceptron.” IEEE
Transactions on Neural Networks And Learning Systems, 2013: 809 - 821.
Roesler, Oliver, Lucas Bader, Jan Forster, Yoshikatsu Hayashi, Stefan Hebler, dan David Suendermann. “Comparison of EEG
Devices for Eye State Classification.” International Conference on Applied Informatics for Health and Life Sciences (AIHLS),
Kusadasi, Turkey, 2014.
Wang, Ting, Sheng-Uei Guan, Ka Lok Man, dan T. O. Ting. “Time Series Classifiaction for EEG Eye State Identification based on
Incremental Attribute Learning.” International Symposium on Computer, Consumer and Control. Taichung: 2014, 2014. 158 161.
Zhu, Jia-yi, Wei-Long Zheng, Yong Peng, Ruo-Nan Duan, dan Bao-Liang Lu. “EEG-based Emotion Recognition using
Discriminative Graph Regularized Extreme Learning Machine.” International Joint Conference on Neural Networks, 2014: 525532.
Peng, Yong, Jia-Yi Zhu, Wei-Long Zheng, dan Bao-Liang Lu. “EEG-based Emotion Recognition with Manifold Regularized
Extreme Learning Machine.” 36th Annual International Conference of the IEEE Engineering in Medicine and Biology Society,
2014: 974-977.
Huang, Guang-Bin. “What are Extreme Learning Machines? Filling the Gap Between between Frank Rosenblatt's Dream and John
von Neumann's Puzzle.” Cognitive Computation 7, 2015: 263-278.
Huang, Gao, Shiji Song, Keyou You, dan Guang-Bin Huang. “Trends in extreme learning machines: A review.” Neural Networks,
2015: 32-48.

116

