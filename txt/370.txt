Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

RADIAL BASIS FUNCTION PROCESS NEURAL
NETWORK TRAINING BASED ON GENERALIZED
FRÉCHET DISTANCE AND GA-SA HYBRID
STRATEGY
Wang Bing1, Meng Yao-hua2, Yu Xiao-hong3
1

School of Computer & Information Technology, Northeast Petroleum University,
Daqing , China
2
Communication Research Center, Harbin Institute of Technology, Harbin , China
3
Exploration and Development Research Institute, Daqing Oilfield Company, Daqing,
China

ABSTRACT
For learning problem of Radial Basis Function Process Neural Network (RBF-PNN), an optimization
training method based on GA combined with SA is proposed in this paper. Through building generalized
Fréchet distance to measure similarity between time-varying function samples, the learning problem of
radial basis centre functions and connection weights is converted into the training on corresponding
discrete sequence coefficients. Network training objective function is constructed according to the least
square error criterion, and global optimization solving of network parameters is implemented in feasible
solution space by use of global optimization feature of GA and probabilistic jumping property of SA . The
experiment results illustrate that the training algorithm improves the network training efficiency and
stability.

KEYWORDS
Radial Basis Function Process Neural Network, Training Algorithm, Generalized Fréchet Distance, GA-SA
Hybrid Optimization

1. INTRODUCTION
Radial basis function neural network (RBFNN) is a three-layer feedforward neural network
model and was put forward by Powell, Broomhead and Lowe[1,2] in the mid-1980s. It
implements nonlinear mapping by change property parameters of a neuron and improves learning
rate by linearization of connection weight adjustment. RBFNN has been applied in many fields
such as function approximation, spline interpolation and pattern recognition [3,4]. However, in
practical engineering, many systems’ inputs are dependent on time; the inputs of existing RBFNN
model are usually constant. They have nothing to do with the time, that is, the input/output is
instantaneous relationship between geometric points. Its information processing mechanism
cannot directly reflect the characteristics of time-varying process input signals and the dynamic
effect relationship between variables. Therefore, a radial basis function process neural network
(RBF-PNN) is established in literature [5], and its inputs can be time-varying process signal
DOI : 10.5121/cseij.2013.3601

1

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

directly. Through space-time aggregation of kernel function neurons to find sample pattern
process characteristics, the RBF-PNN has been applied in dynamic sample clustering and timevarying signal identification effectively.
In practice, time-varying sample data is usually discrete time series obtained by sampling, the
existing RBF-PNN is unable to deal with discrete input directly. It need to fit discrete samples,
thus fitting error exists. In subsequent orthogonal basis expansion, the finite terms of basis
function also bring truncation error. In addition, learning efficiency of traditional RBF-PNN
algorithm based on gradient descent combined with basis expansion is low, and at the same time
it affects stability and generalization ability of the network that there are greater freedom
constraints among network parameters.
In recent years, evolutionary computation-based optimization technology is widely used to solve
optimal solution in various engineering problems, and has been effectively applied in complex
function calculation, process optimization, system identification and control, and so on [6-8].
Genetic algorithm (GA) [9] is a bionic global optimization method that simulates Darwin’s
natural selection and natural biological evolution process. It is simple, general, robust, suitable for
parallel processing, as well as efficient and practical, and has been widely applied in various
fields. However, GA has some shortcomings, e.g. immature convergence and slow iterative rate.
If probabilistic jumping property of simulated annealing (SA) is made use of, the GA combined
with SA are applied into the training of RBF-PNN, this will improve RBF-PNN learning property
greatly.
Fréchet distance [10] is a judgment to measure the similarity between polygonal curves. In
applications, dynamic samples normally consist of a sequence of discrete sampling points,
therefore, Eiter and Mannila [11] put forward discrete Fréchet distance on the basis of continuous
Fréchet distance, and it achieved good application effect in protein structure prediction[12],
online signature verification [13], etc. Time-varying process signal can be seen as a onedimensional curve about the time; therefore, discrete Fréchet distance can be extended to timevarying function space to measure nature difference between input samples of RBF-PNN.
For the RBF-PNN training problem, we propose a training method based on generalized discrete
Fréchet distance combined with GA-SA optimization in this paper. By constructing a generalized
Fréchet distance norm to measure the distance between dynamic samples in time-varying function
space, then the learning problem of weight functions is transformed into discrete coefficient
training. According to the least square error criterion, the network training objective function is
constructed, and GA-SA algorithm is adopted for global optimization solving. It is applied into
EEG eye state recognition and achieves good results. RBF-PNN optimization training steps are
also given in the paper.

2. DISTANCE MEASUREMENT BETWEEN TIME-VARYING SAMPLES BASED
ON GENERALIZED FRÉCHET DISTANCE
2.1. Discrete Fréchet Distance
Discrete Fréchet distance is defined as follows:
(a) Given a polygonal chain P =< p1 , p2 , , pn > with n vertices, a k-walk along P partitions
the path into k disjoint non-empty subsets {Pi }i =1,, k such that Pi =< pni−1 +1 , , pni > and

0 = n0 < n1 <  < nk = n .

2

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

(b) Given two polygonal chains A =< a1 , a2 , , am > and B =< b1 , b2 , , bn > , a paired walk
along A and B is a k-walk { Ai }i =1,, k along A and a k-walk {Bi }i =1,, k along B for 1 ≤ i ≤ k ,
either Ai = 1 or Bi = 1 (namely, Ai or Bi contains exactly one vertex).
(c) The cost of a paired walk W = {( Ai , Bi )} along A and B is

d FW ( A, B ) = max max dist (a, b)
i

(1)

( a ,b )∈ Ai × Bi

The discrete Fréchet distance between two polygonal chains A and B is

d F ( A, B ) = min d FW ( A, B )

(2)

W

The paired walk is also called the Fréchet alignment of A and B .

2.2. Generalized Fréchet Distance Between Time-Varying Samples
The discrete Fréchet distance can effectively measure the difference between time-varying
functions (which can be regarded as the polygonal chains), while the input of the RBF-PNN is a
vector composed of time-varying functions. Thus, using the property that Euclidean distance can
implement point target matching, combining the discrete Fréchet distance and Euclidean distance,
a generalized Fréchet distance is established, which can measure the distance between timevarying function vector samples.
and
X(t ) = ( x1 (t ), x2 (t ),..., xn (t ))
X ′(t ) = ( x1′(t ), x2′ (t ),..., xn′ (t )) , their generalized Fréchet distance d ( X(t ), X ′(t )) is defined as

Given

two

time-varying

function

samples

1

n

d ( X(t ), X ′(t )) = (∑ d F ( xi (t ), xi′(t )) 2 ) 2

(3)

i =1

where d F ( xi (t ), xi′(t )) denotes the discrete Fréchet distance between discrete sampling points
corresponding to xi (t ) and xi′(t ) .

3. RBF-PNN MODEL
3.1. Radial Basis Function Process Neuron
The structure and information transfer flow of a radial basis function process neuron are shown in
Figure 1.

x1 (t )
x2 (t )
x1 (t)





C (t ) | dist (⋅)

K (·)

y

xn (t )

3

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013
Figure 1. Radial basis function process neuron

In

Figure

1,

X(t ) = ( x1 (t ), x2 (t ),..., xn (t ))

is

an

input

function

vector;

C (t ) = (c1 (t ), c2 (t ),..., cn (t )) is a centre function vector of a radial basis function neuron;
dist (⋅) is a distance measurement function between the input function vector and the centre
function vector, and here we adopt the generalized Fréchet distance defined in Eq.(3). K (⋅) is a
kernel function of a radial basis process neuron. It could be a Gauss function, a
multiquadric function and a thin-plate spline function etc. The input/output relationship of a
radial basis function process neuron is defined as:

y = K (dist X (t ), C (t ) )

(4)

3.2. Radial Basis Function Process Neural Network Model
A RBF-PNN model is composed of radial basis function process neurons and other types of
neurons according to certain structure relations and information transmission process. For
convenience, consider a multiple input/single output feedforward network model only with one
radial basis process hidden layer defined by Eq. (4). Its structure is shown in Figure 2.

x1 (t )

C1 (t ) | dist (⋅), K (⋅)

x2 (t )
..
.

C2 (t ) | dist (⋅), K (⋅)

…

..
.

j
∑

y

Cm (t ) | dist (⋅), K (⋅)

xn (t )

Figure 2. RBF-PNN model

In Figure 2, the input layer has n neurons, the radial basis process hidden layer has m neurons,

and  j ( j = 1, 2, , m) are the weighted coefficients to be adjusted. The input/output
relationship of RBF-PNN is:
m

y = ∑  j ⋅ K (dist X (t ), C j (t ) )

(5)

j =1

3.3. Network Objective Function
Given K learning sample functions ( X k (t ), d k ) where X k (t ) = xk 1 (t ), xk 2 (t ),..., xkn (t ) ,

k = 1, 2,..., K . Suppose that y k is a real output corresponding to the k th sample input.
According to the least square error criterion, the network objective function is defined as
below:
K

E = ∑ ( yk − d k）2

(6)

k =1

4

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

The kernel function of the radial basis process neuron adopts Gauss function:

K (d ) = exp(− d

2

2 2

)

(7)

where  is the width of Gauss function, and it needs to be determined via network training, then
we have
K

E = ∑ ( yk − d k）2
k =1

K

m

= ∑ (∑  j ⋅ exp(−
k =1

dist X k (t ), C j (t )
2 j 2

j =1

(8)

2

) − d k）
2

In Eq.(8), since dist X k (t ), C j (t ) is based on generalized discrete Fréchet distance, if discrete

{ }

sampling point number of RBF-PNN input is S , then c sji

S
s =1

is the discrete point sequence

corresponding to c ji (t ) ， i = 1, 2, , n , which is the i th component of the j th radial basis
centre function vector. In conclusion, the learning objective function E of RBF-PNN is a

{ }

function about variable parameters c sji

S
s =1

, j ,  j .

4. RBF-PNN TRAINING BASED ON GA-SA ALGORITHM
In GA [9], selection, crossover and mutation constitute its main operations. Parameter encoding,
initial population, fitness function choice, genetic operation design, control parameter setting
form the core content of GA. The obvious advantage of GA is to search many points in search
space at the same time, and its optimal solution searching process is instructive so as to avoid the
dimension disaster problem existing in some other optimization algorithms. Simulated annealing
(SA)[14] algorithm is a heuristic random search algorithm. Under a certain initial temperature,
accompanied by temperature fall, by use of probabilistic jumping property, the global optimal
solution of the objective function is obtained in solution space. In view of the respective features
of GA and SA, considering that SA can effectively prevent GA from trapping in local optimal
solution, GA and SA will be combined for RBF-PNN training to obtain the optimal solution of
the problem.
The training problem of RBF-PNN is to adjust parameters to minimize the objective function

E =E ({c sji }

S
s =1

,  j ,  j ) . The concrete RBF-PNN training steps based on GA-SA is described

below:
Step 1 Given initial simulated annealing temperature t1 , and set k = 1 .
Step 2 Determine the population size N , and randomly generate initial population. Decimal
number is used for chromosome encoding, and the gene number on each chromosome is the
number of variables to be optimized. Set the maximum iterative number M and error precision  .
Step 3 Evaluate chromosomes in the population. Since RBF-PNN training is the minimum
optimization problem for the objective function, the fitness function is taken as

5

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

f =

1
1+ E

（9）

Step 4 Perform genetic operations for chromosomes in the population.
(1) Selection operation. Adopt proportional selection operator, and the probability that the
chromosome X i with fitness value f i is selected into the next generation is

pi = fi

M

∑f
j =1

j

（10）

(2) Crossover operation. For decimal number encoding, choose arithmetic crossover operator.
Chromosomes X 1 and X 2 in the parent perform crossover operation with crossover probability

pc , the offspring chromosomes generated are

X 1' = aX 1 + (1 − a ) X 2

（11）

X 2' = (1 − a ) X 1 + aX 2

（12）

where a is a parameter and a ∈ (0,1) .
(3) Mutation operation. Use uniform mutation operator. Each gene in a chromosome X i performs
mutation operation with mutation probability pm , namely uniformly distributed random number
within the scope of gene value is used to instead of the original value with probability pm .
Step 5 Introduce the optimal retention strategy.
Step 6 Each chromosome in the population performs simulated annealing operation.
(1) Create new gene g ' (k ) = g (k ) +  by use of SA state generation function where

1
1
min, max) are the random disturbance and (min,max) are the scope of corresponding
10
10

 ∈(

gene value.
(2) Calculate objective function difference value ∆C between g ' (k ) and g ( k ) .
(3) Calculate acceptance probability pr = min[1, exp( −∆C / tk )] .
(4) If pr > random[0,1] then g (k ) = g ' (k ) ; otherwise g ( k ) remains unchanged.
(5) Introduce the optimal retention strategy.
(6) Anneal temperature by using the annealing temperature function tk +1 = vtk where v ∈ (0,1) is
the annealing temperature rate, and set k = k + 1 .
Step 7 If the objective function value corresponding to the optimal chromosome meets error
requirements  or the iteration process achieves the maximum number M , turn to Step 8;
otherwise return to Step 3.
Step 8 Decode the optimal chromosome searched by GA and obtain the optimal parameters of
RBF-PNN.

5. APPLICATIONS IN EEG EYE STATE CLASSIFICATION

6

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013

The simulation experiments use “EEG Eye State Data Set” from UCI. The data set was collected
for examining a classifier for sequential time series. The data set consists of 14 EEG values and a
value indicating the eye state, and '1' indicates the eye-closed and '0' the eye-open state. All data
is from one continuous EEG measurement with the Emotiv EEG Neuroheadset. The part of
samples with the eye-closed state and the eye-open state are shown in Figure 3.
5000
4000
3000
5000

0

2

4

6

8

10

12

14

0

2

4

6

8

10

12

14

0

2

4

6

8

10

12

14

4000
3000
5000
4000
3000

(a)
5000
4500
4000
5000

0

2

4

6

8

10

12

14

0

2

4

6

8

10

12

14

0

2

4

6

8

10

12

14

4500
4000
5000
4500
4000

(b)
Figure 3. (a) The eye-closed state samples (b) The eye-open state samples

In the experiments, the training set includes 60 samples with each 30 samples separately from two
states, and the test set consists of 60 samples. The RBF-PNN structure parameters are : 1 timevarying input node n = 1 , 8 RBF hidden nodes m = 8 and 1 common output node. The discrete
sampling number is S = 14 , the population size is 25，optimization iteration number is 1000,
and the error precision is 0.03. As the comparison, we also use gradient descent (GD) algorithm
[5] and GA to train the RBF-PNN. Each algorithm runs 10 times, and then three algorithms are
separately used to identify the test samples. The average identification accuracy is shown in
Figure 4. It can be seen that the SA’s join into GA prevents into local minimum effectively and
improves the identification result of the networks.

Accuracy (%)

100
95
90
85
80

GD

GA

GA-SA

7

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013
Figure 4. Accuracy of three identification algorithms

In addition, the training algorithms based on generalized Fréchet distance and on
orthogonal basis expansion are respectively adopted to train the RBF-PNN. The
accuracy based on generalized Fréchet distance is superior to on orthogonal basis
expansion. This is because the algorithm based on orthogonal basis expansion has fitting
error and truncation error inevitably.

6. CONCLUSIONS
A RBF-PNN training method based on GA and SA hybrid optimization strategy is put forward in
this paper. According to the network training objective function, by building a generalized
Fréchet distance used to measure similarity between time-varying function samples, the
functional optimization problem of RBF-PNN training is converted into extremal optimization
solving of multivariate function, and the global optimization solution of the network parameters is
obtained in the feasible solution space. It also has certain reference value for other machine
learning and complex function optimization problems.

REFERENCES
[1]

[2]
[3]

[4]

[5]
[6]

[7]
[8]
[9]
[10]
[11]
[12]

[13]

Powel M .J. D. (1985) “Radical basis functions for multivariable interpolation: A review”, IMA
conference on Algorithms for the Approximation of Functions and Data, RMCS, Shrivenham, UK: pp
143-167.
Broomhead D. S, Lowe D. (1988) “Multivariable function interpolation and adaptive networks”,
Complex Systems, No. 2, pp 321-355.
He S, Zou Y, Quan D, et al. (2012) “Application of RBF Neural Network and ANFIS on the
Prediction of Corrosion Rate of Pipeline Steel in Soil ”, Recent Advances in Computer Science and
Information Engineering. Springer Berlin Heidelberg, pp 639-644.
Kang Li, Jian-Xun Peng et al. (2009) “Two-Stage Mixed Discrete–Continuous Identification of
Radial Basis Function (RBF) Neural Models for Nonlinear Systems ”, IEEE Transactions on Circuits
and Systems， Vol. 56, No.3, pp 630-643.
Xu Shao-hua, He Xin-gui. (2004) “Research and applications of radial basis process neural networks
”,Journal of Beijing University of Aeronautics and Astronautics, Vol. 30, No. 1, pp14-17.
De Jong K. (2012) “Evolutionary computation: a unified approach[C] Proceedings of the fourteenth
international conference on Genetic and evolutionary computation conference companion. ACM, pp
737-750.
Simon D. (2011) “A probabilistic analysis of a simplified biogeography-based optimization
algorithm”, Evolutionary computation, Vol. 19, No. 2, pp 167-188.
Vidal T, Crainic T G, Gendreau M, et al. (2012) “A hybrid genetic algorithm for multidepot and
periodic vehicle routing problems ”, Operations Research, Vol. 60, No. 3, pp 611-624.
De Giovanni L, Pezzella F. (2010) “An improved genetic algorithm for the distributed and flexible
job-shop scheduling problem ”, European journal of operational research, 2010, 200(2): 395-408.
Alt H, Godau M, (1992) “Measuring the Resemblance of Polygonal Curves”, In Proceedings of the
8th Annual Symposium on Computational Geometry, pp.102-109.
Eiter T, Mannila H, (1994) “Computing Discrete Fréchet Distance”, Viena: Information Systems
Department, Technical University of Viena .
Minghui Jiang, Ying Xu, Binhai Zhu, (2007) “Protein Structure-structure Alignment with Discrete
Fréchet Distance ”, In Proceedings of the 5th Asia-Pacific Bioinformatics Conference, APBC, pp131141.
Jianbin Zheng, Xiaolei Gao, Enqi Zhan, Zhangcan Huang, (2008) “Algorithm of On-line Handwriting
Signature Verification Based on Discrete Fréchet Distance ”, In Proceedings of the 3rd International
Symposium on Intelligence Computation and Applications, ISICA 2008, pp 461-469.
8

Computer Science & Engineering: An International Journal (CSEIJ), Vol. 3, No. 6, December 2013
[14] Avinaash M R, Kumar G R, Bhargav K A, et al. (2013) “Simulated annealing approach to solution of
multi-objective optimal economic dispatch ”, Intelligent Systems and Control (ISCO), 2013 7th
International Conference on. IEEE, pp 127-132.

Authors
Wang Bing, born in 1982, is a Ph.D. candidate in Northeast Petroleum University. She
received her Bachelor and Master degrees in Northeast Petroleum University, DaQing
province China in 7/2004, 4/2007 respectively. From 2007 to now she is a lecturer at
Department of Computer & Information Technology, Northeast Petroleum University.
She majors in process neural networks, intelligence information processing and data
mining etc. She has published more than 5 refereed journal and conference papers.
Meng Yao-hua, born in 1981, is a Ph.D. candidate in the Harbin Institute of Technology,

Communication Research Center. He received his Bachelor and Master degrees in
Northeast Petroleum University, DaQing province China in 7/2003, 8/2007 respectively.
From 2007 to 2010 he was a lecturer at Department of Electrical and Electronic
Engineering, Heilongjiang Bayi Agricultural University. During the year 2011, he was a
visiting scholar at Harbin Institute of Technology. In August 2012, he joint Centre for
massive dataset mining at Harbin Institute of Technology as a researcher. His research of
interests includes process neural networks, signal and information processing etc.
Yu Xiao-hong, born in 1982, is an engineer in Exploration and Development Research
Institute of Daqing Oilfield Company, China. She received her Bachelor and Master
degrees in Northeast Petroleum University, DaQing province China in 7/2005, 4/2008
respectively. From 2008 to now she works in Daqing Oilfield Company. Her interests
include oil field data identification, artificial neural networks, intelligent information
processing etc.

9

