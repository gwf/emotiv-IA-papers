IUI 2015 • Poster & Demo Session

March 29–April 1, 2015, Atlanta, GA, USA

MuLES: An Open Source EEG Acquisition and Streaming
Server for Quick and Simple Prototyping and Recording
Raymundo Cassani, Hubert Banville, Tiago H. Falk
INRS-EMT, University of Quebec, Montreal, QC, Canada
{raymundo.cassani, hubert.banville, falk}@emt.inrs.ca
Electroencephalography (EEG) is a non-invasive technique
that measures the electrical activity in the cerebral cortex
evoked by neurons’ synchronized firing. By recording voltage levels between various points on one’s scalp, this technique gives a global snapshot of the underlying brain activity [18]. Over the past decades, EEG has thus been used
extensively for the study of neocortical processes, the diagnosis of diseases and the development of brain-computer interfaces. While traditional EEG devices were constrained to
laboratory and medical settings due to their high cost, form
factor and operation complexity, a wave of portable and affordable headsets came to the consumer market over the last
few years [3, 13, 16]. The portability and availability of
these consumer grade devices allow EEG to be applied in new
unexplored ways, both in established application fields such
as psychology, neuroscience and brain-computer interfacing,
and in novel domains such as neurogaming, live performance
and creative art.

ABSTRACT

The past few years have seen the availability of consumer
electroencephalography (EEG) devices increase significantly.
These devices, usually with a compact form factor and affordable price, now allow researchers and enthusiasts to use
EEG in various new contexts and environments. However,
the many consumer headsets often require extensive programming experience to interface with their respective drivers;
moreover, standardization of the access and recording of EEG
data across the devices still remains to be done. Consequently, a tool is needed to facilitate the recording and streaming of EEG data from consumer headsets that can easily be interfaced with different programming languages and software,
and that allows interchangeability between devices. This
paper describes the open source MuSAE Lab EEG Server
(MuLES), an EEG acquisition and streaming server that aims
at creating a standard interface for portable EEG headsets, in
order to accelerate the development of brain-computer interfaces (BCIs) and of general EEG use in novel contexts. In
addition to the EEG server interface which currently supports
five different consumer devices and session playback, clients
are developed for use on different platforms and in various
programming languages, making prototyping and recording
a quick and simple task. To validate the functionality and
usability of the EEG server, a use case highlighting its main
features is presented. The developed tool simplifies the acquisition and recording of EEG data from portable consumer
devices by providing a single efficient interface, with applications in areas such as basic and behavioural research, prototyping, neurogaming, live performance and arts.

Although they offer many advantages, these devices, coming from various vendors, do not offer a common standard
interface. Indeed, each headset typically has its own application programming interface (API), software development
kit (SDK) or communication protocol. Users with little or
no programming experience, who are more likely to be interested by these new devices, may therefore be overwhelmed
by the required work to get a headset functioning, thus hindering its usability in novel applications. Furthermore, interchangeability between EEG headsets, which is an interesting aspect when prototyping or expanding the use of an
application across platforms, is very poor since the implementation must be modified for each different headset type.
Software tools have been developed over the last few years
to provide an interface for different EEG devices - mainly
traditional research-oriented devices - generally for BCI programming [1], such as BCI2000 [22], OpenVIBE [21] and
BCILAB [9]. However, these toolboxes are research-oriented
and usually require good programming skills, and knowledge
of EEG processing. The effort necessary to use them might
still be prohibitive for many potential users, and overkill in
applications where advanced processing features are not necessary.

Author Keywords

Electroencephalography (EEG); Brain-computer interface
(BCI); Neurogaming; Neurofeedback; Portable EEG.
ACM Classification Keywords

H.5.2 Information interfaces and presentation: User Interfaces – Input devices and strategies
INTRODUCTION

In order to better meet the needs of this potential user base,
the MuSAE Lab EEG Server (MuLES) was developed. This
open source software tool provides a minimalist graphical
user interface (GUI) to allow quick and simple interfacing
with different portable EEG consumer devices. It implements
a common interface for acquisition and recording of EEG

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. For all other uses, contact the Owner/Author(s).
Copyright is held by the owner/authors(s).
IUI’15 Companion, Mar-29 - Apr 01, 2015, Atlanta, GA, USA.
Copyright c 2015 ACM 978-1-4503-3308-5/15/03.
http://dx.doi.org/10.1145/2732158.2732193

9

IUI 2015 • Poster & Demo Session

March 29–April 1, 2015, Atlanta, GA, USA

Table 1. Devices supported by MuLES, including the name of the respective third party software used for communicating with the devices.
EEG
API / SDK
Price
Number of
Headset
or driver
(USD)
electrodes
Interaxon
Muse SDK [14]
Muse
Communication protocol
200
4, 6 a
implemented in MuLES
Emotiv
Emotiv SDK b [4] and
Epoc
LabVIEW Emotiv
400
14
Toolkit V2 [10]
OpenBCI
OpenBCI Dongle drivers [6]
V3
and LabVIEW OpenBCI
450
8, 16
Toolkit [11]
Neuroelectrics NIC software [8]
Enobio
Communication protocol
—c
8, 20, 32
implemented in MuLES
Neurosky
Neurosky driver [12] and
Mindset
NeuroSky LabVIEW Driver
100 d
1
Driver [17]
a Requires Muse Research Firmware
b Research, Education or Enterprise Plus SDK is needed to get raw EEG
c Under request
d Estimated price, MindSet is not longer sold by NeuroSky

Figure 1. Architecture of MuLES: EEG devices are connected through
their respective drivers, and communication to external client applications is done following the TCP/IP protocol.

data, as well as EEG data streaming over a TCP/IP connection. Example scripts for client applications are provided in
different programming languages and development environments. The functionality and usability of MuLES was tested
and validated during a 36-hour hackathon where its main features were used for prototyping a BCI-based game.

Quick access to the features of MuLES is allowed through its
minimalist graphical user interface, shown in Figure 2. The
GUI consists of four different sections: (a) input device selection, (b) recording and streaming controls, (c) start/stop
acquisition and (d) current server state information.
Default parameters can be changed to adjust MuLES’s
recording and streaming behaviour (e.g., TCP port, data format and device settings) using an intelligible configuration
text file. Moreover, MuLES can be called and run from the
command line, making it easy to automate recording and
streaming from external applications. Time markers can be
sent at this layer during acquisition using the keyboard.

This paper is organized as follows: first, a technical description of MuLES is provided; second, a successful use case and
potential applications are presented; finally, future work is
highlighted.
TECHNICAL DESCRIPTION

MuLES is designed as the server part of a client-server architecture. As shown in Figure 1, the server handles the communication between the various EEG devices and makes their
data accessible for client applications and/or logging. The
source code and executables are provided under the MIT licence and freely available online [7].

Data recording layer

EEG data and markers can be directly recorded in a custom
CSV and/or standard EDF format, making it straightforward
to import the data for analysis in different software packages
(such as EEGLAB [2]) and programming languages.
Data streaming layer

Hardware layer

Streaming to client applications is done using an implementation of the TCP/IP protocol, allowing data transmission on
a single computer, over a local network or over the Internet.
Client scripts can be written in any programming language
supporting basic socket programming, such as MATLAB and
Python. Additionally, clients can send markers back to the
acquisition layer for recording in a file.

MuLES currently allows the use of one of five consumer EEG
devices: InteraXon Muse [13], Emotiv Epoc [3], Neurosky
Mindset [16], Neuroelectrics Enobio [5] and OpenBCI [19].
Clinical- and research-grade devices, not being the current
focus of MuLES, are not yet supported. Nonetheless, prerecorded data in CSV or EDF formats, recorded from either
portable or research-grade devices, can be streamed in the
present version of MuLES (v.1.0).

CHARACTERISTICS

Because it is developed in the LabVIEW ecosystem, MuLES
can be easily adapted to run in other operating systems such
as Linux and OS X. The toolbox is already compatible with
32- and 64-bit versions of the Windows OS. The LabVIEW
runtime engine is required for running the application. Compiling the executable from source, which might be useful in
some cases, requires a paying LabVIEW Application Builder
licence. EEG device manufacturers’ APIs and SDKs are also
required for running the toolbox, but they are usually free.

Data acquisition layer and user interface

Acquisition from the supported hardware is done through
third party SDKs, APIs, drivers or direct implementation of
the devices’ communication protocol, as shown in Table 1.
Additional hardware and drivers can be interfaced using native LabVIEW code, as done with the already provided open
source implementations. Streaming of pre-recorded data is
handled directly in the software.

10

IUI 2015 • Poster & Demo Session

March 29–April 1, 2015, Atlanta, GA, USA

Finally, since portable, consumer-oriented headsets are the
primary focus of MuLES, support for standard, clinical-grade
EEG devices is currently not available. These devices will
however be considered in future releases of the toolbox. Similarly, recording and streaming from files is currently limited
to a custom CSV format and the standard EDF format; other
formats will be added in future iterations.
USE CASE AND APPLICATIONS
A neurogaming experience developed in under 36 hours

A preliminary version of MuLES was used during
WearHacks 2014, a hackathon targeted at wearable devices
that took place in the Fall 2014 in Montreal, Canada [23].
Teams of a few participants had less than 36 hours to design
and develop an innovative product based on physiological and
contextual data provided by wearables. In this context, a neurogaming project entitled neuralDrift was developed to show
how EEG can be used in an entertaining way [15]. In the
game, two players wear consumer EEG headsets that send
neurophysiological data to a remote computer. This data is
analysed in real-time to infer user intent, for example by mapping a meditative state (characterized by higher alpha power
in the temporal and occipital regions of the brain) to a slowing down command, and a concentrated state (characterized
by higher beta power in the frontal region of the brain) to
an acceleration command. The commands are then sent to a
robot that the two players must collaboratively control.

Figure 2. The graphical user interface (GUI) of MuLES and its sections: (a) input device selection, (b) recording and streaming controls,
(c) start/stop acquisition and (d) current server state information

Although MuLES is based on LabVIEW, the reliance on the
TCP/IP protocol means client scripts can be programmed in
any programming language, and thus do not have to be in the
same language as the server. This allows for great flexibility
in designing new EEG processing applications and interfacing with already existing ones. For example, client applications could be implemented in a straightforward manner on
mobile devices such as tablets and smartphones. In fact, this
is the focus of ongoing work.

Due to the hard time constraints of the hackathon, MuLES
was used to expedite the development process. First, exploratory data of users performing different mental tasks that
could potentially elicit recognizable brain patterns was collected. The headset available at that time could be readily used to record EEG data with the quick data collection
interface of MuLES. The data was then imported in an offline analysis tool to decide on the optimal control strategy to adopt. Second, during the design phase, MuLES
was used to provide a single EEG data streaming interface
compatible with any of the three different headsets available. The interfacing with the APIs and SDKs was handled
by the EEG server, thus, no time was wasted on vendorspecific implementation details. Moreover, multiple instances
of MuLES were used on the same computer to allow simultaneous recording and streaming from two players. Third,
once the game prototype was functional, the use of MuLES in
the backend allowed complete interchangeability of portable
EEG headsets with minimal modifications to the implementation (such as the number of EEG channels to process).

Above all, MuLES stands out amongst other similar alternatives thanks to its simple and easy to use GUI, currently available in English, Spanish and French. The minimalist interface
makes recording and streaming EEG data to a client application a matter of a few clicks. MuLES is also controllable
from the command line, making it easy to automate recordings and streaming sessions. Configuring a device is simple
and can be done by modifying a comprehensive settings file.
Furthermore, different profiles can be saved and loaded for
each device, allowing their use in different scenarios without
lengthening the setup time.
Sending and receiving triggers, a crucial task when collecting
EEG data, is also supported and can be done by the user via
a keyboard, or directly from a client application. However,
it is to be noted that a lag of a few milliseconds makes the
use of MuLES’s triggers for event-related potential research
unreliable. This is not problematic, however, for burgeoning
applications that do not rely on precise time-locked events.

While achieving similar results might have been possible using other EEG toolboxes, the minimalist approach of MuLES
allowed a quick and simple setup and supported all the available EEG headsets. These features made the prototyping
steps particularly efficient in the context of a hackathon and
allowed the team to produce a functional prototype. Moreover, new features have since been added to MuLES following recommendations from the team, such as the capacity to
connect to multiple devices of the same type using multiple
MuLES instances, logging in different file formats, and example client scripts in other programming languages.

By running multiple instances of MuLES simultaneously, it
is easy to connect and use multiple devices at the same time.
This opens the way to new opportunities in studying social interactions and collaborative neurogaming with EEG devices.

11

IUI 2015 • Poster & Demo Session

March 29–April 1, 2015, Atlanta, GA, USA

3. Emotiv EPOC/EPOC+.

Potential applications

http://www.emotiv.com/epoc.php.

Many fields that already benefit from EEG research as well as
new application fields could take advantage of a tool allowing
efficient interfacing with portable consumer EEG devices. In
established research fields, such as psychology, cognitive science and brain-computer interfacing, amongst others, users
can now rapidly make use of affordable EEG headsets outside
of standard laboratory settings. Newcomers to these fields can
also start to collect and use EEG data much faster.

4. Emotiv eStore SDK, Emotiv.

https://emotiv.com/store/sdk/.

5. NE neuroelectics Enobio.

http://www.neuroelectrics.com/enobio.

6. Getting Started with OpenBCI, OpenBCI. http:

//docs.openbci.com/tutorials/01-GettingStarted.

New application fields can also benefit from the possibilities
enabled by MuLES. For example, art and live performances
can readily use EEG data as part of exhibitions and shows,
allowing new immersive experiences. The development of
neurogaming applications, such as the neuralDrift discussed
above, can be greatly simplified by such a tool as well.

7. MuLES (MuSAE Lab EEG Server) GitHub.
https://github.com/MuSAELab/MuLES.
8. Interacting with NIC, Neuroelectrics.
http://wiki.neuroelectrics.com/index.php/
Interacting_with_NIC.

9. Kothe, C. A., and Makeig, S. BCILAB: a platform for
brain–computer interface development. Journal of
Neural Engineering 10, 5 (2013), 056014.

CONCLUSION AND FUTURE WORK

The MuSAE Lab EEG Server (MuLES) is an open source
EEG acquisition and streaming server with a simple unified
interface for portable EEG headsets such as the Emotiv EEG
[3], the InteraXon Muse [13] and the OpenBCI [19], allowing
prototyping and development of EEG applications in traditional and novel contexts such as brain-computer interfacing.

10. LabVIEW Emotiv Toolkit V2, NI and MuSAE Lab.

https://decibel.ni.com/content/docs/DOC-40699.

11. LabVIEW OpenBCI Toolkit, MuSAE Lab.

https://decibel.ni.com/content/docs/DOC-40837.

Developed in LabVIEW and making use of the TCP/IP protocol, MuLES can be used on and across multiple platforms and
programming languages to record and stream multi-channel
EEG data. Its functionalities were tested and validated during
a hackathon, which gave rise to the neuralDrift, a neurocomputing game based on portable EEG headsets.

12. MindSet Documentation, NeuroSky.
http://developer.neurosky.com/docs/doku.php?id=
mindset.

13. InteraXon Muse. http://www.choosemuse.com/.
14. Muse Developer Resources, Interaxon. https://sites.
google.com/a/interaxon.ca/muse-developer-site/.

Future versions of the toolbox will include many improvements and new features: compatibility with other operative
systems; support for clinical-grade EEG devices; support for
non-EEG devices (such as electrocardiography, galvanic skin
response and temperature sensors); integrated computation of
basic EEG features such as frequency transforms; support of
other file formats for recording and streaming; and example
clients in other programming languages and software frameworks such as Unity. Specific communication protocols for
each device can also be implemented to provide more advanced functionalities (such as getting other available information: accelerometer data, contact quality information, etc.)
and an optimized functioning (for example in embedded applications).

15. NeuralDrift: A multiplayer collaborative
neurocomputing game. http://neuraldrift.net/.
16. NeuroSky EEG Hardware. http://neurosky.com/
products-markets/eeg-biosensors/hardware/.
17. NeuroSky LabVIEW Driver, NI .

https://decibel.ni.com/content/docs/DOC-19690.

18. Nunez, P. L., and Srinivasan, R. Electric fields of the
brain: the neurophysics of EEG. Oxford University
Press, Oxford; New York, 2006.
19. OpenBCI. http://www.openbci.com/.

In the end, it is hoped that MuLES will make research and application development with EEG easier and more accessible.

20. Porting VIs among Platforms, National Instruments.

ACKNOWLEDGEMENTS

21. Renard, Y., et al. OpenViBE: an open-source software
platform to design, test, and use brain-computer
interfaces in real and virtual environments. Presence:
teleoperators and virtual environments 19, 1 (2010),
35–53.

REFERENCES

22. Schalk, G., McFarland, D. J., Hinterberger, T.,
Birbaumer, N., and Wolpaw, J. R. BCI2000: a
general-purpose brain-computer interface (BCI) system.
Biomedical Engineering, IEEE Transactions on 51, 6
(2004), 1034–1043.

http://digital.ni.com/public.nsf/allkb/
4600B3F9007FF4D78625727D0059D878l.

The authors thank BCIMontreal for lending their EEG devices, Ana Tavera Mendoza for designing the MuLES logo,
and the neuralDrift team for their useful feedback on how to
improve MuLES functionalities.
1. Brunner, P., et al. BCI software platforms. In Towards
Practical Brain-Computer Interfaces. Springer, 2013,
303–331.
2. Delorme, A., and Makeig, S. EEGLAB: an open source
toolbox for analysis of single-trial EEG dynamics
including independent component analysis. Journal of
neuroscience methods 134, 1 (2004), 9–21.

23. WearHacks 2014. http://montreal.wearhacks.com/.

12

