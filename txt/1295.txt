U NIVERSITÀ DEGLI S TUDI DI G ENOVA
Doctoral Program in Bioengineering and Robotics

D OCTORAL T HESIS

Co-adaptive Control Strategies in
Assistive Brain-Machine Interfaces

Author:
Lucia S CHIATTI

Supervisors:
Leonardo S. M ATTOS, Ph.D.
Prof. Darwin Caldwell
Reviewers:
Prof. Aldo Faisal
Claudio Pacchierotti, Ph.D.

Department of Informatics, Bioengineering,
Robotics and Systems Engineering
and
Biomedical Robotics Lab
Department of Advanced Robotics
I STITUTO I TALIANO DI T ECNOLOGIA

2018 - XXX Cycle

iii

UNIVERSITÀ DEGLI STUDI DI GENOVA

Abstract
Co-adaptive Control Strategies in Assistive Brain-Machine Interfaces
by Lucia S CHIATTI
A large number of people with severe motor disabilities cannot access any of the
available control inputs of current assistive products, which typically rely on residual motor functions. These patients are therefore unable to fully benefit from existent
assistive technologies, including communication interfaces and assistive robotics. In
this context, electroencephalography-based Brain-Machine Interfaces (BMIs) offer a
potential non-invasive solution to exploit a non-muscular channel for communication and control of assistive robotic devices, such as a wheelchair, a telepresence
robot, or a neuroprosthesis. Still, non-invasive BMIs currently suffer from limitations, such as lack of precision, robustness and comfort, which prevent their practical
implementation in assistive technologies.
The goal of this PhD research is to produce scientific and technical developments
to advance the state of the art of assistive interfaces and service robotics based on
BMI paradigms. Two main research paths to the design of effective control strategies
were considered in this project. The first one is the design of hybrid systems, based on
the combination of the BMI together with gaze control, which is a long-lasting motor
function in many paralyzed patients. Such approach allows to increase the degrees
of freedom available for the control. The second approach consists in the inclusion
of adaptive techniques into the BMI design. This allows to transform robotic tools and
devices into active assistants able to co-evolve with the user, and learn new rules of
behavior to solve tasks, rather than passively executing external commands.
Following these strategies, the contributions of this work can be categorized
based on the typology of mental signal exploited for the control. These include:
1) the use of active signals for the development and implementation of hybrid eyetracking and BMI control policies, for both communication and control of robotic
systems; 2) the exploitation of passive mental processes to increase the adaptability
of an autonomous controller to the user’s intention and psychophysiological state,
in a reinforcement learning framework; 3) the integration of brain active and passive control signals, to achieve adaptation within the BMI architecture at the level of
feature extraction and classification.

v

Acknowledgements
While approaching the end of this intense and enriching experience, I would like,
first of all, to thank my supervisor Leonardo De Mattos. I thank him for giving me
the opportunity to work on a challenging and motivating doctorate project at the
Biomedical Robotics Lab, and for encouraging in these three years the freedom of
my research interests, while giving me a guide that kept me solid and pragmatic in
the results.
I thank Prof. Darwin Caldwell, for giving me the opportunity to carry on my job
at the Department of Advanced Robotics.
I cannot miss to thank my team colleagues in the TEEP-SLA project, Giacinto
Barresi, Jacopo Tessadori, Louis King, Fanny Larradet, Alexey Petrushin, for their
collaboration, advices, and constructive discussions.
I also thank colleagues from the administrative office, who helped me dealing
with all practical issues, Silvia Ivaldi, Simona Ventriglia, and in particular Valentina
Rosso, for her friendship beyond the work.
A special thanks to my companions of adventure and misadventure of the XXX
doctoral cycle, Alperen Acemoglu, Matteo Rossi, Zhuoqi Cheng, Lorenzo Saccares,
Stefano Toxiri, Sara Moccia, and to the old and new friends in the open space at the
4th floor (and beyond), who helped me a lot in my learning process on how to do
research, and made my stay in Genova very enjoyable, especially Veronica Penza,
Jesus Ortiz, Olmo Moreno, Jorge Fernandez, João Bimbo, Claudio Pacchierotti, Andrea Ciullo, André Geraldes, Ioannis Sarakoglou and Nikhil Deshpande.
I thank my flat mates and colleagues Samuele Martelli, Sep Driessen, and Marco
Contardi (even if he is not an engineer) for the inspiring discussions on the future
and for sharing with me their vision and experiences.
Finally, I thank my family, because it is thanks to them that I had the degree
requirements to access this doctoral course, and for being always present.

vii

Contents
Abstract

iii

Acknowledgements

v

I

State of the Art and Contribution

1

1

Assistive Technologies based on the BCI paradigm
1.1 Background . . . . . . . . . . . . . . . . . . . . . . . .
1.1.1 Assistive Technologies for Paralyzed People .
1.1.2 Brain-Machine and Brain-Computer Interfaces
System Architecture . . . . . . . . . . . . . . .
BCI Classification . . . . . . . . . . . . . . . . .
Neuroimaging Methods . . . . . . . . . . . . .
Mental Control Signal . . . . . . . . . . . . . .
1.1.3 Applications for Paralyzed People . . . . . . .
1.2 Current challenges . . . . . . . . . . . . . . . . . . . .
1.3 Towards Intelligent Assistive BCIs . . . . . . . . . . .
1.3.1 Hybrid approach . . . . . . . . . . . . . . . . .
1.3.2 Adaptation . . . . . . . . . . . . . . . . . . . .

2

II
3

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.

Contribution and Objectives

17

Active Control Signals: Hybrid ET-BCI Approach
Focus Sensitive Dwell time in Eye-BCIs
3.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.1.1 Background: EyeBCI Paradigms . . . . . . . . . . . .
3.1.2 Introducing a Focus-Sensitive Dwell Time in EyeBCI
3.2 Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.1 Setup . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.2 Task . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2.3 Experimental Conditions . . . . . . . . . . . . . . . .
3.2.4 Experimental Procedure . . . . . . . . . . . . . . . . .
3.2.5 Measures . . . . . . . . . . . . . . . . . . . . . . . . . .
Objective Measures of Performance . . . . . . . . . .
Subjective Measures of User Experience . . . . . . . .
3.3 Results and Discussion . . . . . . . . . . . . . . . . . . . . . .
3.4 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3
3
3
6
7
7
9
9
11
12
13
13
14

21
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.

23
23
24
24
25
25
27
27
27
28
28
28
28
31

viii
4

III
5

6

IV
7

Soft Brain-Machine Interfaces for Assistive Robotics
4.1 Introduction . . . . . . . . . . . . . . . . . . . . . .
4.2 Methods . . . . . . . . . . . . . . . . . . . . . . . .
4.2.1 Web cameras . . . . . . . . . . . . . . . . .
4.2.2 Eye-Tracker . . . . . . . . . . . . . . . . . .
4.2.3 Brain-Computer Interface . . . . . . . . . .
4.2.4 Graphical User Interface (GUI) . . . . . . .
4.2.5 Actuated System . . . . . . . . . . . . . . .
4.3 System evaluation . . . . . . . . . . . . . . . . . . .
4.3.1 Tasks . . . . . . . . . . . . . . . . . . . . . .
4.4 Results and Discussion . . . . . . . . . . . . . . . .
4.5 Conclusions . . . . . . . . . . . . . . . . . . . . . .

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.

33
33
35
36
36
37
38
39
39
41
41
43

Passive Control Signals: Machine Adaptation to User

45

The Effect of Tactile Feedback on ErrP Single-Trial Detection
5.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2 Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2.1 Experimental protocol . . . . . . . . . . . . . . . . .
5.2.2 EEG signal processing . . . . . . . . . . . . . . . . .
Error related potentials . . . . . . . . . . . . . . . .
Classification . . . . . . . . . . . . . . . . . . . . . .
5.3 Results and Discussion . . . . . . . . . . . . . . . . . . . . .
5.3.1 Error related potentials . . . . . . . . . . . . . . . .
5.3.2 Classification . . . . . . . . . . . . . . . . . . . . . .
5.4 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . .

.
.
.
.
.
.
.
.
.
.

47
47
49
49
50
50
51
52
52
53
55

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

57
57
59
59
61
61
61
63
65
67
67
67
68
69
69
70
70

EEG-based Reward Signal for Robot Learning
6.1 Introduction . . . . . . . . . . . . . . . . . .
6.2 Methods . . . . . . . . . . . . . . . . . . . .
6.2.1 Experimental Protocol . . . . . . . .
6.2.2 Experimental Setup . . . . . . . . . .
6.2.3 Algorithms . . . . . . . . . . . . . .
EEG Analysis . . . . . . . . . . . . .
Robot Learning . . . . . . . . . . . .
6.3 Simulation Study . . . . . . . . . . . . . . .
6.4 Results and Discussion . . . . . . . . . . . .
6.4.1 EEG Analysis . . . . . . . . . . . . .
ErrP Detection . . . . . . . . . . . .
ErrP Classification . . . . . . . . . .
6.4.2 Robot Learning . . . . . . . . . . . .
Route Learning . . . . . . . . . . . .
Target Learning . . . . . . . . . . . .
6.5 Conclusions . . . . . . . . . . . . . . . . . .

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

Active and Passive Control Signals: Co-adaptive Systems

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.

71

Mutual Information-based Feature Selection for Motor Imagery
73
7.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
7.2 Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74

ix
.
.
.
.
.

74
75
75
76
80

Tactile Feedback in Error-based Adaptive Classification of Motor Imagery
8.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8.2 Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
8.2.1 Adaptive classification . . . . . . . . . . . . . . . . . . . . . . . .
8.2.2 Experimental protocol . . . . . . . . . . . . . . . . . . . . . . . .
8.2.3 Experimental setup . . . . . . . . . . . . . . . . . . . . . . . . . .
8.2.4 ErrP classification . . . . . . . . . . . . . . . . . . . . . . . . . . .
8.2.5 Motor imagery task classification . . . . . . . . . . . . . . . . . .
8.3 Results and Discussion . . . . . . . . . . . . . . . . . . . . . . . . . . . .
ErrP classification . . . . . . . . . . . . . . . . . . . . . . . . . . .
8.3.1 Motor imagery task classification . . . . . . . . . . . . . . . . . .
Static classification . . . . . . . . . . . . . . . . . . . . . . . . . .
8.3.2 Adaptive classification . . . . . . . . . . . . . . . . . . . . . . . .
8.4 Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

81
81
83
83
84
85
86
87
88
88
88
88
89
91

7.3
7.4
8

7.2.1 Dataset . . . . . . . . . . . . . . . . .
7.2.2 Pre-processing . . . . . . . . . . . .
7.2.3 Feature Selection and Classification
Results and Discussion . . . . . . . . . . . .
Conclusions . . . . . . . . . . . . . . . . . .

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

.
.
.
.
.

Conclusions

93

Bibliography

97

xi

List of Figures
1.1
1.2

1.3
1.4
1.5

Access solution scheme, adapted from Doble et al., 2003. . . . . . . . .
Categorization of access technologies based on the source used to generate the User Interface (UI) control signal expressing a functional intent. Adapted from Doble et al., 2003 . . . . . . . . . . . . . . . . . . . .
Components of a Brain-Computer Interface system (Wolpaw et al.,
2002). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
BCI classification according to (Ramadan et al., 2017). . . . . . . . . . .
Active and Passive BCI classification based on EEG activity exploited
to generate mental control signal (adapted from Ramadan et al., 2017).
Among evoked activity, the most used paradigms include SteadyState Evoked Potentials (SSEPs), P300, Error Potentials (ErrPs). Among
spontaneous activity, modulation of sensorimotor rhythms, Slow Cortical Potentials (SCPs) and non-motor cognitive tasks are the main
control strategies. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4

5
7
8

9

2.1
2.2

Co-adaptive assistive BMI. . . . . . . . . . . . . . . . . . . . . . . . . . . 18
Contributions and thesis structure. . . . . . . . . . . . . . . . . . . . . . 19

3.1
3.2

(a) Experimental setup, (b) on-screen keyboard and (c) states of a key. . 25
Performance indices - means (across users in each trial, representing
a condition) with upper standard deviation bars. . . . . . . . . . . . . . 28
Scores - means with upper standard deviation bars, across subjects of the 8 rating scales presented in the user experience questionnaire. . 31

3.3
4.1

4.2
4.3
4.4

System setup for Soft Brain-Machine Interface: translational movements of the robot in space are controlled by human gaze, while an
EEG-driven unidimensional index regulates the robot Cartesian stiffness in real-time. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Information workflow between system components. . . . . . . . . . .
Graphical User Interface. . . . . . . . . . . . . . . . . . . . . . . . . . .
Results from system evaluation. Panels A-B: distance between current arm endpoint and selected target for high (panel A) and low
(panel B) stiffness trials and corresponding estimated endpoint forces
in the push direction (panels C-D). t = 0 corresponds to Kuka receiving movement command. Black triangles indicate the approximate contact moment between soft hand and object. Panels E-H: distance traveled by arm endpoint since t = 0 in the vertical direction,
for high (panel E) and low (panel F) stiffness trials and corresponding estimated endpoint forces, in the vertical direction. t = 0 corresponds to Kuka receiving movement command. Contact between
grasped object and obstacle occurs almost immediately after movement start. Blue (orange) line depicts trials performed by experienced
(naive) user (S1, S2 respectively). . . . . . . . . . . . . . . . . . . . . .

. 35
. 36
. 38

. 40

xii
4.5

Screen shots of the heavy object pushing (Task 1) and collision (Task 2)
tasks in active mental state (stiff) and neutral mental state (compliant).
For the second task, two different examples of the active (stiff) case for
the two subjects are provided. . . . . . . . . . . . . . . . . . . . . . . . . 42

5.1

Experimental protocol: (a) experimental setup; (b) scene at the beginning of a session; (c) scene at the end of a session. . . . . . . . . . . .
Grand averages of filtered EEG data for one channel, FCz, in 1 s time
window after stimulus onset. Columns refer to different paradigms
for stimuli (respectively, only visual V, concordant visuo-tactile VT,
discordant visuo-tactile VT stimuli). Blue lines represent the average
of all trials following a correct cursor movement, while red lines depict averages of erroneous trials. Thick green lines represent the difference of the two signals (erroneous minus correct). . . . . . . . . . .
Classification results: (a) Classification rates for correct and erroneous
classes, for all subjects during visual (V) and visuo-tactile (VT) stimuli sessions. Last group of bars represent mean classification rates
across all subjects. Error bars represent standard deviations obtained
from different repetitions of the classification algorithm (S01 to S12)
or across subjects (mean group). (b) Box plots of observed AUC distributions for each subject, referring to visual only (V) and visuotactile stimuli (VT) conditions. Red (blue) box plots represent data obtained on subjects that underwent concordant (discordant) VT stimuli. Dashed lines in both panels represent average chance level classification rates or AUCs plus or minus one standard deviation. Chance
level results were obtained by training the classifier on actual datasets
with randomly shuffled labels. . . . . . . . . . . . . . . . . . . . . . .
Average ROC curves. Left graph reports curve obtained for trials during visual-only condition (V), middle and right graphs display ROC
curves for data acquired during experiments with visuo-tactile stimuli (respectively, concordant VT and discordant VT). Red (blue) plots
represent data obtained on subjects that underwent concordant (discordant) VT stimuli. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Distributions of changes in classification performance (AUC) with the
addition of tactile stimulus, for concordant VT (left box), discordant
VT (middle box) and combined sets (right box). Red line indicates median, blue box extends to first and third quartiles, whiskers reach most
extreme data outside of box. Reported p-values are resulting from
one-sided t-tests (* indicating significance at 5% significance level). .

5.2

5.3

5.4

5.5

6.1
6.2
6.3
6.4
6.5

. 49

. 51

. 52

. 54

. 55

System components and information flow in ErrP-based robot learning scheme. Adapted from Iturrate et al., 2015. . . . . . . . . . . . . . .
Graphical User Interface (GUI) for teleoperation during: training (left),
and testing phase (right). . . . . . . . . . . . . . . . . . . . . . . . . . . .
Simulation results for route learning. . . . . . . . . . . . . . . . . . . . .
Simulation results for target learning. . . . . . . . . . . . . . . . . . . .
Grand average of ErrPs (E-C) across all subjects and training trials for
channel FCz. Panels (a) and (b) display average C, E, and ErrP for V
and VT conditions. Panel (c) provides a comparison V and VT ErrPs.
Panels (d-f) provide a graphical representation of ErrP in frequency
domain, for V (d), VT (e), and VT-V (f). . . . . . . . . . . . . . . . . . .

58
59
66
66

67

xiii
6.6
6.7

Experimental results for route learning. . . . . . . . . . . . . . . . . . . 69
Experimental results for target learning. Red line indicates median,
blue box extends to first and third quartiles, whiskers reach most extreme data outside of box not considered outliers, and the outliers are
plotted individually using the ’+’ symbol. . . . . . . . . . . . . . . . . 69

7.1

Scalp electrodes setup: frontal area (F); central area (C); occipital area
(O), Emotiv EPOC channels (E). . . . . . . . . . . . . . . . . . . . . . . . 74
Classification accuracy using optimal features sets computed in time
windows TW1-3 for subjects: Sa, Sb, Sf, Sg from full 59 channels (-all)
and reduced to EPOC channels (-EE) Dataset I- BCI Competition IV;
S01, S02, S03 from Emotiv EPOC dataset. . . . . . . . . . . . . . . . . . 80

7.2

8.1

8.2
8.3

8.4

8.5

Scheme of adaptive classifier functioning. EEG signals are used both
to extract an active control signal (from a motor imagery task), and a
passive information (ErrP) on user’s evaluation of the MI classifier’s
output (after feedback is provided). The output of static ErrP classifier
is then used to update the MI adaptive classifier’s parameters, and to
improve its performance over time. . . . . . . . . . . . . . . . . . . . .
Block diagram of adaptive classifier algorithm presented in Llera et
al., 2011, and used in the present work. . . . . . . . . . . . . . . . . .
Experimental protocol. After 1.5 s from cue onset, a green arrow indicating which motor imagery task to performs appears for 4 s. After 1
s break a feedback, simulating MI classification output, is presented.
It consists in the movement of a virtual cursor in either the correct
direction or one randomly chosen among the other ones (erroneous).
Variation in classification accuracy from static to adaptive MI task
classifier, as function of the learning rate and considering 100% ErrP
detection accuracy, for all time windows, in V feedback condition. . .
Variation in classification accuracy from static to adaptive MI task
classifier, as function of the learning rate and considering 100% ErrP
detection accuracy, for all time windows,in VT feedback condition. .

. 82
. 83

. 85

. 89

. 90

xv

List of Tables
3.1
3.2

Performance data - means (M) with standard deviations (SD). . . . . . 29
Questionnaire data - means (M) with standard deviations (SD) - expressing the agreement of the subject (from 0 for "strong disagreement" to 100 for "strong agreement") with the statements in Figure 3.3
about different aspects of user experience. . . . . . . . . . . . . . . . . . 30

5.1
5.2

Classification performance for concordant stimuli . . . . . . . . . . . . 53
Classification performance for discordant stimuli . . . . . . . . . . . . . 53

6.1

ErrP classification results during training and testing, for subjects with
V feedback. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
ErrP classification results during training and testing, for subjects with
VT feedback. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68

6.2
7.1
7.2
7.3
7.4
8.1
8.2
8.3
8.4
8.5

8.6

Results of feature selection on (a) Dataset I-BCI Competition IV . . .
Results of feature selection on (b) EPOC channels from Dataset I-BCI
Competition IV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Results of feature selection on (c) Emotiv EPOC Dataset . . . . . . . .
Results of feature selection on (c) Emotiv EPOC Dataset . . . . . . . .

. 77

Classification accuracy for V condition with static ErrP classifier . . .
Classification accuracy for VT condition with static ErrP classifier . .
Classification accuracy for V condition with static MI classifier . . . .
Classification accuracy for VT condition with static MI classifier . . .
ANOVA results on classification accuracy change between V and VT
condition for each subject. Statistical significance threshold was chosen as p<0.01. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Change in classification accuracy from static to adaptive classifier considering the optimal TW and relative η for each subject, in V and VT
conditions, in case of ideal 100% ErrP accuracy, and for real values of
αn and α p (Tables 8.1 and 8.2) . . . . . . . . . . . . . . . . . . . . . . .

.
.
.
.

. 77
. 78
. 78
86
86
87
87

. 88

. 91

xvii

List of Abbreviations
AAC
ALS
AT
BCI
BMI
BP
CMI
CLIS
ECoG
EEG
EMG
EOG
ERD/ERS
ErrPs
ET
fMRI
FN
FP
GUI
IR
ITR
LIS
MEG
MI
NIRS
PET
RL
SCP
SNR
SSEPs
SSVEPs
TN
TP
UI
VOG

Augmentative and Alternative Communication
Amyotrophic Lateral Sclerosis
Assistive Technologies
Brain-Computer Interface
Brain-Machine Interface
Band-Power
Conditional Mutual Information
Complete Locked-In Syndrome
ElectroCorticoGraphy
ElectroEncphaloGraphy
ElectroMyoGraphy
Electro-OculoGraphy
Event-Related Desynchronization/Synchronization
Error-related Potentials
Eye-Tracking
functional Magnetic Resonance Imaging
False Negative
False Positive
Graphical User Interface
InfraRed
Information Transfer Rate
Locked-In Syndrome
MagnetoEncphaloGraphy
Motor Imagery
Near InfraRed Spectroscopy
Positron Emission Tomography
Reinforcement Learning
Slow Cortical Potentials
Signal to Noise Ratio
Steady-State Evoked Potentials
Steady-State Visual Evoked Potentials
True Negative
True Positive
User Interface
Video-OculoGraphy

1

Part I

State of the Art and Contribution

3

Chapter 1

Assistive Technologies based on
the BCI paradigm
1.1
1.1.1

Background
Assistive Technologies for Paralyzed People

Individuals with severe physical disabilities, whether congenital, traumatic or induced by a disease, have a limited independence due to lack of alternative means
to interact with the surrounding world (Tai et al., 2008). In this context, Assistive
Technologies (AT) aim at recovering a mean of interaction between the person and
the external world, therefore allowing paralyzed individuals, who are often unable
to speak, to restore expressive capabilities, and some degree of independence. This
is a crucial aspect to improve the quality of life of people with Locked-in Syndrome
(LIS), showing complete paralysis except for vertical eye movements and blinking
but preserved consciousness, and Complete Locked-in Syndrome (CLIS), with total immobility and loss of eye movements but preserved awareness and cognition
(Bauer et al., 1979). Indeed, it has been shown that LIS patients can survive for
many decades (Doble et al., 2003). In this period of their life, they almost completely
depend on AT for communication and social interaction with their family and the
external world.
In particular, technologies able to transfer the intention of a user with severe
physical impairment into functional interaction (e.g. communication or environmental control) are referred to as access technologies (Tai et al., 2008). As reported in
Fig. 1.1, an access solution is composed by an access technology and a User Interface
(UI) technology. The first one includes sensors gathering the expression of a functional intent from the user, and a signal processing unit that transfers the input signal
into a control signal. The latter is used as input for the UI, which triggers the execution of an appropriate functional activity, within a specific environment. The UI
can be an iconic display for Augmentative and Alternative Communication (AAC),
a front panel to allow environmental control, (such as TV, lights), or an on-screen
keyboard to access a computer, browse on Internet and use social applications.
Based on the level of reliable physical movement exhibited by the user, different
technologies can be used to implement the access technology component of an assistive interface. As visible in Fig. 1.2, if at least one reliable movement is available
below and including the neck, mechanical switches, electromyography, and infrared
sensing have been used as possible solutions.
Mechanical switches are the simplest access technology for those with at least
one reliable voluntary movement due to the low cost, availability, robustness and
operational simplicity. The actuation mechanism can be based on different mechanical stimuli, such as changes in displacement, tilt, air pressure or force. Some switches

4

Chapter 1. Assistive Technologies based on the BCI paradigm

Functional
Intent

Access Technology
Access
Pathway

Signal
Processing

User Interface

Functional Activity

Augmentative and
Alternative
Communication (AAC) aid

Communication

Environment Control Unit
(ECU)

Control of the
environment,
e.g. smart room

Computer

Computer
access, browser,
social media

User

Environment

F IGURE 1.1: Access solution scheme, adapted from Doble et al., 2003.

are already available for individuals capable of some volitional movement, but novel
switches and switch combination strategies have been proposed for customized solutions, suitable for people with severe motor impairments (Lancioni et al., 2006,
Perring et al., 2003). The main limitation is due to the possibility of a challenging
effort to develop positioning aids or mounting systems to secure the switch at the
identified access site. Furthermore, the ability to exploit this solution can fluctuate
due to mental (Kennedy et al., 2000) and physical fatigue (Evans et al., 2000), or
changes in functional abilities of the user (Borasio et al., 2001).
Infrared (IR) technology can be used to produce low-cost interfaces (Evans et al.,
2000), where the user mounts a transmission module on the head, to activate devices
designed or modified to detect IR signals. An examples of this kind of assistive
technologies is the eyeglass-mounted infrared system developed by Chen et al., 2004
and tested on nonverbal individuals with tetraplegia to activate a communication
board. In the same vein, IR has been used as single switch AT to detect eye-blinks
(Lancioni et al., 2005).
Electromyography (EMG), i.e electrical activity generated by muscles during
contraction, recorded by means of surface electromyographic electrodes, can be used
to generate a control signal for an access technology based on residual volitional
muscular contraction, when physical movement is too weak to activate a mechanical
switch. Many studies reported an effective control of myoelectric switches and interfaces using hand muscles activation (Gryfe et al., 1996), voluntary facial movements
(Huang et al., 2006) and a combination of facial EMG and eye-tracking (Surakka
et al., 2004). Practically, the effectiveness of EMG control depends on the signal-tonoise ratio, i.e. the strength of the muscle contraction, and is affected by motion
artifacts and variations in electrode/skin contact impedance between electrode applications in long-term usage.
When the available motor control is limited to the muscles above the neck, communication and environmental control can be achieved by means of eye or face fine
movements tracking systems based on Eye-Tracking (ET) technology or computervision. Gaze-based communication systems map eye movements or the point of
gaze to the position of a cursor on a computer screen, allowing for selection of
gaze-sensitive screen items by means of fixation for a predefined dwell time. Commercially available eye-trackers are typically based on Video-oculography (VOG) or

1.1. Background

5

Access Technologies

Extant physical movement
•
•
•
•

Gross or fine motor control
in at lest one reliable
access site below and
including the neck
• Mechanical switches
• Electromiography
• Infrared Sensing

No movement
Electroencephalography
Electrocorticography
Intracortical recordings
Electrodermal Activity

Fine motor control above
the neck only

•
•
•
•

Mechanical switches
Electromiography
Oculography (EOG and VOG)
Computer Vision (camera-based)

F IGURE 1.2: Categorization of access technologies based on the source used
to generate the UI control signal expressing a functional intent. Adapted from
Doble et al., 2003

Electro-oculography (EOG) technologies. In VOG systems gaze direction is detected
by measuring the offset between corneal reflection and pupil center, exploiting a IR
light source and a camera mounted on a computer. Due to the non-invasiveness
and high accuracy, this technique is dominant in ET market (Bates et al., 2005). In
EOG-based systems (Di Mattia et al., 2001), gaze direction is measured by means of
electrodes placed around the eyes, exploiting shifts in potential difference between
the cornea and retina that occur when user changes gaze direction. ET systems allow for a fast control, comparable to that achievable by means of a hand mouse. In
Abbott et al., 2012, they proposed a ultra-low-cost binocular eye-tracker produced
by using mass-produced video-game hardware at a cost of about 30 USD, with an
information throughput of 43 bit/s, that yielded effective real-time closed loop control of external devices after few minutes of training. The system allowed to track
gaze position in 3D, making it suitable to provide also direct interaction with the environment beside canonical control via computer display. Though, this technology
is affected by some limitations, that restrict its practical effectiveness in computer
access tasks. The main drawback is that only one channel is exploited for both observation and control, making ET suffering from the "Mida’s Touch" problem (Jacob,
1991), i.e. incorrect selections arising when the system misinterprets user input activity. Furthermore, ET is not usable in case of insufficient range of eyes motion, and
other factors such as calibration drifts, fatigue, artifacts (in case of EOG), can limit
the system’s usability.
A computer vision-based access system tracks the location of features identified
on user’s face, (e.g. pupils, eyebrows, or eyelids for blink detection) via a camera.
Position changes are than translated into cursor movements on a computer screen,
or used as switches. Thanks to the decreasing hardware costs, the widespread availability of inexpensive USB web-cameras, and the recent fast progress in the development of robust computer vision algorithms based on deep learning (facing challenges such as features invariance to orientation changes, occlusion, variation in ambient lighting), computer vision-based solutions can become the most affordable access alternative for people with some repeatable neck or facial movements.
Finally, for individuals who cannot control any physical movement, in the most

6

Chapter 1. Assistive Technologies based on the BCI paradigm

severe cases of paralysis, such as LIS and CLIS, there is the possibility of decoding
functional intent through the analysis of various biopotentials, namely brain signals
or other physiological signals. In the first case, the system is called Brain-Computer
Interface (BCI), and exploits either invasive , i.e. electrocorticography and intra cranial recordings, or non-invasive, such as Electroencephalography (EEG), technologies to record brain signals, and translate them into control input for an external
device. In the present work, assistive technologies developed for people with LIS
(residual muscular control of eye movements) and CLIS (no muscular control) are
taken into account, and in particular technologies based on non-invasive (EEG) BCI
paradigm. The state of the art of this kind of technology is described in the following
paragraph.
It is worth mentioning that also other physiological signals can be used as input for access technologies. These include electrodermal activity and galvanic skin
response, measured as changed in skin conductivity mediated by the peripheral nervous system, that can be either consciously raised by a user after a specific training,
or passively generated in response to stress and fatigue. However, the exploration
of psycho-physiological input modalities other than EEG signals is out of the scope
of the present work. This will only focus on the subset of access technologies corresponding to assistive EEG-based BCIs.

1.1.2

Brain-Machine and Brain-Computer Interfaces

A BCI was defined in Wolpaw et al., 2002, as a communication system in which
messages or commands that an individual sends to the external world do not pass
through the brain’s normal output pathways of peripheral nerves and muscles. In
Donoghue, 2002, a Brain-Machine Interface (BMI) definition was introduces as a system which has the goal of providing a command signal from the brain cortex to
control disabled body parts or physical devices, such as computers or robotic limbs.
Generalizing, the terms BCI and BMI both describe a communication system between the brain and a computer/external device. In the following the term BCI will
be used to express the general concept, while BMI will refer specifically to a system
including a physical external device, thus including a BCI component in its architecture. The control of an external device by means of a BCI necessary implies the
availability of a technology to acquire brain signals, in a way that enable their elaboration and translation to control commands. The development of EEG by Hans
Berger in 1929 (Tudor et al., 2005) was a decisive step towards this direction, enabling the non-invasive recording of neuroelectrical signals from the human brain
(Chaudhary et al., 2016). The first scientific report showing the volitional regulation of human brain oscillations (alpha waves) in a neurofeedback experiment was
published in 1969 by Kamiya, 1969, while in 1973 a system able to translate EEG
signals into computer control signals was presented by Vidal, 1973 with the coined
term "Brain-Computer Interface". In the following decades, BCI field underwent
an extensive progress, driven by advances in fast computing, real-time analysis,
neuroscientific knowledge of brain functions, and the increasing number of available recording techniques. Nowadays, BCI research is in a quite mature phase, with
many prototypes developed in different applicative fields, from assistive technologies, e.g. to control a neuroprosthesis (Müller-Putz et al., 2005a), drive a wheelchair
(Millán et al., 2009), select letters from a virtual keyboard (Birbaumer et al., 1999), to
rehabilitation (Chaudhary et al., 2016), and entertainment (Millán et al., 2010).

1.1. Background

7

F IGURE 1.3: Components of a Brain-Computer Interface system (Wolpaw et
al., 2002).

System Architecture
A Brain-Computer Interface system includes all software and hardware components
from the brain signal acquisition to signal processing that allows to generate control
signals for a computer or an external device. The general architecture of a BCI system is described by Wolpaw et al., 2002, and reported in 1.3, from the same work.
The signal is acquired from electrodes placed on the human scalp or head by means
of invasive or non-invasive techniques. After digitalization, acquired signals processed in order to remove noise and artifacts and to extract significant features, that
encode user intent. Such features are then translated into commands for an external
device. Such translation algorithm usually implies a supervised learning technique,
thus requiring a training phase to achieve a reliable performance. An extensive review of signal processing and classification algorithms used in BCI can be found in
Bashashati et al., 2007 and Lotte et al., 2007.
BCI Classification
In Fig. 1.4 a useful classification of BCI systems, first formalized by Lotte et al., 2015,
according to the characteristics of dependability, invasiveness, and synchronization,
is reported. These three categories of BCI are briefly explained in the following.
Dependent and independent: Based on the availability of user’s residual motor functions, BCIs can be categorized in dependent or independent. Dependent BCIs can
help the user to perform some tasks, but they rely on a certain level of motor control.
Independent BCIs are those designed to work without any need of motor control,
thus being usable by people with CLIS.

8

Chapter 1. Assistive Technologies based on the BCI paradigm

BCI

Dependability

Dependent

Independent

Invasiveness

Invasive

Semi-Invasive

Synchronization

Non-invasive

Synchronous

Asynchronous

F IGURE 1.4: BCI classification according to (Ramadan et al., 2017).

Invasive and non-invasive: According to the method used to measure the brain activity, BCI are classified into invasive, non-invasive, and semi-invasive. In semiinvasive BCI, the electrodes are implanted in the brain surface epidurally or subdurally, and signals are recorded by means of Electrocorticography (ECoG). In alternative electrodes can be chronically implanted in the cortex, penetrating beyond the
surface of the brain, and in this case the acquisition method falls into the category
of Intracortical Recordings (invasive). In ECoG the signal has a broader bandwidth,
higher spatial resolution, and higher Signal to Noise Ratio (SNR), compared to EEG.
Furthermore, using intracortical recordings, the activity from a population of neurons, or even single-cell activity can be extracted (e.g. to drive a prosthetic device in
Schwartz, 2004). The biggest limitations of invasive and semi-invasive techniques
are the need for the patient to undergo neurosurgery for electrode implantation,
the impossibility to change electrodes positions to other areas and the difficulty of
substituting them when deteriorating. Furthermore, long-term effects of electrodes
implantation is not known in humans. On the other hand, in non-invasive BCI, the
signals are recorded with superficial sensors. The most common techniques used
for non-invasive BCI are EEG and Near InfraRed Spectroscopy (NIRS). The signals
in this case present a lower quality in terms of temporal and spatial resolution, as
well as SNR. However, non-invasive BCI are the preferred option, since they allow
to avoid surgery and related complications.
Synchronous and asynchronous (self-paced): Finally, BCI systems can be categorized
as synchronous or asynchronous. In the first case, user interaction with the system
is time-locked. This means that information extracted from brain signal to generate
a control command is generated by means of an external event, as it is the case for
BCIs relying on evoked activity (see Mental Control Signal paragraph, and Fig. 1.5),
i.e. features in brain signals arising as response to external stimuli. In these systems,
the interaction time, in which a meaningful signal can be detected, is allowed for a
predefined period of time. On the other hand, for asynchronous BCIs, the user is
able to perform a mental task in any moment, and the system continuously detects
brain ongoing activity, reacting when meaningful information is detected. In this
case, the system is self-paced: the user decides when to send a command without
external constraints. Asynchronous BCIs exploit spontaneous activity to generate
the mental control signal (see Fig. 1.5).

1.1. Background

9

Mental Control Signal

Evoked

SSEP

P300

PASSIVE

Spontaneous

ErrPs

Motor and
sensorimotor
rhytms

SCP

Non-motor
cognitive
tasks

ACTIVE

F IGURE 1.5: Active and Passive BCI classification based on EEG activity
exploited to generate mental control signal (adapted from Ramadan et al.,
2017). Among evoked activity, the most used paradigms include Steady-State
Evoked Potentials (SSEPs), P300, Error Potentials (ErrPs). Among spontaneous activity, modulation of sensorimotor rhythms, Slow Cortical Potentials
(SCPs) and non-motor cognitive tasks are the main control strategies.

Neuroimaging Methods
Recording of brain activities can be done by direct monitoring of electrophysiological signals, generated by potential actions or changes in the blood flow. The most
used non-invasive methods are: EEG and ECoG (semi-invasive) among techniques
recording electrical activities, and Magnetoencephalography (MEG), Positron Emission Tomography (PET), functional Magnetic Resonance Imaging (fMRI), optical
imaging (i.e., NIRS and functional NIRS) among techniques recording metabolic
activities. However, MEG, PET, fMRI and functional NIRS are not matching the
requirements for a domestic BCI because of the high cost, technical complexity of instrumentation, and low time resolution due to the underling metabolic process slow
responsiveness. For their characteristics of low cost, portability and possibility of
rapid communication, mainly EEG (spacial resolution 1 cm, temporal resolution 1
ms) and NIRS (spacial resolution ~2 cm, temporal resolution ~1 s) are used for the
development of effective non-invasive BCI systems. In this work, just EEG-based
BCIs are considered.
Mental Control Signal
Following the categorization proposed by Ramadan et al., 2017, EEG-based BCIs can
be distinguished based on the kind of control signal extracted from brain activity.
As reported in Fig. 1.5, mental control signals are mainly based either on evoked or
spontaneous activity. This categorization can be used to distinguish between passive
and active BCIs, respectively. In fact, evoked signals are generated unconsciously
by the person, when receiving external stimuli, thus allowing control in a passive
vein. On the opposite, spontaneous signals are generated by the subject voluntarily
and without any external stimulation, allowing for an active control. Due to the
underlying mechanism, passive BCIs are generally synchronous, while active BCIs
work as self-paced systems. In the following, the principal evoked and spontaneous
signals used in BCI applications are listed.

10

Chapter 1. Assistive Technologies based on the BCI paradigm

Passive control signals: Among evoked signals the most used are Steady State Evoked
Potentials (SSEPs) and P300. SSEPs are brain signals that are generated during
the presentation of a periodic stimulus, either visual, e.g. a flickering image in
Steady-State Visual Evoked Potentials (SSVEPs) Müller-Putz et al., 2005b, a modulated sound in auditory SSEPs (Nijboer et al., 2008), or vibrations, as in somatosensory SSEPs (Breitwieser et al., 2012). When a person is subjected to a high-frequency
periodic stimulation, the EEG signals power in the brain area related to the sensation
process involved, tends to reach the stimulus frequency. This phenomenon can be
exploited in SSEPs-based BCI to generate a control signal. One of the most common
application is based on SSVEP, and consists in a Graphical User Interface (GUI) with
some buttons, each one of them flickering at a certain frequency (typically between
6-30 Hz). When the subject focuses on one of the buttons, the equivalent frequency
can be detected on EEG signals recorded over the occipital cortex, and used to select
the button (Zhu et al., 2010). The P300 evoked brain potential is an EEG signal occurring ~300 ms after the subject is exposed to an infrequent or surprising stimulus.
When the person recognizes one rare relevant stimulus, among a random sequence
of stimuli, this triggers the P300 EEG signal (Polich, 2007). The P300 paradigm is
the most used in BCI spelling applications: patients select a letter from a matrix of
transiently illuminated rows and columns by focusing on it. The illumination of
the desired letter arises an EEG P300 that triggers the letter’s selection. Evoked signals do not require any training from the subject. However, repetitive stimuli and
the passive nature of the control can be tiring and uncomfortable for the subject.
Furthermore, P300 and SSVEPs-based BCIs require intact vision and attention capabilities, which instead are often compromised in patients with severe neurological
disorders at late stage.
In this work, also Error-related Potentials (ErrPs) have been included into the
category of evoked activity that can be exploited as passive control signal. ErrPs
are event-related potentials detectable in EEG activity in the fronto-central areas, in
human-computer interaction tasks where the user becomes aware of a wrong issued
command, or misinterpreted intention in a BMI system (Chavarriaga et al., 2014).
These signals have been used in BCIs to provide corrective signals or error-driven
learning of an intelligent device, in order to improve the overall system’s performance. Even if ErrP alone cannot be used to provide a control commands, it can
be used as a passive feature in BCIs relying on another passive or active control
paradigm.
Active control signals: Spontaneous signals used to drive BCI systems are the Motor
and Sensorimotor rhythms, Slow Cortical Potentials (SCP)s, and Non-motor cognitive tasks. Motor and sensorimotor rhythms consist in ongoing activity over the
motor cortex (Golub et al., 2016), with frequency bands defined as µ (8–13 Hz) and
β (13–30 Hz). The amplitude of these rhythms vary when performing a physical or
mental task related to movements. It is possible for a person to learn to control sensorimotor rhythms by means of operant conditioning or motor imagery (Ramadan
et al., 2017). In the first case, the subject learns to voluntary change amplitude of µ
and β rhythms using a personal mental strategy, by means of long training (weeks
or months). In motor imagery paradigm, the change of power in µ and β bands
when related to movements (typically limbs movements) imagination or intent can
be exploited to generate a suitable control signal for e.g. controlling a mouse or a
computer game. Also motor imagery requires training, since optimal features are

1.1. Background

11

often subject-specific and non-stationary over long periods of time. Modern machine learning and artificial intelligence techniques can be used to shorten the training period, as better explained in the following sections. SCPs are low frequency
potentials, i.e. below 1 Hz (Kübler et al., 2001), that can be detected in the frontal
and central parts of the cortex, reflecting a very slow variation, positive or negative,
of the cortical activity. The subject can control generation of such signals using operant conditioning, but a long training, often longer than for sensorimotor rhythms is
required. Finally, also non-motor cognitive tasks, such as music imagination, visual
counting, mental rotation, and mathematical computation (Dobrea et al., 2009), can
be used to drive a BCI.

1.1.3

Applications for Paralyzed People

Restricting the focus to BCI applications aiming at improving the life quality of people with severe motor impairments, two principal areas can be distinguished, as
reported in Chaudhary et al., 2016: assistive BCI and rehabilitative BCI. Assistive
BCIs are designed to enable paralyzed patients to communicate or control external
assistive devices, while rehabilitative BCIs are intended to facilitate recovery of neural functions.
The clinical population benefiting from assistive BCIs include patients with severe impairments in communication and motor functions. Most of the existent BCIs
for communication have been developed for people with Amyotrophic Lateral Sclerosis (ALS), but in general also people with damages to the central nervous system,
e.g. stroke and spinal cord injuries, can benefit from this technology. ALS is a progressive motor neuron disease leading to complete destruction of the peripheral and
central motor system (Chou et al., 1993). In the late stages of the disease people become unable to speak at all, reaching a condition of total paralysis except vertical eye
movements and blinking (LIS), and eventually they can also lose eye movements
(CLIS). Even in these late stages though, consciousness and cognitive capabilities
are preserved, allowing these patients to exploit access technologies based on brain
processes. Using invasive BCIs (based on ECoG) demonstrated the possibility for
patients with tetraplegia to learn the use of neural interfaces to control a computer
cursor movements, or a robotic hand movements in all directions (Hochberg et al.,
2006). Successful clinical applications of non-invasive EEG-based BCIs were shown
starting from 1999 to enable LIS patients to select letters on a computer screen using SCP (Birbaumer et al., 1999) and sensorimotor rhythms (Wolpaw et al., 2004).
Spellers based on the EEG-P300 paradigm were successfully used by the majority
of LIS patients affected by ALS, but with functioning vision and eye control (Sellers et al., 2010). On the other hand, attempts to use both invasive and non-invasive
BCIs for communication in CLIS patients has been unsuccessful (Murguialday et al.,
2011, Thorns et al., 2010). The first case of successful communication from a patient
with CLIS as result of ALS came from the use of a BCI-based fNIRS with classical
conditioning learning over a long time period (Gallegos-Ayala et al., 2014). Alternative learning methods and neuroimaging methods could be necessary for this kind
of patients.
Beside communication, assistive BCIs have been used to provide motor substitution in paralyzed patients as a results of ALS, stroke, or spinal cord injury. Online brain control in combination with functional electrical stimulation, has been
demonstrated on patients with spinal cord injury to control movements of upper
limbs (with both invasive and non invasive techniques, Pfurtscheller et al., 2003,
Enzinger et al., 2008), and lower limbs (with non invasive techniques, King et al.,

12

Chapter 1. Assistive Technologies based on the BCI paradigm

2015). BCIs have been used with paralyzed patients also to enable neural control of
a robotic arm, using both invasive and non-invasive systems (Hochberg et al., 2012,
Pfurtscheller et al., 2000), and to control a wheelchair, using EEG-based BCI (Nguyen
et al., 2013).
Finally, BCIs for rehabilitation have been used mainly by patients with stroke. In
fact, the learning of neuroprosthetic control has been shown to induce the reorganization of cortical networks, helping motor rehabilitation in stroke patients without
residual movements (Ganguly et al., 2011). A detailed review of rehabilitative BCIs
is out of the scope of the present work, that focuses on assistive applications. A
complete review of the state of the art is available from Chaudhary et al., 2016.

1.2

Current challenges

Up to date, BCIs, especially based on non-invasive signals, suffer from a number
of limitations that prevent them to be produced as stable assistive products. In the
following, the principal issues connected to non-invasive EEG-based BCIs, that are
the ones considered in the present work, will be discussed.
In independent, asynchronous systems, one of the main problems is the need of a
training phase each time a subject uses the system, to avoid a low signal classification
performance. On the other hand, long training time decreases the system’s usability,
due to the effort required from the subject, thus reducing user engagement. There are
also some limitations intrinsically related to the electrophysiological signals, which
are the low signal-to-noise ratio and non-stationarity of EEG. Furthermore, changes
in electrodes positions, differences in user internal mental activity, both compared
to other people and in time, can cause a decrease of BCI system performance in
online sessions as well as during inter-sessions. To cope with this issue, adaptive
techniques and algorithms are required to ensure a robust signal classification over
time.
One of the standard performance measures for a BCI system is the Information
Transfer Rate (ITR), which is determined by the three factors: target detection accuracy, target detection time, and number of classes. A higher information rate can
thus be achieved by acting on target detection accuracy, i.e. enhancing SNR and the
considered classes separability, by means of preprocessing, filtering and features extraction techniques, to convert multi-channels EEG data in low-dimensional signal
associated with cognitive states relevant to the task. Another way to enhance the ITR
is by reducing the target detection time, by means of machine learning and adaptive
methods (e.g. dynamic stopping) for asynchronous systems, or by means of an optimized design stimulus presentation in synchronous BCIs. For asynchronous systems, a higher number of discriminable classes result in a higher number of control
degrees of freedom, thus corresponding to higher ITR and faster control.
Another BCI challenge concerns the development of invasive and noninvasive
more accurate and portable sensors. Currently, for EEG-based BCIs, gel electrodes
are required to achieve acceptable performances in terms of minimum SNR and high
ITR. Nonetheless, dry electrodes are a mandatory requirement for the development a
portable and usable technology. Future advancements in sensing technology and the
inclusion of artificial intelligence into electrodes design, are expected to enable in the
next years smart electrodes with wireless communication, with reduced dimension
and high sensing and adaptive capabilities.
Overall, to bring BCIs into real life assistive applications, a robust system performance must be achieved, with the development of portable platforms with an

1.3. Towards Intelligent Assistive BCIs

13

affordable hardware and software cost. The non-invasiveness of the sensing modality can push for the development of a practical technology, accessible by a large
population (Milan et al., 2010). Furthermore, an asynchronous design of the system is preferable for the BCI usability and comfort, allowing the subject to achieve
a control based on its own time. Though, the design of self-paced control systems
poses some challenges, due to the difficulty of discriminating an idle state from a
meaningful activity in EEG-based BCIs. Nonetheless, these characteristics promote
the transition to user-centric BCI applications, in which the user needs, preferences
and limitations are put as the center of the implementation process towards more
effective and acceptable technologies (Lightbody et al., 2010).

1.3

Towards Intelligent Assistive BCIs

In order to overcome the current limitations and bring the BCI technology out of
the lab, into real-life applications, Millán et al., 2010 reviewed the state of the art of
EEG-based BCIs in the field of ATs, and outlined the principal research directions
where an essential progress can be expected in the next years. These include:
• The development of hybrid BCI (hBCI) architectures, exploiting different physiological signals and/or different brain processes together, as input for the control.
• The design of user-machine adaptation algorithms, to endow BCI devices with
self-adaptive capabilities.
• The exploitation of user mental states (mental workload, stress level, attention
level, tiredness) as measures of reliability and confidence for the BCI.
• The incorporation of principles of human-computer interaction to improve BCI
usability and the UI design.
• The development of better EEG sensing devices.
According to Millán et al., 2010, advances in these directions are a key factor
towards the goals of: obtaining a more robust control signal, with increased degrees of freedom for the control, increasing reliability, easiness and performance of
brain-computer interaction, reducing user’s cognitive effort and improving system
accessibility. Sharing the above mentioned view, in the present work the hybrid and
adaptive approaches were considered, in order to contribute to the state-of-art of
current EEG-based assistive BCIs. These two research directions are therefore better
explained in the following.

1.3.1

Hybrid approach

A hBCI is defined as a system combining different input signals and including at
least one BCI channel. The hybrid nature of the system can be achieved in different
modalities.
A first approach consists in combining two different BCI channels (e.g. one passive and one active control signal). Examples of such implementations are the combination of motor imagery-based BCI with ErrP detection, for the automatic correction
of wrongly detected mental commands (Ferrez et al., 2008a), or the combination P300
and SSVEPs to improve the performance of asynchronous control of a wheelchair (Li
et al., 2013). The goal behind using two or more types of brain signals as input to

14

Chapter 1. Assistive Technologies based on the BCI paradigm

a BCI system is to improve the system reliability and to avoid the disadvantages of
each type of signals.
A second kind of hBCI is the combination of BCI and another biosignal (e.g.
EMG, mechanical switches or eye movements). This approach intends the BCI as an
additional channel to enhance conventional assistive products, operated by residual
muscular functions. The BCI control can be used to drive a different part of the
assistive device, thus increasing the degrees of freedom for control, or improving
the interaction, especially in applications for motor substitution. In alternative, all
input channels can be combined to allow the user to switch from one modality to
the other one depending on the personal preference and performance. This latter
solution is particularly useful in cases of progressive loss of muscular activity (as
in ALS), where early BCI training when the user can still exploit residual muscular
activity will improve the transition between hybrid and pure BCI, once muscular
control is lost, thus increasing long-term usability of the assistive device. Examples
of this second category of hBCI are the combination of EEG with EMG activity (Leeb
et al., 2010) or the use of EEG and eye gaze together (Danoczy et al., 2008).
Finally, hBCI could exploit different neuroimaging techniques simultaneously
(e.g. EEG together with MEG, fMRI, NIRS).
Different input channels in hBCI can be weighted based on their reliability, that
again can be determined from user mental state, exploiting some physiological measure, such as stress level or ErrP. Hybrid BCI systems are the preferred solution in
case of control of complex devices, such as neuroprosthesis and mobile robotic systems (e.g. for telepresence, or wheelchair). For this reason, shared control and shared
autonomy are a key component to allow an easy control of a complex intelligent device, with only high level control inputs from the user. Incorporation of artificial
intelligence into the assistive device/interface, at both hardware and software level,
will constitute the basis for the effective integration of BCI systems with AT. In Choi
et al., 2017 and Müller-Putz et al., 2015 more extended and complete reviews of hBCI
state of the art can be found.

1.3.2

Adaptation

The second pathway to the development of out-of-the-lab assistive BCIs is the integration of user-machine co-adaptation algorithms into the system design. The idea
is that of changing the nature itself of the assistive interface/device from a passive
executer of user commands, to an active assistant, able to interact with the user and
to co-evolve with him/her, in order to learn and optimize its behavior towards userdirected task solving. Again, towards this objective, intelligence must be included
into the interface and control loop design. Adaptation can be achieved at different
levels of the system.
A first level of self-adaptation can be included into the BCI through the hybrid
approach, allowing the user to dynamically choose the best interaction channel at
any time, as well as the EEG phenomena that better suites the user (Millán et al.,
2010). The second aspect where adaptation can strongly improve BCI performance
concerns the online calibration of the decoding module, which translates EEG signals into control input for an external devices. To cope with EEG non-stationarity
over time, and differences in optimal features from subject to subject, online adaptive techniques at this level could reduce the need of long calibration sessions, and
improve system precision. This adaptation can be carried out at different modules
of the BCI: in the feature extraction stage, in order to select information discriminative to the task and stable over time (Vidaurre et al., 2009); in the spatial filtering, to

1.3. Towards Intelligent Assistive BCIs

15

extract uncorrelated information (Vidaurre et al., 2010), or at the classification side,
e.g. performing online learning or retraining. Adaptation at all modules level can
be carried out in both supervised (task known in advance) and unsupervised way
(when no class labels are available). An example of semi-supervised classifier adaptation is shown by Llera et al., 2011, where ErrP detection in a motor imagery task is
used to update classifier’s parameters.
The selection of stable and discriminant features and BCI online adaptation, in
one or more modules, allow for simultaneous co-adaptation of the BCI to the user
and viceversa. Indeed, they allow to accelerate user training, also helping to provide a more stable feedback, thus making easier for the person to learn to modulate
his/her brain activity.

17

Chapter 2

Contribution and Objectives
The present work focuses on the development of adaptive control strategies and hybrid systems to advance the state-of-art of assistive BMIs. The work was developed
in the framework of the TEEP-SLA project 1 (Empathic and Expressive Technologies for people with ALS). TEEP-SLA is a 3-year (from December 2015 to November 2018) collaborative project, involving the Istituto Italiano di Tecnologia (IIT) and
Fondazione Sanità e Ricerca, and funded by Fondazione Roma. It aims to create
novel assistive technologies for ALS patients. In particular, this project looks at satisfying the patients social interaction and communication needs with innovative interfaces and associated assistive robotic technologies. For this reason, the population
target of the presented work is that of people with LIS or CLIS, and the considered
access technologies are restricted to those exploiting eye movements and brain signals (Eye-tracking and BCI). Non-invasive sensing methodologies were chosen, and
in particular the neuroimaging technique used in all studies is limited to EEG signals. This choice is motivated by the goal of developing a portable an affordable
technology, with an overall cost sustainable by the Italian Sanitary System to assist
ALS patients.
The strategies followed to bring innovation into the state of the art of assistive
BCIs were inspired by the research paths presented in Section 1.3: development
of hybrid and multimodal interfaces, using different input biosignals and different brain mechanisms together, and the inclusion of user-machine adaptation algorithms into the assistive interface architecture. The contributions collected in this
thesis converge towards the development of a co-adaptive assistive hybrid BMI, exploiting active and passive control signals. The concept is shown in Fig. 2.1. In such
interface, two kinds of active control signals, namely gaze and motor imagery, are
exploited to generate control commands for an assistive device (either a communication interface or an assistive robotic arm). The hybrid approach is here intended
as the simultaneous use of a BCI channel and gaze signal, which is one of the long
lasting motor capabilities in LIS patients. The purpose is to increase the degrees of
freedom available for the control, and the UI usability, as well as to gradually introduce the use of BCI for patients with progressive loss of all motor functions, making
easier the transition to a pure BCI control in late stages of the disease. Furthermore,
a passive EEG mechanism, i.e. error detection (ErrP), is exploited to endow the system with co-adaptative capabilities. Co-adaptation between the user and the device
is realized at two levels:
• Exploiting the information on user mental state (error awareness) related to the
evaluation of a semi-autonomous assistive device behavior, to achieve errordriven learning. Here, the autonomous robotic device learns how to adapt its
behavior according to the information retrieved from user’s brain activity. This
1 http://www.teep-sla.eu/

18

Chapter 2. Contribution and Objectives

feedback

EEG (active)

Control
signal

EEG (passive)

Psychophysiological
signals

Intention
detection

Intelligent
Controller

Error
detection
Smart device
learning

Gaze

ADAPTIVE

Decoder
STATIC
Adaptive
Classifier
retraining

F IGURE 2.1: Co-adaptive assistive BMI.

is implemented in a reinforcement learning framework where ErrP detection
is used to provide a negative reward signal.
• The second adaptive behavior is designed at the level of decoding of user’s
intention. Here, the detection of an ErrP on the feedback related to motor imagery classification is exploited for online automatic recalibrating/retraining
of the classifier.
It is worth noting that the proposed architecture heavily relies on the capability of
detecting error potentials with sufficient accuracy. Since error perception by the user
is based on the feedback over an action (robot action or motor imagery classification
output), some work has been devoted to the design of effective feedback modalities,
able to enhance ErrP online detection.
The thesis structure is summarized in Fig. 2.2. Contributions are grouped in
three main parts (II-IV). Part II presents two works developed following the hybrid
ET-BCI approch, to generate active control signals for a communication interface
(Chapter 3) and an assistive robotic arm (Chapter 4), respectively. Part III explores
the use of passive signals (ErrP) as a reinforcement learning reward function for
error-driven learning of a semi-autonomous device. In Chapter 5 a study on the effect of tactile feedback on ErrP single-trial detection is presented, while Chapter 6
reports results from a real-time implementation of ErrP detection for robot learning
of target identification and reaching task in a bi-dimensional space. Part IV includes
two studies on the use of both active (motor imagery) and passive (ErrP) EEG signals, to include adaptation at the levels of feature extraction and classification of the
BCI motor imagery decoder. The first study (Chapter 7) explores an offline method
for selection of subject-specific stable and discriminant features, with the goal of facilitating user-interface co-adaptation to shorten the training phase and increase the
BCI system’s accuracy. The second study (Chapter 8) simulates the effect of using
ErrP detection for online updating of classifier parameters in a two-classes motor
imagery task.
Outcomes of this work include the production of novel EEG datasets related to
ErrP (Chapter 3 and 4), both on training and testing phases, and to motor imagery
(Chapter 8), recorded using a professional acquisition system. These are or will be
made publicly available for the BCI research community.

Chapter 3
Hybrid EyeBCI

Intelligent
Controller

Control
signal

Decoder

Psychophysiologic
al signals

Chapter 4
Hybrid SoftBMI

EEG (active)

Gaze

Decoder

Chapter 6
ErrP-based
Robot Learning

Error
detection

EEG (passive)

Psychophysiologic
al signals

Soft BMI

F IGURE 2.2: Contributions and thesis structure.

Chapter 5
ErrP &
Tactile feedback

Smart device
learning

Intelligent
Controller

Control
signal

feedback

Machine Adaptation to user

Hybrid ET-BCI approach

feedback

Part III: Passive control signals

Part II: Active control signals

Part I: State of the art and Contribution

Chapter 8
ErrP-based
Adaptive Classifier

Decoder

Psychophysiologic
al signals

Adaptive
Classifier
retraining

EEG (passive)

EEG (active)

Intention
detection
Error
detection

Chapter 7
CMI-based
Features Selection

Intelligent
Controller

Control
signal

feedback

Co-adaptive systems

Part IV: Active and Passive control signals

Chapter 2. Contribution and Objectives
19

21

Part II

Active Control Signals: Hybrid
ET-BCI Approach

23

Chapter 3

Focus Sensitive Dwell time in
Eye-BCIs
This chapter introduces an hybrid ET-BCI solution - labeled as EyeBCI (Barresi et al.,
2016) - in order to improve the performance and the usability of ET. A novel interaction concept is introduced to adapt the duration of the dwell time to the level of
mental focus of the user of EyeBCI when he/she wants to select and activate a UI
item: the dwell time shortens according to the raise of the observer’s concentration,
improving the system precision and responsiveness. The capability of this new interaction paradigm to be self-adaptable to the user’s goals has the potential to greatly
enhance the usability of ET solutions for patients with LIS.
This work has been published as : Barresi, G., Tessadori, J., Schiatti, L., Mazzanti, D.,
Caldwell, D. G., & Mattos, L. S. (2016, September). Focus-sensitive dwell time in EyeBCI:
Pilot study. In Computer Science and Electronic Engineering (CEEC), 2016 8th (pp. 54-59).
IEEE. - The final files for this publication are available from IEEE via:
http://dx.doi.org/10.1109/CEEC.2016.7835888

3.1

Introduction

Current technologies for human-computer interaction offer different strategies for
augmentative and alternative communication (AAC) (Beukelman et al., 2005) to assist people with severe motor impairments. For instance, many patients with lockedin syndrome (LIS) (Laureys et al., 2005) benefit from eye-tracking (ET) (Poole et al.,
2006) cameras in order to move a cursor across a user interface (UI) by means of their
gaze movements, and to activate any gaze-selected UI item by maintaining the gaze
on it for a defined dwell time. This paradigm provides an intuitive control modality appreciated by many users. Nevertheless, the (unnatural) dual function of gaze
(observation and control) in ET-based UIs can lead to stressful conditions, which
can make the ET paradigm prone to errors and, by consequence, risk to present low
performance, usability, and user experience. This typically happens when the user
is not satisfied by the settings of the dwell time, which indeed should be calibrated
and optimized according to the patient’s skill and stamina: when the dwell time duration is shortened too much for the user, the ET control could become too challenging; when it is increased excessively, the user’s engagement and motivation could
decrease dramatically. Considering the potential of brain-computer interface (BCI)
systems in monitoring parameters like user’s attentive effort (Szafir et al., 2012), it
is possible to design hybrid ET-BCI solutions (Vilimek et al., 2009), labeled as EyeBCI in this work. Such solutions can improve the performance and the usability of
ET, modulating its functioning according to the intentions of the users to control or
explore the UI.

24

Chapter 3. Focus Sensitive Dwell time in Eye-BCIs

In this study, an interaction concept of EyeBCI is introduced to adapt the dwell
time duration to the level of user’s voluntary mental focus: the dwell time shortens
according to the increase in concentration of the user. The result is an EyeBCI enriched by adaptive qualities that aims at decreasing the risk of errors in UI control
and at improving user experience. In order to test this approach, implemented in a
low-cost setup, a pilot study based on a series of comparisons between different ET
and EyeBCI conditions was performed. The study considered performance metrics
(correct characters per second, mean activation times, number of errors) and user
experience indices (questionnaire scores). After describing the background of this
investigation and the features of the novel “focus-sensitive dwell time” paradigm
for EyeBCI, the experimental procedure and results are described and discussed,
showing the potential of the proposed solution.

3.1.1

Background: EyeBCI Paradigms

As introduced above, ET systems offer easy and intuitive procedures of interaction
by means of the detection of the user’s ocular movements (Duchowski, 2002), often maintained in many cases of LIS (e.g., people with amyotrophic lateral sclerosis,
ALS, can experience this kind of LIS before reaching total-LIS condition, which paralyzes also the ocular muscles, Spataro et al., 2014). Such systems are less demanding and more widely adopted solutions than BCIs, which enable paralyzed people
to express thoughts and voluntary acts (decoded for instance from brainwaves in
Moghimi et al., 2013). BCIs require more complex calibrations and trainings than
ET, making their usage a highly difficult experience for the patients. Nevertheless,
it must be observed that ET has its own costs (Majaranta et al., 2002), which include
the effort required from the user for performing repetitive eye movements during
hours of activity and for maintaining the gaze on a certain UI item until the end of a
dwell time to activate it without producing accidental selections and activations.
In order to overcome such limitations, the approach of hybrid BCI (hBCI) can
be introduced. hBCI systems (Henshaw et al., 2014) are designed for integrating
different human-machine interfaces combined sequentially (when the output of one
device becomes the input of the other) or simultaneously (when their data are processed in parallel). For instance, the hBCI perspective offers the opportunity to integrate ET and BCI (e.g., Cipresso et al., 2011) obtaining an eye-brain-computer interface, a category of hBCI labeled in this work as EyeBCI, designed for LIS patients
who maintain a certain degree of ocular control. This solution can offer higher usability than each of its own components, improving the interaction capabilities of
the users: ET can ease the pointing operation for selection, lowering the time for the
calibration and training, while a BCI can ease the activation of the process triggered
by the user in the observed location without a dwell time. Nevertheless, this hybrid
approach can be severely influenced also by the limitations of its sub-components,
in particular the BCI (Kos’ Myna et al., 2013): the effort of triggering the activation
of a UI item selected by the gaze can be affected by factors like the calibration of the
BCI system or by the training of the user.
Considering such issues, this study defines a novel potential relationship between ET and BCI, aiming at designing more user-centered ET-based interactions.

3.1.2

Introducing a Focus-Sensitive Dwell Time in EyeBCI

The adaptive EyeBCI paradigm described in this work is based on two modalities of
UI control: the ET enables the user to select an item of the UI, and the BCI enables

3.2. Methods

25

V
V
V
F IGURE 3.1: (a) Experimental setup, (b) on-screen keyboard and (c) states of
a key.

him/her to shorten the dwell time for activating it according to his/her mental focus
(representing the intention to activate the UI item). First of all, this solution fits with
the natural dissociation between the activities of observation and control: when the
user intends only to observe the UI, the dwell time will be long enough to avoid
any accidental activation of its functions; on the other hand, if the user requires to
interact with the UI, the dwell time will be reduced in order to facilitate the task.
The pilot study in this work evaluates this adaptive EyeBCI paradigm by comparing an implementation of it with 3 ET control paradigms and with a trigger-based
EyeBCI technique. The 3 ET paradigms used for comparison are characterized by
different dwell times, while the trigger-based (first action: gaze to select; second
action: focus to activate) EyeBCI technique uses mental focus as a mean to activate
gaze-selected UI items (as in typical paradigms involving the BCI device used in this
investigation). Next sections will describe the pilot study conducted to evaluate how
this adaptive EyeBCI can be comparable to ET and to trigger-based EyeBCI in terms
of performance and user experience, estimating its actual functioning in adapting
the dwell time to user’s goals (observing vs. activating the UI).

3.2

Methods

In order to test the interaction paradigm proposed here, an experimental setup was
designed and developed. The implementation of such paradigm is based on specific
hardware and software solutions, which will be addressed in this section.
The context of the experiment was characterized by a setup in which the user
controlled the selection and activation of on-screen keys either by means of ET or
EyeBCI paradigms to accomplish the task of correctly writing 2 words. The experiment was performed on 14 healthy subjects (12 males, 2 females), with average age
of 29.64 years (SD=3.88 years).

3.2.1

Setup

The complete setup is shown in Figure 3.1 (a), including an eye-tracker, a BCI, and
an on-screen keyboard.
For all conditions, the commercial system Tobii EyeX1 was used, including both
hardware and software (i.e. EyeX SDK) components. The Tobii EyeX is used to track
the eye movements and gaze point of the user. It is connected to the PC via USB
3.0 port, and it has to be mounted at the bottom of the screen, pointing towards the
user’s eyes from below. Its near infrared micro-projectors create reflection patterns
on the cornea and pupil of the user’s eyes and two optical sensors capture images of
1 http://www.tobii.com/xperience/

26

Chapter 3. Focus Sensitive Dwell time in Eye-BCIs

such reflection patterns. Advanced processing algorithms are then used to estimate
the position of the eye in space and the point of gaze.
In order to detect the level of mental focus of the user, the electroencephalographic (EEG) headset Emotiv EPOC+2 is used as the BCI hardware, together with
the Emotiv control panel provided by the company as processing software. The
neuroheadset includes 14 electrodes located in the positions AF3, F7, F3, FC5, T7,
P7, O1, O2, P8, T8, FC6, F4, F8, AF4 according to the 10-20 International system,
recording EEGs at a sampling rate of 256 Hz. This low-cost neuroheadset and its
features, including the placement of electrodes, were extensively tested in past studies, considering also its previous version (Stytsenko et al., 2011). Its performance was
proper for the pilot study presented here and for evaluating the chance of developing low-cost implementations of the novel EyeBCI paradigm. The Cognitiv suite of
the Emotiv control panel was used to extract the Cognitiv value that represents the
level of mental focus used as control signal during the experiment. The software
provides a Cognitiv value from 0 to 1, corresponding to the degree of matching between a recorded calibration pattern of EEG activation (the subject was requested
to focus on a UI item, recording a pattern of task-related high mental focus as in
Barresi et al., 2015) and the present one. This calibration was performed alternating
neutral and active trials lasting 8 seconds each. During neutral trials the user was
asked to relax without moving any muscle, while during active trials the user was
asked to concentrate on the action of pushing a computer-generated moving cube
within the control panel. During the experiment, the value of the Cognitiv variable
used to detect subjects level of mental focus was transmitted from the Emotiv control
panel to the application via the open source software Mind Your OSCs3 . The Cognitiv variable was low-pass filtered: current and previous Cognitiv value weights
were the only two parameters of the filter and they were set to 0.01 and 0.99, respectively. Update of Cognitiv value occurred each time a new sample was acquired by
the Emotiv (i.e. around 4 ms). Weights were chosen to provide an acceptable user
experience during previous studies. Furthermore, Cognitiv was forced to zero after
each key activation, to avoid erroneous multiple selections with activation.
The UI consisted of an on-screen keyboard, with red keys, including space, shift,
and delete commands, and an upper bar where the typed text was shown. It was
developed by means of the Processing4 environment, and it was presented to the
subjects on the 15.6” screen of a laptop running Windows 7. A blue dot was displayed as a cursor to track the filtered user’s gaze across the keyboard. Each key
became green while the cursor was over it, showing a white circular sector whose
angle increased clockwise as feedback until becoming a full circle when the activation condition was achieved. Figure 3.1 (b) depicts the on-screen keyboard and
Figure 3.1 (c) the different states of the keys, from inactive to gaze-selected, to activated. Finally, the key restored its red color after the cursor moved away. It must be
noted that, after the raw gazing coordinates were transmitted from the Tobii EyeX
engine to the Processing application, such coordinates were filtered to stabilize the
gazing task. A simple auto-calibration feature adds an offset to current coordinates
so that eventually they match the center of the currently selected key. Similarly to
the case of the Cognitiv variable, the estimated offset was also slowly changed in
time, with weight of 0.9 and 0.1 for previous and current estimations, respectively.
2 http://emotiv.com/epoc-plus/
3 https://sourceforge.net/projects/mindyouroscs/
4 http://processing.org

3.2. Methods

3.2.2

27

Task

The task consisted in correctly writing 2 words, “cognitive robotics”, using the ET or
the EyeBCI control paradigm. The subject was warned with an error beep each time
a mistake was detected. Each trial ended when the complete correct sentence was
typed.

3.2.3

Experimental Conditions

Each subject performed the task in the conditions described below, according to a
within-group experimental design with 5 levels of the independent variable “UI
Control” and 5 repeated measures. The repeated measures correspond to 5 trials
of writing 2 words as task using the system in each UI Control condition. Objective (performance) and subjective (user experience) measures were collected. All
subjects performed the task under the following 5 different conditions of the independent variable UI Control:
Dwell times in ET conditions were defined after previous user trials, considering
also the opinion of patients and healthcare professionals with experience with ET. In
EyeBCI trigger the BCI triggered the activation of the key highlighted via ET by the
user’s gaze, when the filtered Cognitiv value overcame the threshold of 0.3 (following the typical threshold-based activation paradigm used with the Emotiv EPOC+).
In EyeBCI dwell the BCI reduced the duration of the ET dwell time according to the
user mental focus. In particular, dwell time varied from 3 s to 0.75 s (a range defined
based on preliminary user trials) according to the Cognitiv value and following the
cumulative distribution of a beta function with B(2, 15).

3.2.4

Experimental Procedure

Before the session started, and according to the ethical protocol, the subjects of this
pilot study received information about the experiment and they signed an informed
consent document. After this, the calibration of both ET and BCI was performed. ET
was calibrated using Tobii EyeX Engine. BCI was calibrated using Emotiv Cognitiv
suite, alternating neutral and active 8 s trials, for about three-five minutes, until the
subject felt confident with the Cognitiv variable control level. After calibration, and
before the first session, each subject was asked to perform two short training trials,
typing the word “hello”, under conditions ET 1.5 s and EyeBCI trigger, to understand the most typical functioning of ET and of EyeBCI with the Cognitiv threshold
paradigm.
Each subject ran 2 sessions of 5 trials each one, corresponding to 3 ET-based (ET
3.0 s, ET 1.5 s, ET 0.5 s) and 2 EyeBCI-based (EyeBCI trigger, EyeBCI dwell) controls.
In the first session (familiarization) the conditions were presented in the same order
within their block: a block with the ordered set 1-ET 3.0 s, 2-ET 1.5 s, 3-ET 0.5 s,
and a block with the ordered couple 1-EyeBCI trigger, 2-EyeBCI dwell. In order to
control potential effects of the sequence, half of the subjects experienced the ET block
before the EyeBCI block, and the other half the EyeBCI before the ET. In the second
session (evaluation) the five conditions were presented in random order, to check the
potential effects of repeated measures.
1. ET 3.0 s, based on ET control with dwell time of 3s;
2. ET 1.5 s, based on ET control with dwell time of 1.5s;
3. ET 0.5 s, based on ET control with dwell time of 0.5s;

28

Chapter 3. Focus Sensitive Dwell time in Eye-BCIs
Performance Measures

0,50
0,25
0,00

8

12
10

6

Number
of Errors

0,75

4
2

ET 3.0 s

8
6
4
2
0

0

UI Control
Conditions

Errors

Mean Activation Times
Mean Activation Times
(Seconds)

Number of Correct
Characters per Second

Correct Characters/Second
1,00

ET 1.5 s

ET 0.5 s

EyeBCI
trigger

EyeBCI
dwell

F IGURE 3.2: Performance indices - means (across users in each trial, representing a condition) with upper standard deviation bars.

4. EyeBCI trigger, based on the BCI triggering the activation of the key highlighted
via gaze;
5. EyeBCI dwell, based on the BCI shortening the duration of the ET dwell time.

3.2.5

Measures

Objective Measures of Performance
From the evaluation session the following performance measures were extracted per
each trial, that is constituted by the task of writing “cognitive robotics”: (a) the number
of correct characters per second, computed as the total time required to accomplish
the task divided by the number of correct characters activated during each trial; (b)
the mean activation time, computed as the mean time elapsed between gaze moving inside a key and its activation during each trial; (c) the number of errors, i.e.
erroneous activated characters during each trial.
Subjective Measures of User Experience
After each trial of the evaluation session, the subject was asked to fill out a questionnaire based on 8 statements (Figure 3.3) on different dimensions of user experience.
Considering each completed trial, the subject was asked to mark on a continuouslike rating scale his/her level of agreement with each statement. Each scale consisted
in 100 points: it was divided in 100 intervals by small lines and with increasing
values from left to right. The 1st, 25th, 50th, 75th, and 100th lines are bigger than
the others to provide intuitive reference points for the subject (similar to a 5-point
Likert-type scale). The resulting pattern is perceptually similar to visual analogue
scales (Jaeschke et al., 1990) that allow to perform properly a wider range of analysis
techniques than the discrete scales with few points.

3.3

Results and Discussion

Since ANOVA could not be used (assumptions of normality and sphericity are violated because of high variability of the data, probably due to the small number of
trials and subjects in this pilot study), Friedman’s chi squared was used to compare
the effects of different conditions on each performance measure, considering also
the repeated measures (each condition was tested in a different trial). No effect of

3.3. Results and Discussion

29

TABLE 3.1: Performance data - means (M) with standard deviations (SD).

Performance
Indices
ET 3.0 s
ET 1.5 s
ET 0.5 s
EyeBCI
trigger
EyeBCI
dwell
Friedman’s
chi squared (4)
p<0.01

M
0.23
0.37
0.60

SD
0.03
0.07
0.23

Mean
Activation
Times (s)
M
SD
3.05 0.00
1.55 0.00
0.55 0.00

0.15

0.08

3.69

3.03

4.57

5.81

0.39

0.12

1.61

0.51

0.43

0.65

Correct
Characters/s

Errors
M
0.14
0.79
2.71

SD
0.53
0.89
3.65

43.26

40.97

15.67

9.15e-09

2.73e-08

3.5e-03

repeated measures was found. Table 3.1 and Figure 3.2 depict the results of performance measures (number of correct characters per second, mean activation time,
number of errors) in terms of means and standard deviations (in each trial, across
users). Table 3.1 presents also the Friedman’s chi squared values in the comparisons across all conditions, with p-values with 0.01 as significance threshold. Significant differences in Friedman’s chi squared were found in each comparison across
all conditions. Pairwise tests allowed to evaluate further the differences between
conditions in terms of preliminary observations according to the goals of this pilot
study. Overall, the condition EyeBCI trigger showed the smallest number of correct
characters per second, the longest mean activation time, and the highest number
of errors. Comparing the two EyeBCI conditions, it can be observed how the BCI
worked better in all performance indices when used to shorten the dwell time instead of triggering the activation of the gaze-selected UI item. ET 0.5 s resulted in
the best overall performance in terms of number of correct characters per second,
with the lowest mean activation times, but such advantages showed also costs in
terms of number of errors. EyeBCI dwell is far less prone to error than ET 0.5 s. It is
also slightly less fallible than ET 1.5 s, but this is not statistically significant. ET 1.5
s and EyeBCI dwell are similar in terms of correct characters per second and mean
activation times. ET 3.0 s showed a non-significant advantage in terms of number
of errors over EyeBCI dwell, without improving the number of correct characters per
second (also because of the long mean activation times).
A within-subject ANOVA (Table 3.2) was performed (assumptions were checked)
for each scale of the questionnaire about user experience, comparing the effects of
control conditions on their scores. No effect of repeated measures was found. Significant effects of the different conditions in UI Control variable occurred in all scales
but the 7th (“The time required to select a symbol was too short”). Considering also
the post-hoc tests, it was possible to highlight how the EyeBCI trigger was the worst
condition overall, while the EyeBCI dwell was appreciated in terms of speed, ease of
use, and proneness to errors. Neverteheless, it must be noted the level of mental
effort and fatigue expressed in scales 2 and 6: EyeBCI dwell was probably affected by
the limitations in BCI control (effort in mental focus), even if they are influencing the
interaction less than in EyeBCI trigger, where the activation of the key is completely
controlled by the BCI without a dwell time.

ET 3.0 s
ET 1.5 s
ET 0.5 s
EyeBCI
trigger
EyeBCI
dwell
F(4,52)
p<0.01

Scales

32.3

22.7

60.5

24.8

10.9
1.7e-06

SD
35.0
26.3
8.5

M
55.4
35.5
8.4

1

30.6

30.4

SD
28.3
11.9
9.0

15.18
2.8e-08

34.5

69.6

M
27.2
14.0
7.9

2

22.8

31.8

SD
26.2
11.3
13.0

12.03
5.4e-07

25.2

60.1

M
27.3
10.4
14.8

3

29.8

31.7

SD
28.3
27.0
18.0

4.05
6.3e-03

62.9

50.5

M
66.4
72.9
80.4

4

29.6

25.2

SD
17.8
14.9
21.2

12.45
3.6e-07

67.1

33.0

M
83.4
82.1
77.9

5

26.5

31.2

SD
23.8
15.4
18.9

6.46
2.7e-04

34.5

51.9

M
23.3
16.6
19.5

6

16.0

24.8

SD
26.3
23.8
34.6

2.13
9.1e-02

22.3

23.3

M
17.4
22.4
41.8

7

20.5

34.8

SD
28.6
22.8
34.5

5.03
1.7e-03

24.1

54.9

M
18.5
21.1
50.5

8

TABLE 3.2: Questionnaire data - means (M) with standard deviations (SD) - expressing the agreement of the subject (from 0 for "strong disagreement"
to 100 for "strong agreement") with the statements in Figure 3.3 about different aspects of user experience.

30
Chapter 3. Focus Sensitive Dwell time in Eye-BCIs

3.4. Conclusions

0

25

50

31

75

100

ET_3.0ms

ET_1.5ms

EyeBCI_Trigger

EyeBCI_Dwell

ET_0.5ms

F IGURE 3.3: Scores - means with upper standard deviation bars, across subjects - of the 8 rating scales presented in the user experience questionnaire.

Apparently, the most important advantage of the EyeBCI dwell was the low perceived proneness to errors, on the same levels of ET 3.0 s and ET 1.5 s ET conditions.
The ET 0.5 s is perceived as quite demanding in temporal terms, and as prone to
errors like the EyeBCI trigger probably because of the risk of selecting a word when
the Cognitiv value is already over threshold.
The analysis of performance and user experience data showed that the EyeBCI
dwell condition was less prone to errors than the fastest ET condition. In addition,
it has overcome, in all indices, the EyeBCI trigger condition, which implemented a
more typical ET-BCI control. Thus, EyeBCI dwell offers high precision and responsiveness, similar to (and, in terms of errors number, slightly better than) an ET with
average dwell time. In addition to this, EyeBCI dwell paradigm has the potential
of obtaining even shorter mean activation times, while in typical ET they are obviously constant. The fatigue and frustration of the users in EyeBCI dwell is higher
than in ET conditions: it depends probably on the BCI control, which requires more
advanced methods of EEG interpretation than the default ones offered by the lowcost Emotiv EPOC+. Nevertheless, such fatigue and frustration are smaller than the
ones produced by EyeBCI trigger. Such observation, alongside the ones about performance, suggests to design EyeBCI paradigms with an adaptive relationship between
ET and BCI that is based on a flexible facilitation of ET according to the user’s intentions (which increases the potential self-customization of ET) instead of EyeBCI
paradigms with a prone-to-errors pure sequential control of gaze-selection followed
by focus-activation.

3.4

Conclusions

In this study, an interaction concept of focus-sensitive dwell time in EyeBCI (UI dual
control based on ET and BCI) is introduced to adapt the duration of the dwell time
to the level of mental focus of the user: the dwell time shortens according to the
increase in concentration of the user in order to improve the system performance
and the user experience.
This approach was evaluated by means of a series of experimental comparisons
within a pilot study that considered 5 UI control conditions, 3 based on ET (differing

32

Chapter 3. Focus Sensitive Dwell time in Eye-BCIs

by duration of dwell time: 3 s, 1.5 s, 0.5 s) and 2 based on EyeBCI (in one case the BCI
triggers the activation of the UI item observed by the user, in the other the BCI lowers the dwell time for the activation of the observed UI item according to the level
of mental focus of the user). The task was based on the selection and activation of
keys on an on-screen keyboard to write 2 words. The comparisons considered performance measures (correct characters per second, mean activation times, number
of errors) and user experience measures (questionnaire scores).
The tested implementation of the novel EyeBCI surpassed, in all considered aspects of user experience and performance, an EyeBCI based on a typical BCI-trigger
to select the keys. It obtained selection times and performance levels similar - and
slightly superior in terms of errors - to the ones of ET with medium dwell time (1.5
s). Nevertheless, the effectiveness of the novel EyeBCI is shown alongside higher
fatigue than the one experienced by subjects under ET conditions. Next investigations will consider this issue while improving the capabilities of self-customization
in the algorithms for EEG interpretation: a faster recognition of the user’s intentions
should lower his/her fatigue, maintaining the same levels of precision or raising
them further. Indeed, the results of this pilot study were obtained by means of a
low-cost implementation of the paradigm, which did not allow a specific study of
EEG signals to customize the recognition processes. Yet, the potential of the focussensitive dwell time paradigm for EyeBCI was confirmed because it actually shaped
the dwell times according to the requests of the user, avoiding too long or too short
durations as pure ET paradigms cannot do. While it is obtaining performance results similar to ET paradigms, it is also minimizing the errors that can be produced
without modulating the dwell time according to the real time changes of users’ goals
(observing or activating the UI).

33

Chapter 4

Soft Brain-Machine Interfaces for
Assistive Robotics
This chapter aims at exploring the potential of a novel hybrid Brain-Machine Interface - labeled as SoftBMI (Schiatti et al., 2017) - composed of an eye-tracking system,
for an intuitive and reliable control of a robotic arm system’s trajectories, and a BCI
unit, for the control of the robot Cartesian stiffness, which determines the interaction forces between the robot and environment. The latter control is achieved by
estimating in real-time a unidimensional index from user’s EEG signals, which provides the probability of a neutral or active state. This estimated state is then translated into a stiffness value for the robotic arm, allowing a reliable modulation of the
robot’s impedance, and its adaptation to dynamic constraints of different tasks. The
potential of the proposed approach resides in exploiting the BCI as an additional
channel, enhancing the degrees of freedom available for control over both kinematic
and dynamic behavior of an assistive device.
This work has been published as : Schiatti, L., Tessadori, J., Barresi, G., Mattos, L. S.,
& Ajoudani, A. (2017, July). Soft brain-machine interfaces for assistive robotics: A novel
control approach. In Rehabilitation Robotics (ICORR), 2017 International Conference on
(pp. 863-869). IEEE. - The final files for this publication are available from IEEE via:
http://dx.doi.org/10.1109/ICORR.2017.8009357

4.1

Introduction

The applications of robotic arms in assistive domains have demonstrated a high
potential in improving the patient’s quality of life by reducing their degree of dependence on caregivers, aiding them in activities of daily living (ADLs), such as
self-care and pick-and-place tasks (Tsui et al., 2008). Patients who can benefit from
this technology include those with upper body disabilities, such as traumatic spinal
cord injuries (SCI), paraplegic and tetraplegic patients (Kim et al., 2012). To make
robotic arms suitable for the execution of a large class of daily tasks, intuitive and
user-friendly human-robot interfaces must be designed to associate the residual capabilities of the users with disabilities to appropriate robot functions.
There are many studies aiming at improving the usability of commercially available robotic arms in assistive scenarios, by designing control interfaces able to reduce
user’s cognitive burden and time required to accomplish a task. Such interfaces often rely on teleoperation or shared control paradigms. Typically the partially or
fully autonomous robot behavior is adapted to the user’s high level inputs, based on
his/her residual limb motor capabilities, to enhance the task execution performance.
An example of implementation is shown in Jain et al., 2015, where shoulder movements are detected and mapped into high level control signals for a robotic arm.

34

Chapter 4. Soft Brain-Machine Interfaces for Assistive Robotics

Here a shared-control framework for assistive manipulation is built on the concept
of autonomous piecewise trajectory segments. In a similar vein in Jiang et al., 2013a,
a haptic 3D joystick was adapted to directly control a robotic arm movements, enhancing the performance of traditional arm joystick control. In Jiang et al., 2013b, a
hand gesture recognition interface was combined with robot embedded object tracking and face recognition to control a wheelchair-mounted robotic manipulator.
However, for people suffering from more severe forms of motor disabilities, the
above mentioned Body-Machine Interface examples cannot be exploited to drive
a robot function. To address this issue, former studies explored the use of gaze
(Dziemian et al., 2016) or brain signals, through eye-trackers and Brain-Computers
Interfaces (BCI) respectively, to produce robot control by means of non-muscular
channels. Robotic systems driven by brain signals, also known as Brain-Machine
Interfaces (BMI), typically exploit P300 (Palankar et al., 2009), steady-state visual
evoked potentials (SSVEP) (Petit et al., 2014), or motor imagery (Meng et al., 2016)
paradigms, to generate high level commands to control a robot. However, despite
the continuous improvements, BCI systems are still far behind those based on BodyMachine Interfaces in terms of performance and reliability. This is due to wellknown issues, such as high cognitive loads on the user, especially in continuous
control schemes, low performance in high degrees of freedom control, and lack of
flexibility given that user choices are mostly predefined. To overcome the limitations
of pure BCI systems, hybrid interfaces have been proposed that exploit a combined
use of EEG and another biosignal, as those based on BCI and gaze, to enhance communication (Barresi et al., 2016) or robot control (Wang et al., 2015).
It is worth mentioning that most of the existing solutions focus on aspects related
to the ease-of-use and intuitiveness of the user interface rather than on the control
of physical interaction capabilities of the robot. The latter feature can contribute to
enhanced interactions in the human-robot-environment loop, and the underlying
safety. When developing a robotic assistive tool, a safe behavior must be guaranteed
e.g., for eating/drinking or personal hygiene tasks, as well as in case of accidental
arm collisions with the environment (Vogel et al., 2015). A well-known strategy to
ensure safety in a robotic system is the active impedance control, which regulates the
interaction between the robot and its environment, including a virtual compliance at
the joint level between the motor and the output, which causes the human operator
to perceive a softer arm.
Within this context, the concept of Teleimpedance control (Ajoudani et al., 2012)
has been recently proposed for the control of teleoperated robots, not only by means
of kinematics quantities, to drive robot position and trajectory, but also regulating
dynamic aspects like its stiffness or full impedance parameters during the task execution. Through this framework, the robot is able to adapt its physical behavior
to various interaction scenarios, by replicating the master’s real-time measured trajectories and limb impedance, usually estimated by processing electromyographic
(EMG) signals (Ajoudani, 2016). Nevertheless, as mentioned above, the use of EMG
cannot be considered for patients with severe motor disabilities.
To address these issues, in this work we present a hybrid BMI for real-time planning of a robotic arm movements and its physical interaction behavior. Our contribution is two-fold. (1) We use gaze signals for continuous robot position control,
to explicitly select the target in reaching and grasping tasks. In this way, the developed interface can be used by severely motor-impaired people, since gaze control is
a long-lasting motor process in most motor diseases. Moreover, the gaze constitutes
an intuitive and reliable input to control the robot motor planning in the 3D space,

4.2. Methods

35

Webcams
Robotic Arm

Brain-Computer
Interface

Robotic Hand

z

x

GUI

y

Eye-Tracker

F IGURE 4.1: System setup for Soft Brain-Machine Interface: translational
movements of the robot in space are controlled by human gaze, while an
EEG-driven unidimensional index regulates the robot Cartesian stiffness in
real-time.

overcoming the limits and constraints of a BCI system, which we use instead for lowdimensional control. (2) We introduce the novel idea of exploiting EEG signals as an
input for active impedance control of assistive robots. To the best of our knowledge,
it is the first attempt in the literature. This approach will enable motor-impaired
users to achieve also a dynamic control of the robot interaction behavior (stiff/soft).
Considering this feature, we call the presented system "Soft BMI". The control of
robot Cartesian stiffness profile is simultaneous to the kinematic gaze-driven position control, in a seamless way, and the BCI is used to command a less crucial aspect
of robot behavior, for which an estimation error does not contribute to a substantial
reduction of the robot performance.
The proposed technique is implemented in an assistive robotics application: using a robotic arm to grasp and move objects in tasks with different constraints. In
our setup (see Fig. 4.1), the user can drive a compliant robot using gaze and move it
in an unstructured environment to establish a soft contact or avoid high interaction
forces during collision. If there is a requirement for a higher interaction force profile, the operator can increase the robot stiffness to accomplish the task, by means
of a mental command. A unidimensional index corresponding to the probability of
command detection is associated to the regulation of the robot’s Cartesian stiffness
components in all translational and rotational directions. This allows for a higher
task accuracy, as it is well-known that an enhanced movement accuracy or increased
force capability in humans or robots can be achieved by stiffer profiles of the human
and the robot joints (Gribble et al., 2003).

4.2

Methods

Fig. 4.2 introduces the system, which consists of three main parts: Input block, which
includes two web cameras, an eye-tracker, and an EEG headset to achieve the BCI
functions; Control Interface, implemented in Processing programming environment,
for the real-time processing of the input data to generate suitable control outputs for
the third block; and the Actuated System, a 7-DoF torque controlled robotic arm

36

Chapter 4. Soft Brain-Machine Interfaces for Assistive Robotics
INPUT
View
1&2
U(t)
Eye-tracker

R(t)
BCI

X

Trajectory
planning

q(t)

o/c

Hand
control

o/c

C(t)

Stiffness
planning

K&D

GUI
Processing

Web cams

CONTROL INTERFACE
ACTUATED SYSTEM

F IGURE 4.2: Information workflow between system components.

equipped with the Pisa/IIT SoftHand (Catalano et al., 2014). The components of
the system and the flow of information between them are described in detail in the
following sub-sections.

4.2.1

Web cameras

Two low-cost Logitech web cams were used to monitor the robot position from different angles and allow the user to plan 3D translational movements of the robot
end-effector. Cameras were placed on top and to the side of the setup, so that each
view allows for a clear selection of a coordinate pair. A Logitech B525 HD webcam
was set above the robot, to capture xy view in robot coordinates system (view 1 in
Fig. 4.3), while a Logitech HD C270 webcam was put in front of the robot, to catch xz
view (view 2 in Fig. 4.3). An autonomous algorithm was implemented to build the
mapping from the gaze coordinates on the screen to the robot coordinates for each
camera. To this purpose, in the calibration phase (executed only once, depending
on the placement of the cameras), the operator selected a few points on the screen,
with known coordinates on the KUKA frame of reference, for each view. The rest of
the mapping, i.e. the identification of two homogeneous transformations, was done
autonomously using the algorithm.

4.2.2

Eye-Tracker

The eye-tracker employed in this work was the commercially available Tobii EyeX,
both in its hardware and software (i.e. EyeX SDK) components. The system consists of two infrared micro-projectors that are used to illuminate user’s eyes, while
two optical cameras record the reflections of visible and infrared light on corneas
and pupils. A USB 3.0 connection is required to connect the sensor system to the
computer, in order to transfer the data collected by the imaging sensor. This information is processed by the dedicated software to provide the screen coordinates of
the user’s current gaze target. The gaze target coordinates provided by the Tobii
system were transmitted via UDP to the Control Interface script at 30 Hz frequency,
and filtered using the following equation:
q
q
Xi (t) = Xi (t − 1)(1 − V (t)) + Ui (t) V (t)
(4.1)
in which Xi denotes the filtered ith coordinate, with i=1,2, Ui (t) is the Tobii estimation
at time t and V (t) is an estimation of the movement speed of the gaze target in the

4.2. Methods

37

current step. More specifically, V (t) was defined as:
v
u
2

u
Xi (t − 1) − Ui (t)
t
V (t) =
∑
Xmaxi
i =1,2

(4.2)

where Xmaxi is the largest value the ith coordinate can assume (i.e. the screen resolution along each dimension). With this normalization, V (t) varies in the [0, 1] range.
Intuitively, this filter was designed to cancel out minor gaze fluctuations, while leaving performance on fast movements as unchanged as possible.

4.2.3

Brain-Computer Interface

The unidimensional index for the impedance control was estimated through the
combined use of the EEG system Emotiv EPOC+ and its accompanying software.
The Emotiv EPOC+ is a low cost EEG wireless headset with 14 electrodes located at
the positions AF3, F7, F3, FC5, T7, P7, O1, O2, P8, T8, FC6, F4, F8, AF4 according to
the International 10-20 system, communicating with the PC via bluetooth. Sampling
rate is 256Hz. Given the final goal of developing an affordable and usable assistive
technology, Emotiv EPOC was chosen in this study for his significant advantages
in terms of cost, portability, robustness and user customization. Although it lacks
in reliability and signal quality compared to existing medical EEG interfaces, it has
already been used in robotic applications both exploiting its embedded muscular
measurements (Ranky et al., 2010) and EEG signals (e.g to control a 7 dof robotic
arm in Ouyang et al., 2013).
The Emotiv software includes a control panel, which encompasses a Cognitiv
suite. The latter evaluates user’s real time brainwave activity to discern the user’s
conscious intent to perform physical actions on a real or virtual object. Up to four
actions can be recognized at any given time. The detection system outputs a single
action or neutral (i.e. no action) at a time, along with an action power, a unidimensional scalar index ranging between 0 and 1 representing the detection certainty that
the user has entered the mental state associated with that action. For the present
work, only one action, corresponding to the "push" mental command was trained
and used. Training was performed using the Cognitiv suite, and consisted in alternation of neutral and active states in trials lasting 8 s each one, for some minutes,
until user felt comfortable with the state control. In neutral trials the user was asked
to relax and avoid moving, while during active trials the user had to focus on the
action of pushing a 3D object (cube) represented on the screen.
An open source software (Mind Your OSCs) was adopted to transmit via OSC
protocol the Emotiv readings to the Processing Control Interface. To limit quick fluctuations in the estimation of the mental action state index, the raw value provided
by the Cognitiv suite was low-pass filtered with a leaky integrator:
C (t) = min(1, R(t) + A × C (t − 1))

(4.3)

Here, R(t) is the reading provided by the Emotiv system at time t, while C (t) is the
filtered index describing user’s concentration (neutral or active) state. The parameter A has a value ranging in the [0, 1] interval, with typical values around 0.5. This
parameter was introduced in order to compensate for widely varying performances
observed across different users and sessions and it was re-calibrated before each session in order to provide an acceptable user experience. Finally, the upper limit of

38

Chapter 4. Soft Brain-Machine Interfaces for Assistive Robotics

VIEW 1
BUTTON
SELECTION
FEEDBACK

GAZE-BASED
CURSOR

GAZE-BASED
POSITION
SELECTION
FEEDBACK

VIEW 2
compliant

FOCUS-BASED
STIFFNESS
stiff SELECTION
FEEDBACK

F IGURE 4.3: Graphical User Interface.

1 was imposed to the C value in order to keep its range consistent with the input
variable R.

4.2.4

Graphical User Interface (GUI)

The GUI itself consisted of a vertical panel on the left margin of the screen including
four buttons (from top to bottom: calibration start/stop, change view, open/close
and stop), while most of the monitor was displaying the live feed from the currently
selected camera (Fig. 4.3). The buttons on the left allowed the user to:
• start and stop the calibration to map each webcam screen view coordinates
with corresponding robot workspace coordinates;
• switch currently selected camera;
• open or close the Pisa/IIT SoftHand;
• stop the robot movement in case of wrongly issued command.
An interactive cursor was constantly indicating gaze target and current mental
state: the cursor was a blue dot when C was zero (neutral state) and it progressively
became red with increasing current values of C. A button was selected when the
gaze-controlled cursor rested within it for longer than 1.5 s (this dwell time was
shortened to 0.5 s for the stop button in the lower left corner). A circular progress
bar provided the indication of elapsed and total dwell time required.
The selection of the desired target robot position was enabled by fixing gaze on
the corresponding point in the webcam screen view: if gaze velocity V (t) fell below
a certain threshold while on top of a specific point on the webcam image, a virtual
circular button appeared and its progress bar started filling as for the buttons of the
left panel. If the user did not divert its gaze from the button, when the bar was
filled the target point coordinates X were sent to the robot controller. Diverting gaze
caused the virtual button to disappear. Rigidity of the robot during each movement
was a function (see text below) of the concentration index C at the time instant in
which the progress bar filled completely.

4.3. System evaluation

4.2.5

39

Actuated System

System evaluation was carried out using a 7-DoF KUKA lightweight robotic arm.
The robot was controlled in torque mode and a Cartesian impedance controller was
developed to achieve the operator’s planned trajectories through the eye-tracker, in
KUKA frame of reference (using two transformations, as explained above). A fifth
order polynomial model generated online smooth Cartesian trajectories in between
two selected points on the screen, every time the operator’s gaze target point on
screen was detected by the User Interface. This consideration was to achieve smooth
trajectories in a suitable time, that was estimated according to the distance from the
final destination.
The Cartesian stiffness of the robot was allowed to vary between a minimum (K0 )
N
and maximum (Km ) value of 300 to 2000 m
for all translational components (k t ), and
Nm
50 to 250 rad for rotational ones (kr ), respectively. The exact value was estimated in
real-time from the concentration index, using a linear mapping:
Kt,r = K0t,r + C (t)(Kmt,r − K0t,r )

(4.4)

This profile enables the robot to establish a soft contact in case of lower stiffness
values, while demonstrating a stiff behaviour when a higher precision or force generation is required by the task. The Cartesian damping matrix D was obtained from
the desired K using the double diagonalisation design as explained in Albu-Schäffer
et al., 2003.
The robot was equipped with the Pisa/IIT SoftHand, an under-actuated and synergy driven robotic hand. The embedded adaptivity of the robotic hand made this
choice ideal for the grasping of objects with various shapes since only one actuator
input was controlled. The hand unit and power driver for the motors (SoftHand
and force feedback cuff) are custom control boards based on the Texas Instruments
Luminary DSP chip LM3S8962. The DSP control loop is executed at 1KHz while the
communication with the host PC is achieved through a real time Ethernet link. Motor current measurement is performed by a hall effect based current sensor (ACS714,
Allegro Microsystems Inc.) and appropriate signal conditioning integrated in the
motor power driver module. The robot control script was implemented in C++ environment, running in a separate PC and receiving the user input from the Processing
script via UDP. A data package included the selected target gaze coordinates X with
a flag indicating if they are expressed in view 1 or view 2, a control bit indicating
open or close state of the hand, and the concentration index C (t) describing user’s
mental state.

4.3

System evaluation

The presented Soft BMI system was tested on two different subjects (aged 24 and 33),
who were asked to control the robot in two different tasks. One subject had previous
experience with both the Tobii eye tracker and the Emotiv BCI system, while the
second was a naive subject. Operative tests were preceded by a calibration session
for both the eye-tracker and the BCI, with the standard procedures implemented in
the software suites of the two systems. Both subjects were able to control the GUI of
the robot within minutes: they could deliberately fixate gaze on any given point on
the screen in order to select it as a robot target position while maintaining the chosen
mental state, corresponding to concentration index equal to 0 for neutral or a scalar
between 0 and 1 for active state, or divert gaze to prevent undesired commands.

40

Chapter 4. Soft Brain-Machine Interfaces for Assistive Robotics
Task 1:Heavy object push
Case 2: low stifness

End−effector Y force [N]

Distance to target [mm]

Case 1: high stifness

A

200
150

150

100

100

50

50

0

0

1

2

3

4

0

5

0

−20

−20

−40

−40

−60

−60

−80

−80

−100

−100

−120

1

2

3

4

5

D

−120
1

2

3

4

5

0

E

20

10

0

0

−10

−10
2

3

4

5

5

G

−5

−5

−10

−10
4

5

Time [s]

1

2

3

4

5
0

2
Time [s]

4

F

0

0

0

3

20

10

1

2

Case 2: low stifness

Case 1: high stifness

0

1

Task 2: Collision

Time [s]
End−effector position [mm]

0

0

C

0

End−effector Z force [N]

B

200

5

H

0

2

Time [s]

4

F IGURE 4.4: Results from system evaluation. Panels A-B: distance between
current arm endpoint and selected target for high (panel A) and low (panel
B) stiffness trials and corresponding estimated endpoint forces in the push
direction (panels C-D). t = 0 corresponds to Kuka receiving movement command. Black triangles indicate the approximate contact moment between soft
hand and object. Panels E-H: distance traveled by arm endpoint since t = 0 in
the vertical direction, for high (panel E) and low (panel F) stiffness trials and
corresponding estimated endpoint forces, in the vertical direction. t = 0 corresponds to Kuka receiving movement command. Contact between grasped
object and obstacle occurs almost immediately after movement start. Blue
(orange) line depicts trials performed by experienced (naive) user (S1, S2 respectively).

4.4. Results and Discussion

4.3.1

41

Tasks

Two complementary tasks were considered to evaluate the effectiveness of the proposed interface for the online control of the robot trajectories and physical interaction behavior.
Heavy object pushing: The purpose of this task was to demonstrate the need for
force production capabilities of robots when dealing with precision tasks. In this
task, the user was asked to position the robotic hand beside a heavy brick (about 8
kg), and push it aside by selecting a target position around 15 - 20 cm inside the brick
from the top view (please refer to the accompanying video, see Fig.5 caption). The
user was asked to perform the task in both neutral and active mental state in order to
select low and high robot Cartesian stiffness profile, until the task was accomplished.
Object grasping and environment collision: This task was designed to stress the
need for a compliant behavior of the robot when dealing with an unstructured environment, in which collisions with obstacles are likely to occur. The user was requested to control the robot in order to grasp a partly full plastic water bottle (around
0.2 kg), lift it and then move the arm such that the part of the bottle sticking out below the hand would hit a rigid, immovable obstacle. As for the previous task, the
user was asked to repeat this test in two conditions, with the lowest and highest
possible levels of robot stiffness respectively. Our objective was to examine the effectiveness of the proposed interface in allowing the user to control robot behavior
adaptability to the environment constraints1 .

4.4

Results and Discussion

Heavy object pushing: Fig. 4.4 illustrates results of two repetitions of the task, performed by the two subjects. Panels A-C and B-D represent data collected during
the active and neutral mental state, corresponding to high and low stiffness respectively. In particular, panels A and B show the distance, expressed in millimeters,
between gaze-selected target and robot endpoint current position, while the second
row presents the endpoint forces produced by the Kuka robot in the y (pushing)
direction. Different colors correspond to trials performed by different subjects.
Since the robot started in the position of the last selected target, the distance to
target was approximately 0 at the beginning of the trial. At t = 0, a new target was
chosen in order to push the object forward and the robot started moving. Impact
occurred around 1 s later in all presented trials, as evidenced by the black triangles
in Fig. 4.4. After touching the obstacle, the robot sharply increased the applied force
in y direction to reach its intended target, as visible from the sharp change in force
slope, in panels C-D (see Fig. 4.5 upper block for the snapshots of this experiment).
In the high stiffness case (C = 0.8, 1 at the moment of selection for subject S1, S2
respectively), the total force produced was high enough to overcome statical friction
between the object and the underlying surface, and a stick-slip movement phase
occurred, characterized by oscillations in force and irregular robot speed, until the
endpoint was close to its final intended target. In the low stiffness scenario (C = 0 for
both subjects at the moment of selection) the applied force was sufficient to distend
the fingers of the SoftHand (hence the small reduction in distance to target after
reaching the object, panel B), but never overcame the static friction threshold. It is
worth noting that even in the high stiffness case the robot was not perfectly rigid
1A

video of the system evaluation is available at the following link: http://y2u.be/k6DyosvWB_s

Chapter 4. Soft Brain-Machine Interfaces for Assistive Robotics

Stiff (S2)
Compliant

Task 2

Stiff

Compliant

Task 1

Stiff

42

F IGURE 4.5: Screen shots of the heavy object pushing (Task 1) and collision
(Task 2) tasks in active mental state (stiff) and neutral mental state (compliant). For the second task, two different examples of the active (stiff) case for
the two subjects are provided.

and therefore it stopped slightly short of its target and it kept applying force against
the obstacle.
Object grasping and environment collision: Similarly to the previous case, subjects
performed the task in two conditions: panels E-G on Fig. 4.4 display results for a
high-stiffness (active mental state) trial, while panels F-H on the right side present
the low-stiffness (neutral mental state) case. The first row shows the z coordinate of
the Kuka endpoint recorded starting from the moment of the impact of the grasped
object against an obstacle, while panels G and H show the corresponding estimated
forces in vertical z direction.
As before, t = 0 indicates the time in which the movement command is received
by the robot. Impact against the obstacle occurred almost immediately, with very
different outcomes depending on robot arm rigidity: for both subjects low-stiffness
trials (C = 0) resulted in the bottle being successfully held on to, whereas highstiffness trials (C = 1) resulted in the dislodgement of the bottle from the soft hand
grip. Moreover, the high-stiffness case present a strong difference for the two subjects: in the case of subject 1 (S1, blue line), the bottle rolled away after being dislodged, whereas for subject 2 (S2, orange line) the plastic bottle was stuck between
the robot arm and the brick (see Fig. 4.5 lower block for the snapshots of this experiment). The different behavior is clearly shown in the graphs: in the stuck-bottle case
(panel E, orange line), the robot endpoint was sharply pushed upwards by the bottle
itself, while for the rolling-bottle case (panel E, blue line) the impact caused only a
minor readjustment in the robot trajectory. The corresponding force graph (panel
G) shows a value of about 2.5 N at the beginning of both subjects trials, which was
force required to keep the bottle lifted and steady. During the impact, forces at the

4.5. Conclusions

43

endpoint turned negative, as the distal end of the robot arm was pushed upwards
by the interaction between held bottle and obstacle. After the bottle was dislodged,
the estimated force was around 0 N if the bottle rolled away (blue line) or negative
when the robot was actually pushing downwards on the stuck bottle (orange line).
In the low stiffness case, the bottle remained within the hand for the whole trial,
as the robot arm adapted its path according to the imposed environment constraints.
In particular the robot endpoint moved downward when it was rotating around
the bottle-obstacle contact point for both users (first negative peak, panel F), then it
moved slightly above target as the bottle was dragged on the surface of the obstacle
(positive peak, panel F). The final position of the robot endpoint, as well as the forces
expressed at the end of the trial (panel H), vary slightly according to the final relative
angle between the bottle and the obstacle it was resting on.

4.5

Conclusions

In this study, a preliminary study demonstrated the possibility of controlling both
kinematic and dynamic parameters of a robotic arm through a hybrid BMI - Soft
BMI - that only exploits eye-movements and brain signals. These features allow the
interface to be accessible to patients with sever motor disabilities, where residual
muscular functions (excluding ocular control) cannot be exploited. The main contribution, compared to the state of the art of brain-controlled assistive robotics, lies in
the introduction of an additional degree of control for the user, enabling the adaptivity of the robot behavior during physical interactions with the environment.
The eye-tracking system is very intuitive in its use, as it can be calibrated and
proficiently driven by a user with no previous experience within minutes, while
maintaining a high degree of precision in the selection of desired targets. On the
other hand, the BMI was designed in order to take advantage of the fact that tasks
requiring a higher degree of mental concentration are typically those that require
stiffer movements (e.g. very precise displacements or heavy object moving). Therefore the robot has a default soft and safe behavior. The BCI channel is normally
inactive, and it is just used in tasks where high accuracy is required. Compared
to systems where the eye-tracker alone is used for position control, this introduces
a remarkable advantage. During a drawing/writing task, for instance, as the one
presented in Dziemian et al., 2016, a stiff behavior is advisable. On the other hand,
when changing task, e.g. to self-feeding, robot stiffness should be reconfigured to
a lower level by a caregiver, to allow safety. The solution proposed in this study,
allows for a further degree of control and therefore independence for the patient.
The control of the robot proved to be quite easy to learn, as a naive subject
learned to perform a relatively complex task such as grabbing an object and moving
it around with a given degree of rigidity within his first session. At the moment,
however, evoking a desired mental command required effort from the user and,
sometimes, multiple attempts. This could be ascribed to the limitations connected
to the use of the commercial EPOC software and hardware.
The controller presented in this work was intended as a proof of concept for a
novel kind of interface that could help to integrate a higher degree of autonomy in
assistive applications of soft robotics for severely disabled patients.

45

Part III

Passive Control Signals: Machine
Adaptation to User

47

Chapter 5

The Effect of Tactile Feedback on
ErrP Single-Trial Detection
This chapter evaluates the effect of tactile feedback on Error-related electroencephalographic potentials detection. The goal is to explore new interaction protocols able to
enhance ErrP single-trial detection accuracy, in view of online applications, where
information about user awareness of erroneous responses can be used to improve
the reliability of BCI-based assistive systems. In the present work (Tessadori et al.,
2017), two hypothesis were tested: 1) whether the addition of tactile feedback can
improve the detection of ErrP, when used in combination and not alternatively to
visual feedback; 2) whether a mismatch between the two different sensory channels
can enhance ErrP detection.
This work has been published as : Tessadori, J., Schiatti, L., Barresi, G., & Mattos, L.
S. (2017, October). Does Tactile Feedback Enhance Single-Trial Detection of Error-Related
EEG Potentials? In Systems, Man, and Cybernetics (SMC), 2017 International Conference
on (pp. 1417-1422). IEEE. - The final files for this publication are available from IEEE via:
http://dx.doi.org/10.1109/SMC.2017.8122812

5.1

Introduction

Brain-computer interfaces (BCIs) offer the possibility to improve the degree of autonomy of people suffering from severe motor disabilities, but without cognitive
impairments, e.g. Amyotrophic Lateral Sclerosis (ALS) patients, by providing them
with a non-muscular channel for communication with the outside world and control
of external devices (Wolpaw et al., 2002). Usually these systems exploit non-invasive
(mainly electroencephalographic - EEG) measures of brain signals, and extract significant features out of them, in order to infer the subject’s intention. These features
are then forwarded to a classifier, which translates them into a control signal for a
communication interface or any other kind of assistive device (Millán, 2002). Despite recent advances, BCIs still suffer from a lack of reliability, preventing them to
be exploited as everyday life widespread products. Indeed, these systems, as well
as other interaction technologies based on physiological signals, are prone to errors
in recognition of subject’s intent. One of the modern challenges of this research domain is consequently to increase the successful classification rate of subject’s intention, without intensifying user mental effort or decreasing the communication rate
(as would be the case for verification procedures where the output of classification
is validated on two subsequent trials as in Wolpaw et al., 1998).
A unique advantage of the use of brain data as input for interaction technologies
is that they can provide at the same time both information from which mental control
commands can be derived and information about cognitive states, that are passively

48

Chapter 5. The Effect of Tactile Feedback on ErrP Single-Trial Detection

elicited during human-machine interaction. Such information can be exploited to
improve the interaction quality, as well as the rate of correct intention detection itself. To this aim, previous studies explored the use of one of these cognitive states,
namely the awareness of error responses, as a way to improve the performance of
BCIs (Chavarriaga et al., 2014).
The presence of error-related potentials in EEG recording right after people realize that they made an error was shown in different physiological studies in the last
few decades (Carter et al., 1998). Depending on the context, slightly different kinds
of ErrPs have been observed: "response ErrP", arising after the subject’s incorrect
motor action, e.g. pressing the wrong command key (Falkenstein et al., 2000); "feedback ErrP", in typical reinforcement learning tasks, following the presentation of a
stimulus that indicates incorrect performance (Holroyd et al., 2002). Beside ErrPs
elicited in case of errors made by the subject himself, the presence of an "observation
ErrP" was also proved when the subject is observing errors made by an operator
during a choice reaction task (Schie et al., 2004). The main components of response
ErrP in the EEG are a negative potential at 80 ms followed by a larger positive peak
between 200 and 500 ms after the incorrect response, while feedback and observation ErrPs are characterized by a negativity at 250 ms after presentation of incorrect
performance feedback. All ErrPs have a fronto-central scalp distribution, and are
probably generated in the anterior cingulate cortex (ACC), which regulates emotional responses (Holroyd et al., 2002).
Recent studies, exploring the feasibility of the inclusion of such ErrPs in BCI applications, demonstrated the existence of a so called "interaction ErrP", in which the
error is not made or observed by the subject but by the interface, during the recognition of the subject’s intention (Ferrez et al., 2005, Ferrez et al., 2008b). This latter
ErrP shows a similar shape to the one of response ErrP, with mainly a negative and
a subsequent positive peak, whereas the timing is similar to the feedback and observation ErrPs, since the first negative peak occurs around 250 ms after presentation
of error feedback.
The attempts of integration of ErrPs in the context of BCIs so far encompassed
two main applications: correction of wrong action and the use of ErrP for errordriven learning. In the first case the interaction ErrP has been used e.g. as correcting
signal in a motor imagery-based BCI to control one-dimensional step-wise movements of a cursor, by canceling the selected action if an error was detected (Ferrez et
al., 2008a); or in a P300-based speller, to improve the spelling accuracy by means of
online error correction (Margaux et al., 2012). The second approach has been applied
to implement adaptive capabilities in BCIs, either updating the BCI classifier (Artusi
et al., 2011), or improving the behavior of a semi-autonomous system (Chavarriaga
et al., 2010).
Some studies explored the patterns of interaction ErrP when using a different
feedback modality, i.e. tactile instead of visual, to provide error signal (Lehne et al.,
2009). In Chavarriaga et al., 2012 ErrP classification results were evaluated through
a comparison between visual and tactile feedback modalities, both for an active and
a monitoring task. Erroneous and correct trials were classified above random level
(ROC curves AUCs between 0.7 and 0.8) for all conditions, even if visual modality
always resulted better than the tactile one.
In this study, we aimed at testing whether the use of a supplementary sensory
feedback channel beside the visual one, namely tactile feedback, can improve the
single-trial detection of the interaction ErrP for BCI applications. In this case, the tactile feedback is intended to increase the saliency of the visual one, and not to replace
it, as investigated in the works described above, in which visual and tactile stimuli

5.2. Methods

(a)

49

(b)

(c)

F IGURE 5.1: Experimental protocol: (a) experimental setup; (b) scene at the
beginning of a session; (c) scene at the end of a session.

were never used together. To this purpose, we implemented a passive EEG acquisition protocol, where the subject was asked to monitor mono-dimensional cursor
movements towards a target on a computer screen, with sporadic erroneous movements. The subject possibly received tactile stimulation on either forearm during
cursor movements. Three conditions were tested: i) only visual stimuli; ii) tactile
stimuli concordant with visual stimuli both in case of correct and erroneous behavior, and iii) tactile stimuli discordant with the visual stimuli during erroneous actions
(i.e. tactile stimuli always in the direction of the correct action).
Our research questions are: 1) whether tactile feedback can improve the detection of interaction ErrP, thanks to a more engaging interaction in view of real BCI
application for paralyzed patients; and 2) whether a mismatch between two different sensory channels can enhance ErrP detection. The latter is motivated in view
of a possible future implementation of error-driven learning: e.g. a shared control
scenario in which ErrPs are used to improve the behavior of a semi-autonomous
system. In this case, visual feedback would be provided to the user by direct system
observation (e.g. system movements direction), while tactile feedback could match
some other input modality corresponding to user’s high level intention, e.g. desired
movement direction inferred by detection of motor imagery (exploiting the same
BCI system used for ErrP), or gaze direction, with an eye-tracking system.

5.2
5.2.1

Methods
Experimental protocol

In order to test the influence of tactile feedback on interaction ErrP, we simulated
errors made by a BCI in recognizing subject’s intents in a one-dimensional control
task. The implemented protocol was similar to the ones already presented in previous studies on ErrP inclusion in BCI applications (Iturrate et al., 2012). Specifically,
the acquisition protocol was developed to simulate a human-robot interaction task,
where the user wishes to move the robot towards a target either on the right or left
side of the working space (in this case the computer screen) by means of discrete
steps. In our paradigm the subject did not actually control the interface; rather, the
robot spontaneously moved towards the intended target with sporadic direction errors. We then tested the presence of ErrP generated by a movement in the wrong
direction, simulating an error made by the interface in the recognition of subject’s
intent. The choice of not implementing a real motor intent detection in this experiment was motivated by the purpose of isolating the problem of tactile feedback
effect on ErrP (i.e. our experimental question) from the more complex and general
problem of implementing a complete BCI system.

50

Chapter 5. The Effect of Tactile Feedback on ErrP Single-Trial Detection

The experimental setup is shown in Fig. 5.1a, and consisted of 16 active gel electrodes (g.LADYbird from g.tec) located at Fz, FC3, FC1, FCz, FC2, FC4, C3, C1, Cz,
C2, C4, CP3, CP1, CPz, CP2 and CP4 according to the standard 10/20 international
system, connected to a g.USBamp biosignal amplifier for EEG signals acquisition.
Ground and reference were respectively placed on the forehead (AFz) and left ear
lobe. Hardware filters were set to perform a bandpass between 0.1 and 30Hz. Signals were sampled at 256 Hz. Experiments were started only after impedance of all
electrodes was stably under 5kΩ. Two Myo (Thalmic Labs) armbands positioned
on the subject’s forearms were used to provide tactile stimuli, consisting in 0.5 s of
vibration on either armband, simultaneously to robot movements.
The graphical stimulation protocol was developed in Matlab, while data acquisition occurred through a Simulink model that handled the g.USBamp amplifier. The
experiment scene is shown in Figure 5.1b and c, at the beginning and at the end of
a session (robot reaching target), respectively. Each trial consisted of a cursor (green
square) and robot arm movement between current position (among 21 possible positions) and the next one. Timing was set so that movement was followed by a pause
of random duration between 1.5 and 2.5 s. Trials were repeated until the target (orange square) was reached. Then, the target was randomly positioned either at the far
right or left side of the screen and cursor was placed at the middle position. At the
end of each session a simple animation showed the robot extending and grasping
the target. The task was performed in three conditions:
• Visual stimuli (V): the task was performed with no armband activation;
• Concordant visuo-tactile stimuli (concordant VT): the subject received a vibration from the armband placed at the side corresponding to cursor movement direction;
• Discordant visuo-tactile stimuli (discordant VT): the subject received a vibration from the armband placed at the side corresponding to target position,
i.e. an erroneous movement caused cursor to move left (right), and right (left)
armband to activate.
Twelve healthy subjects (31.9±4.2 y.o., 8 males and 4 females) participated in
the study. Each subject tested a visual-only feedback condition and one of the two
visuo-tactile conditions. Each condition lasted about half an hour, with pauses every
6 reached targets, and encompassed 750 trials with 20% of error probability (cursor
movement in the opposite direction of target). Before the experiment started, all
subjects agreed with experiment guidelines, and signed an informed consent document1 . All anonymized experimental data are available online2 .

5.2.2

EEG signal processing

Error related potentials
EEG data were spatially filtered by common-average re-referencing (CAR), then
band-pass filtered between 1 and 10 Hz with a 4th order Butterworth filter, since
EEG error correlates are known to be slow potentials. Time windows between 150
ms and 850 ms after each cursor movement were considered for subsequent analysis, after baseline correction (baseline estimated as the mean value in the 100 ms-long
1 IIT

ADVR TEEP01 protocol, approved by the Ethical Committee of Liguria Region on June 14th,
2016.
2 http://teep-sla.eu/index.php/results/40-smc2017-dataset

5.2. Methods

51
V

Concordant VT

Discordant VT

Signal amplitude [µV]

2
1
0
−1
−2
0

0.25

0.5
Time [s]

0.75

1

0

0.25

0.5
Time [s]

0.75

1

0

0.25

0.5
Time [s]

0.75

1

F IGURE 5.2: Grand averages of filtered EEG data for one channel, FCz, in 1 s
time window after stimulus onset. Columns refer to different paradigms for
stimuli (respectively, only visual V, concordant visuo-tactile VT, discordant
visuo-tactile VT stimuli). Blue lines represent the average of all trials following a correct cursor movement, while red lines depict averages of erroneous
trials. Thick green lines represent the difference of the two signals (erroneous
minus correct).

interval before stimulus). Since in this study we considered different stimuli conditions, possibly leading to ErrP variations, both time and frequency features have
been computed. In fact it has been demonstrated that the addition of frequency
features (theta band spectral power) increases the task-generalization capabilities of
ErrP classification based on temporal features alone (Omedes et al., 2013). This is
explained by the fact that ErrP mainly vary in latency but not in amplitude among
different tasks. Time features were obtained by sub-sampling signal in time windows by a factor of 4. Frequency analysis was performed selecting non-overlapping
2 Hz-wide power spectrum bands between 2 and 10 Hz, on the same time window
mentioned above, after filtering with a Blackman window. This procedure led to 45
time and 4 frequency features per channel.
Classification
Several different classifiers were tested (feature selection based on z-scores followed
by linear discriminant analysis, learners trees, Gaussian mixture models) and the
best single-trial classification results were achieved with a linear support vector machine (SVM). In order to compensate for the unbalanced number of samples in the
correct and error classes, synthetic data of the minority class were generated with
the SMOTE algorithm (Chawla et al., 2002). In line with the use of such an algorithm, the misclassification costs for the correct and error classes were respectively
set to 0.4 and 0.6. The classifier was trained separately for each subject and type of
stimulus. Classification performance was assessed using a 10-fold cross-validation
procedure, and it is expressed by means of the correct identification ratios of correct
and error classes, while the area under the ROC curves (AUC) was adopted as a single parameter expressing the overall classification accuracy. Early analysis proved
that the random nature of both the SMOTE algorithm and partitioning of training
and testing sets had a meaningful effect on the observed results. In order to reduce
uncertainty, 100 hundred repetitions of the above procedure have been performed,
and average classification results are shown and discussed in the following.

52

Chapter 5. The Effect of Tactile Feedback on ErrP Single-Trial Detection
Discordant

Concordant

1

Correct, V

Erroneous, V

Correct, VT

Erroneous, VT

Classification rates

0.9
0.8
0.7
0.6

n
M
ea

1

0

S1

6

S1

5

S0

2

S0

1

S0

S0

4
S0
7
S0
8
S0
9
S1
2

S0

S0

3

0.5

Concordant

Discordant

V VT V VT V VT V VT V VT V VT

V VT V VT V VT V VT V VT V VT

1
0.9

AUC

0.8
0.7
0.6

1
S1

0
S1

6

5

S0

2

S0

1

S0

S0

2

9

S1

8

S0

7

S0

S0

4
S0

S0

3

0.5

F IGURE 5.3: Classification results: (a) Classification rates for correct and erroneous classes, for all subjects during visual (V) and visuo-tactile (VT) stimuli sessions. Last group of bars represent mean classification rates across
all subjects. Error bars represent standard deviations obtained from different repetitions of the classification algorithm (S01 to S12) or across subjects
(mean group). (b) Box plots of observed AUC distributions for each subject,
referring to visual only (V) and visuo-tactile stimuli (VT) conditions. Red
(blue) box plots represent data obtained on subjects that underwent concordant (discordant) VT stimuli. Dashed lines in both panels represent average
chance level classification rates or AUCs plus or minus one standard deviation. Chance level results were obtained by training the classifier on actual
datasets with randomly shuffled labels.

5.3
5.3.1

Results and Discussion
Error related potentials

Figure 5.2 shows the grand averages of time features for one channel, FCz, under the
three tested conditions (V, concordant VT and discordant VT) and for both classes
(correct, C, and erroneous, E, cursor movement, respectively blue and red thin lines),
as well as their difference (thick green line, erroneous minus correct). It is worth noting here that the left graph is obtained by averaging recorded data from 12 subjects,

5.3. Results and Discussion

53

TABLE 5.1: Classification performance for concordant stimuli

Subj.
S03
S04
S07
S08
S09
S12
M±SD

C[%]
88±1
56±1
84±1
59±1
69±1
65±1
70±12

V
E[%]
79±1
57±2
75±1
69±2
66±2
62±2
68±8

AUC[%]
91±1
60±1
88±1
70±1
75±1
68±1
75±11

C[%]
85±1
71±1
90±1
58±1
79±1
60±1
74±12

VT
E[%]
74±2
70±2
80±1
67±2
79±2
63±3
72±7

AUC[%]
88±1
77±1
93±1
66±1
87±1
66±1
79±11

TABLE 5.2: Classification performance for discordant stimuli

Subj.
S01
S02
S05
S06
S10
S11
M±SD

C[%]
75±1
79±1
81±1
54±1
69±1
64±1
71±9

V
E[%]
65±2
71±2
74±2
65±3
67±2
71±2
69±4

AUC[%]
76±1
83±1
86±1
62±1
73±1
73±1
76±7

C[%]
81±1
89±1
81±1
57±1
82±1
61±1
75±12

VT
E[%]
72±2
82±1
72±2
61±2
72±1
68±2
71±6

AUC[%]
85±1
93±1
84±1
65±1
84±1
70±1
80±10

whereas the middle and right column include data from 6 subjects each. The difference between classes present a similar pattern in all considered cases, and coherent
in the shape to what expected from the literature: a first negative peak centered
around 260 after stimulus onset, and a positive one centered around 330 ms. A second deep negative peak at 440 ms after stimulus, followed by a wider positive one
between 500 ms and 750 ms are also visible for all conditions, and match the shape of
the interaction ErrP described in Ferrez et al., 2008b. A slight difference is in that we
observe a more evident last positive peak, as reported in Iturrate et al., 2010b, during
observation of robot operation. Differently from what documented in Chavarriaga
et al., 2012, where the ErrP (E-C) signal presented a shift of the first positive peak
from 300 ms in case of visual feedback, to 400 ms in case of tactile feedback, we
did not observe differences in latencies of V or VT ErrPs. Nonetheless, both C and
E trials signals show larger amplitude peaks for VT conditions, and the first small
positive peak of E trials is delayed in presence of tactile stimulus.

5.3.2

Classification

For the considered tasks, namely error monitoring during either V or VT stimuli,
we found that classification results computed on both time and frequency features
sets did not change noticeably compared to those achieved using time features only.
Therefore, only results obtained by analysis in the time domain are reported. Figure 5.3 reports bar plots of the classification rates (panel a) for all subjects, classes
(C and E) and tested conditions (with and without tactile stimulation), as well as

54

Chapter 5. The Effect of Tactile Feedback on ErrP Single-Trial Detection

1

V

1

Concordant VT

1

0.8

0.8

0.8

0.6

0.6

0.6

0.4

0.4

0.4

0.2

0.2

0.2

0
0

0.5

1

0
0

0.5

1

0
0

Discordant VT

0.5

1

F IGURE 5.4: Average ROC curves. Left graph reports curve obtained for trials during visual-only condition (V), middle and right graphs display ROC
curves for data acquired during experiments with visuo-tactile stimuli (respectively, concordant VT and discordant VT). Red (blue) plots represent data
obtained on subjects that underwent concordant (discordant) VT stimuli.

the corresponding AUCs distributions (panel b). Obtained results are, furthermore,
summarized in Tables 5.1 and 5.2. Specifically, table I lists the accuracy computed
for each class (C and E), and the corresponding AUC value, for the subjects that underwent concordant stimuli condition, during both V and VT experiments. Table II
shows the same values obtained for discordant stimuli. Classification performance
varies greatly among subjects, ranging from very accurate (90% and 82% respectively for C and E classes, in the best case) to barely above or chance level (54% and
57% in the worst case). The overall classification performance, expressed in terms
of AUC, is on average between 75% and 76% for V conditions, and increases to 79%
and 80% for concordant and discordant VT conditions respectively, with a standard
deviation ranging from 7 to 11 percentage points.
To check the correlation between classification performances on the V and VT
sessions of the same user, the R-squared of the linear model linking results (in terms
of AUC) was computed. It resulted in a value of 0.55, suggesting that, while introduction of tactile stimulation can significantly change classification results, classification accuracy is subject- or montage-dependent, rather than a random fluctuation
(i.e. subjects obtaining good results during V condition, tended to do the same in
the VT condition).
The inter-subject variability of results is also evident from the ROC curves, shown
in Figure 5.4, and corresponding AUC values reported in Figure 5.5. Independently
from the VT stimuli condition (concordant or discordant), the addition of tactile
stimuli either leaves the performance mostly unchanged or it strongly improves
classification performance. In particular, for the majority of subjects the classification performance increases several percentage points from V to VT condition, while
for three subjects in the group of concordant stimuli and two subject in the group of
discordant stimuli there is a slight decrease of classification accuracy.
The box plot depicted in Figure 5.5 illustrates the range of changes in classification performance (expressed in terms of AUC percentage points) following the addition of tactile stimulus to the visual one, and their statistical significance. The left
box reports changes in AUC values for users subjected to the concordant tactile stimulation protocol, the middle one describes performance for discordant tactile stimulation, while the right column reports changes in AUC values for all VT conditions
combined. Both tactile stimulation paradigms facilitate classification: discordant VT
feedback causes an average increase of 4.6 points in AUC, while concordant stimulation changes mean AUC by ∼4%. One-sample t-tests confirmed results pointing
towards a significant effect (mean greater than 0 at 5% significance level) for the first

5.4. Conclusions

55

Change in AUC value

25
p = 0.587

20
15
10
5
0
−5

−10

p = 0.164

p = 0.064

p = 0.034*

Concordant VT

Discordant VT

All VT

F IGURE 5.5: Distributions of changes in classification performance (AUC)
with the addition of tactile stimulus, for concordant VT (left box), discordant
VT (middle box) and combined sets (right box). Red line indicates median,
blue box extends to first and third quartiles, whiskers reach most extreme
data outside of box. Reported p-values are resulting from one-sided t-tests (*
indicating significance at 5% significance level).

case (p=0.064) and with less evidence for the second (p=0.164). The difference in
classification improvement, however, is not significant among the two tested conditions (p=0.688 from one-sided t-test on the hypothesis that AUC change from V
to VT is greater for discordant than concordant stimuli condition). This can also be
empirically observed in the EEG ErrP waveforms depicted in Figure 5.2: the amplitude of the peaks in the difference between correct and erroneous classes increases
following the addition of tactile stimulus, but both curves for VT paradigms present
very similar profiles. Considering all visuo-tactile sessions together, the mean AUC
change compared to V condition results in a significant positive increase of 4.2 points
(p=0.034).
Overall, these statistical results suggest that tactile stimulation can be helpful in
increasing ErrPs classification accuracy. The described method of single-trial ErrP
classification proved generally efficient, and the conducted experiments hint at the
fact that providing mismatching sensory stimulation might be more effective than
the simple involvement of an additional sensory pathway. However the number
of subjects tested, given the high inter-subject variability observed, was too low
to draw definitive conclusions. In fact, while top results (E and C classification
rates∼80) matched literature gold standards (Chavarriaga et al., 2014), recordings
on several trials yielded classification results scarcely above chance level. A possible cause for such discrepancies is the low involvement level of the subject during
the experiment. This will be the focus point of the follow-up of this work, in which
similar experiments, i.e. monitoring of an autonomous agent’s correct or erroneous
behavior, will be performed using a video game-like or real scenario.

5.4

Conclusions

Recent studies reported promising results on the feasibility of detecting single-trial
erroneous responses during human-computer interaction, and the inclusion of ErrP
detection was proven to lead to significant improvements in the performance of BCI
systems. In particular, a new kind of error-related potential was found, called interaction ErrP, arising when the interface misinterprets the subject’s intention. A still

56

Chapter 5. The Effect of Tactile Feedback on ErrP Single-Trial Detection

open issue is how to increase the recognition rate of single-trial erroneous and correct responses, and specifically which kind of feedback, whether visual, auditory,
somatosensory, or a mix of them, can elicit the strongest interaction ErrP.
Our study aimed at investigating this problem, looking for the effect of a combined visual and tactile stimulation on single-trial detection of interaction ErrP. Furthermore, we explored the effect on ErrP of both concordant and discordant presentation of stimuli from the two sensory channels. The first hypothesis, i.e. whether
adding tactile to visual stimuli enhances ErrP detection, was confirmed, as the addition of a tactile stimulus significantly increased ErrP classification performance.
The second hypothesis, i.e. whether a mismatch between the two feedback channels
can elicit a stronger ErrP, was only partly supported by our study: the discordant
VT condition indeed produced improvements in classification performance over V
condition, but not significantly differing from the ones caused by the concordant VT
condition.
In conclusion, the study presented in this chapter supports the idea that exploiting more sensory channels is a promising way to improve ErrP detection in real
time BCI applications. This is in line with the research effort towards the inclusion
of patients emotional and cognitive states into adaptive assistive interfaces, able to
dynamically and automatically adjust their behavior to optimize performance and
reliability, for out of the lab BCI technologies.

57

Chapter 6

EEG-based Reward Signal for
Robot Learning
This chapter presents an implementation of ErrP detection to allow for error-driven
learning of a semi-autonomous system. This concept forms the basis for an online
robot-learning task, where a user’s evaluation of the actions performed by a robot, in
terms of detected ErrP, is exploited to update a reward function in a Reinforcement
Learning (RL) framework. The presented results support the potential of humanrobot co-adaptive and co-operative strategies to develop human-centered assistive
technologies.
This work has been accepted as : Schiatti, L., Tessadori, J., Deshpande, N., Barresi, G., &
Mattos, L. S. (2017, September). Human in the Loop of Robot Learning: EEG-based Reward
Signal for Target Identification and Reaching Task. In Robotics and automation (ICRA),
2018 International Conference on. IEEE.

6.1

Introduction

In the context of assistive technologies for severely motor-impaired people, the development of Brain-Computer-Interfaces (BCIs) and neuro-prostheses offer new channels for communication and control of external devices (Wolpaw et al., 2002), bypassing the traditional muscular control and inferring user intentions directly from
the ongoing brain activity. The brain signals are typically recorded by means of
non-invasive techniques such as electroencephalography (EEG). However, a continuous delivery of mental commands for a brain-actuated device is highly demanding
in terms of cognitive attention and effort. Moreover, the identification of user intention, especially when based on non-invasive recording techniques, is prone to
errors, and allows for a very restricted number of discriminable states, and consequently, degrees of control. A viable solution to these issues was offered by the
concepts of shared autonomy and shared control (Tonin et al., 2010). The continuous advances in autonomous robotics made possible applications such as semiautonomous wheelchairs, prosthesis, or robots for telepresence (Vanhooydonck et
al., 2003,Kim et al., 2006,Millan et al., 2004), allowing patients constrained from severe paralysis to join their relatives and friends in their activities, or to restore some
degree of independence in their self-care. Studies involving disabled patients reported their preference for a semi-autonomous rather than fully autonomous approach, in which the intelligent system helps the human to cope with problematic
low-level aspects of planning, while the person keeps as much control as possible
on decision-making (Tahboub, 2001).
Following this idea, a novel classic approach for BCI-based interaction between
human and an assistive system has been investigated during the last two decades.

58

Chapter 6. EEG-based Reward Signal for Robot Learning

Feedback

Psychophysiological
signals

Control
signal
Smart assistive
device learning

Intelligent
controller

Error signal
detection

Decoder

F IGURE 6.1: System components and information flow in ErrP-based robot
learning scheme. Adapted from Iturrate et al., 2015.

This is based on the detection of electrophysiological correlations of error recognition in human brain, the so-called error-related EEG potentials (ErrPs). In this
approach, systematized by Chavarriaga et al., 2010 and shown in Fig.6.1, the user
monitors the performance of an autonomous system, acting like a critic instead of
continuously generating control commands, and the user’s spontaneous perception
of an erroneous action is used to optimize the system behavior. This concept is built
on the ability of recognizing ErrPs on a single-trial basis. ErrPs are electrophysiological responses arising in the fronto-central area of the cortex, and have been observed
in response to awareness of erroneous actions made by the user (Falkenstein et al.,
2000), observation of erroneous actions performed by an interface (Ferrez et al., 2005)
or an external system, such as a robot (Iturrate et al., 2010b), when interpreting the
user’s intention. At the level of recorded EEG signal, ErrP response is typically characterized by a uniform sequence of evoked response potential (ERP) components,
i.e. positive and negative peaks at fixed time delays from the stimulus onset. The
ErrP typical waveform is derived by computing the average difference between erroneous and correct trials, and is characterized by an initial positive peak at about
200 ms after feedback presentation, followed by a larger negative deflection at about
250 ms and a third larger positive peak at about 320 ms (Chavarriaga et al., 2014).
ErrP single-trial detection has been implemented online in BCI applications for
erroneous action correction, e.g. in P300-based speller (Margaux et al., 2012), for
robot movements (Ehrlich et al., 2016, Salazar-Gomez et al., 2017), with reported
classification accuracies between 70 and 80%. Some studies explored the use of ErrP
signals for error-driven learning, e.g. for online re-training of a 2-class motor imagery classifier (Llera et al., 2012), or, as is the focus of the present work, to improve
the behavior of a semi-autonomous system. A first implementation of this concept,
with ErrP used as negative reward value in a RL scheme, was presented by Chavarriaga et al., 2010, in a mono-dimensional control task. An online evaluation of the
same approach on two subjects monitoring a simulated robot was demonstrated by
Iturrate et al., 2010a. In Iturrate et al., 2015 a study on ErrP implementation for robot
RL of optimal policy for target reaching in a 2-D discrete space was carried out. The
study, conducted with 12 subjects, reported algorithm convergence towards optimal
behavior, even for targets unseen during training, with a 74.3% ErrP online classification accuracy. In Iturrate et al., 2013, a possible integration with shared control

6.2. Methods

59

F IGURE 6.2: Graphical User Interface (GUI) for teleoperation during: training
(left), and testing phase (right).

technique was shown, in a 2-D cursor-reaching task. Here ErrP was used to indirectly infer user-intended target location, selecting the corresponding control policy
from a pre-defined repertoire.
The rationale behind these works lies in the fact that ErrP detection offers a natural framework for improving the performance of an artificial intelligence system in
an RL scheme. Error identification through user monitoring can be exploited by the
RL agent to learn an optimal behavior, by reducing the likelihood of repeating the
same decision in the same context. This concept was originally presented by Iturrate
et al., 2015, and it is adopted for the present work, as shown in Fig. 6.1.
In this work, we aim take the above mentioned works forward, by exploiting
the concept of the EEG-based reward for robot RL, to implement a simultaneous
learning of: 1) the optimal policy for reaching a target, and 2) the identification of
user-intended target location, among a pre-defined set, and corresponding policy
selection. Our main contribution is to provide a framework for simultaneous learning of the two problems mentioned above, and to test this framework in an online
setting encompassing physical robot movements. We tested the proposed learning
algorithm in a study involving 8 subjects, and the task consisted of tele-observation
of the movements of a robotic manipulator towards a target, in a 2-D discrete space.
Since ErrP detection accuracy above chance level (50-50) is a key aspect for RL algorithm convergence, we also tested two different feedback conditions (visual and
visuo-tactile), aimed at improving ErrP online classification rate.

6.2
6.2.1

Methods
Experimental Protocol

Eight subjects (6 males, 2 females, aged 27.6 ± 1.7) participated in this study. Total
duration of the experiment was about one hour, including half an hour of training
and half an hour of testing, with pauses every 5 minutes. Before the experiment, all
subjects agreed with experiment guidelines, and signed an informed consent document1 .
Training
A training phase was developed in order to collect EEG signals to train the ErrP
classifier. During training, the subject was asked to observe, by means of a graphical
1 IIT

2016.

ADVR TEEP01 protocol, approved by the Ethical Committee of Liguria Region on June 14th,

60

Chapter 6. EEG-based Reward Signal for Robot Learning

user interface (GUI) shown on a PC screen, a robotic arm moving towards a target.
the arm motion was programmed, with sporadic direction errors, 25% of the time.
The GUI included a discrete mono-dimensional grid, superimposed on the robot
scene, with 7 positions. These corresponded to the positions that the robot could
assume, as shown in Figure 6.2, left. The target position would be selected to be
either of the two extreme positions on this 7-position 1-D grid, and highlighted in
green color on the GUI.
The training session was composed of 600 trials, and each trial consisted of a single robot movement, i.e. movement between two adjacent positions. Time between
two consecutive movements was set as 2.5 s. The sequence of robot’s moves from
the starting position, i.e. the middle of the 1-D grid, to the target (the length of which
was varying according to the number of erroneous movements), was defined as an
iteration. At the end of each iteration, the robot position was reset to starting point,
and a new target was randomly selected.
Since during the testing phase the robot was allowed to move in a 2-D space,
the training was divided in four sub-sessions, alternately showing horizontal and
vertical 1-D grid orientation. This was done to let the training data include all
four movement directions (left-right-up-down), and make the ErrP classifier scalable from training to testing data.
Testing
During the testing phase, the subject was again instructed to evaluate erroneous
robot movements towards a target, but in this case ErrP was detected online using
the classifier trained on training data.
During testing, the robot was allowed to move in a 2-D diamond grid with 25
positions, as visible in Fig. 6.2. The grid had two possible target positions, at either extreme vertical or horizontal positions that were alternated between subjects.
Testing encompassed 600 trials, i.e. robot steps. The movements of the robot were
dictated by the output of the RL algorithm, explained in detail in section 6.2.3. The
RL algorithm took into account the result of the online ErrP classification. Therefore, contrary to the training session, in the testing phase the subject’s brain activity
directly influenced robot movement behavior.
Specifically, during the first 500 trials, the learning algorithm collected the subject’s evaluations on erroneous movements to generate optimal step sequences toward each target (route learning), whereas in the last 100 trials, ErrP detection was
used together with the information obtained in the route-learning phase, to identify
which target was currently selected and to command the robot to move towards it.
It is worth noting that the transition from the route-learning to the target-learning
phase occurred without the knowledge of the subject.
Feedback condition
Each subject was tested in one of two feedback conditions: (i) the visual (V) condition or (ii) the visuo-tactile (VT) condition. In the V condition, a red cursor was
superimposed on the robot position within the GUI. The cursor served the purpose
of slightly anticipating the movement of the robot, i.e., the cursor instantly moved to
the next commanded position when the robot movement command was issued. This
feedback was introduced to improve the accuracy and generalization capabilities of
ErrP classifier, since ErrP is a time-locked potential.

6.2. Methods

61

Subjects undergoing the VT feedback condition, were asked to wear vibrating
bands on their wrists and ankles, and received 1-s vibrations on right wrist, left
wrist, both wrists, and both ankles for movements towards right, left, up, and down
direction respectively. The vibration command was delivered simultaneously with
the motion of the red cursor, when the robot movement command was issued, therefore again slightly anticipating the robot motion itself.

6.2.2

Experimental Setup

The experimental setup (Fig. 6.1) included: (i) a robotic arm (UR5, Universal Robots),
(ii) a HD camera (Prosilica GT1910 GigE Vision – 1080p, Allied Vision) for robot
real-time video streaming and recording, (iii) a teleoperation GUI showing the robot
movements on a PC screen, through a real-time Ethernet connection to the camera,
and (iv) the EEG acquisition system. Two independent PCs were used in the setup,
the GUI PC (control-side PC) and a robot-side PC.
During the experimental session, the EEG signals from the user’s brain activity
were recorded using a headset, which included 16 active g.LADYbird (g.tec) gel
electrodes located at scalp positions Fz, FC3, FC1, FCz, FC2, FC4, C3, C1, Cz, C2,
C4, CP3, CP1, CPz, CP2, and CP4 according to the standard 10/20 international
system. The electrodes were connected to a g.USBamp biosignal amplifier. Ground
and reference electrodes were respectively placed on the forehead (AFz) and left
ear lobe. Hardware filters were set to perform a bandpass between 0.1 and 30 Hz.
Signals were sampled at 256 Hz.
The robotic arm was the commercially available 6 degrees-of-freedom (DOFs)
Universal Robot 5 (UR5) manipulator. The end-effector of the arm was modified
so as to be seen as a single point easily distinguishable against the background in
the GUI. The teleoperation GUI, EEG online processing, and the learning algorithm
were implemented in MATLAB, while data acquisition was implemented through
a Simulink model that handled the g.USBamp amplifier. The robot-side PC implemented the robot position controller, by means of a custom C++ script, and the motion commands from the control-side PC were received using simple UDP communications over a direct LAN connection.
A set of four custom-made silicone rubber (ACC Silicone M230) cuffs with embedded vibration motors (Precision Microdrives 304-116) was cast in order to provide tactile stimuli in the VT feedback condition, consisting of one second vibrations.
The vibrations were synchronized with each robot movement, and commanded
through serial communication over a direct USB connection with the control-side
PC.

6.2.3

Algorithms

EEG Analysis
Pre-processing and features extraction
Following the state-of-the art for signal processing related to ErrP detection, EEG
data were spatially filtered by common-average re-referencing (CAR), and then bandpass filtered between 1 and 10 Hz with a 4th order Butterworth filter, since EEG error
correlates are known to be slow potentials. Time windows, 800 ms in length within
each trial, were considered for subsequent analysis. Both time and frequency features were computed. Frequency analysis was performed by multiplying relevant
signal intervals in time with a Blackman window, followed by computation of Fast

62

Chapter 6. EEG-based Reward Signal for Robot Learning

Algorithm 1 Route Learning Strategy
1: s0 ← sstart
2: for i = 1 to Ntrials do
3:
if si 6= s f inal then
4:
Choose ai from Q( a, si ) Q (e-greedy)
5:
Take action ai
6:
if ErrP = true then
. Error is detected
7:
ri+1 (si , si+1 ) ← ri (si , si+1 ) ∗ 0.9 − 1 . Update reward for last transition
(converging to -10)
8:
9:
10:
11:
12:
13:

Update Q(si , ai ) according to Eq.(6.2)
r i ← r i +1
s i ← s i +1
else
r (si , si+1 ) ← 100
si ← sstart

. Target is reached
. Set environmental reward
. Start a new iteration

Fourier Transform. Frequency features were then selected as non-overlapping 2 Hzwide spectrum bands between 2 and 10 Hz.
Time features were obtained by sub-sampling signal in epoched time windows
by a factor of 4, for a final sampling frequency of 64 Hz. This procedure resulted in
45 time features and 8 frequency features for each channel.
Offline classifier training
A linear support vector machine (SVM) was used to classify training trials, without
prior feature selection. The unbalance in correct (C) and error (E) classes occurrence
was compensated by random downsampling of the majority (C) class. Possible and
unknown effects on the ErrP latency were considered, reflecting variations in user’s
perception possibly caused by the different V and VT feedback conditions, as well
as originated by the physical delay in the robot movements execution.
To take this latter effect into account, feature sets were extracted as explained in
the previous paragraph, considering time windows with different delays. Specifically, 10 possible delays ranging from 0 to 1 s after robot movement onset, in 100
ms steps, were considered for time windows epoching. Thus, relevant features were
obtained in windows ranging from 0-800 ms to 1000-1800 ms after robot movement
onset. A different SVM classifier was trained on the feature set corresponding to
each considered time window. A 10-fold cross-validation was used to compute the
classification performance, in terms of area under the ROC curve (AUC).
Online classification
For each subject, the time window (and therefore the time delay) that lead to the
higher classification accuracy in the offline analysis was selected. A linear SVM was
trained on all available training data (without performing cross-validation), on the
optimal time window. During online classification, this classifier was applied to the
features extracted on ongoing EEG data, in the time window selected according to
the chosen optimal delay. The output of such classification was sent to the learning
algorithm, in terms of a label ∈ [0,1] indicating whether the last movement (EEG
trial) belonged to correct (0) or error (1) class.

6.2. Methods

63

Robot Learning
In order to implement the robot learning, a reinforcement learning framework was
chosen.
In an RL framework, an agent learns through interaction with environment,
based on a reward signal (r), which recompenses or penalizes its actions. The analytical framework of an RL problem is a Markov Decision Process defined by the
tuple {S, A, P, r, γ}, where S is the state-space (in the reaching problem described
here, it corresponds to the set of all discrete positions that the robot can assume), A
is the action-space (in this case movements in four directions), and P : S × A → S are
the transitions probabilities from one state to the next one, when executing a particular action a. The function r : S × A → R defines the reward obtained by the agent
when executing an action a at state s, and γ ∈ [0, ..1] is a discount factor on the total
accumulated reward. The goal of RL is to find a policy π : S → A to map each state
to the action that maximizes the accumulated reward Ri = ∑in=0 γt ri+1 .
For discrete tasks, as the one considered here, the standard Q-Learning algorithm
is the most suitable to compute the optimal policy Sutton et al., 1998. The so-called
Q-function is used to compute the state-action map:
Q∗ (s, a) = r (s, a) + γ

P(s, a, s0 )max a0 ∈ A Q∗ (s0 , a0 )
∑
0

(6.1)

s ∈S

In Q-learning, the optimal Q∗ function is estimated iteratively from empirical data.
At each time step, the agent in state si executes an action ai , that produces the agent
being in a new state si+1 . To this transition, corresponds a reward ri+1 (si , ai ). The
Q-function is updated according to:
Qi+1 (si , ai ) = (1 − αi ) Qi (si , ai ) + αi [ri+1 (si , ai ) + γmax a0 ∈ A Qi (si+1 , a0 )]

(6.2)

where Qi is the current estimate, at step i, of the Q-function, α is the learning rate,
and γ is a coefficient ∈ [0, 1], accounting for the importance of long-term rewards.
During learning, it is necessary to choose a policy a, i.e. which action to perform,
from a particular state s. In this work, an e-greedy policy was adopted: the best
action, obtained from the current policy (current Q-map values), is chosen (100-e)%
of the times, while an exploration strategy (random action) is selected e% of times.
When agent behavior approaches the desired one, e is set to zero.
The Q-learning algorithm was used to implement both route learning, i.e. learning the optimal sequence of steps to reach each one among two available target positions, and target learning, i.e. once the routes towards the targets were sufficiently
learned, the robot was allowed to choose which one of the two learned routes to
follow, so as to match the will of the human observer. The learning strategies for the
two tasks are explained in detail below.
Route Learning
The route learning strategy consisted in a slightly modified version of the basic Qlearning algorithm, and it is reported in Algorithm 1. For the discrete space of 25
positions considered for the task, the state-action Q-function consisted of a sparse
25x25 matrix representing the transition probabilities from each one of the possible
25 states to the sub set of 1 to 4 linked (reachable) states. The reward function r represented a 25x25 matrix of reward values assigned to each transition. Both matrices
were initialized to zeros, and the initial state set to the central position of the grid,
three steps away from each possible target.

64

Chapter 6. EEG-based Reward Signal for Robot Learning

Algorithm 2 Target Learning Strategy
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:

Initialise Qtarget (st , at ) as zeros matrix
Initialise rtarget (st , at ) as zeros matrix
Randomly choose initial guessed target st j , j ∈ 1, ..nTargets
for step ∈ { TargetLearningtrials} do
if si 6= s f inal then
Select route Q matrix corresponding to current guessed target, Q[st j ]
Choose ai from Q( a, si ) Q[st j ] derived from Q[st j ] (e-greedy)
Take action ai
if ErrP = true then
. Error is detected
rtarget j+1 (:, st j ) = rtarget j (:, st j ) − [ Q[st j ](si , si+1 ) − mean( Q[st j ](si , {sk :
k 6= i }))]
. Penalize actions bringing to current guessed target
for w ∈ {1, .., j − 1, j + 1, ..nTargets} do
=
rtarget j (:, stw ) + Q[stw ](si , si+1 ) −
rtarget j+1 (:, stw )
mean( Q[stw ](si , {sk : k 6= i }))
. Reward actions bringing to different guessed
target

13:
14:

tion)
target

Update Qtarget (stk1 , atk2 ) using Eq.(6.2), for k1, k2 = 1..nTargets
Choose at j from Q( at , st j ) derived from Qtarget (i.e always optimal ac. Compute new guessed

Take action at j
16:
if st j+1 =st j then
. Guessed target does not change
17:
Update route reward and state-action matrices corresponding to
current guessed target r [st j ], Q[st j ], as in lines 6:10 of Algorithm 1
15:

rtarget j ← rtarget j+1
s t j ← s t j +1
20:
else
. Target is reached
21:
Execute lines 12:13 of Algorithm 1
22:
Execute lines 1:3 of Algorithm 2 . Reset target learning data and start a
new iteration

18:
19:

One iteration consisted of the sequence of robot steps from the starting position
to the target. Both targets were alternately presented during subsequent iterations,
until 250 trials (robot steps) were performed towards each target. At each robot
step, the Q-matrix was updated using (6.2). The output of the online ErrP classifier provided information about user detection of an error in the last observed robot
step, and was used to update the corresponding transition value in the reward matrix r, according to line 7 in algorithm 1, with the effect of discouraging that action.
This allowed the implementation of a short-term negative reward. The r matrix was
also updated with a positive value when the target was reached, thus allowing the
forward term, multiplied by γ in (6.2), to start propagating information on the longterm environmental reward.
In this phase of the task, two Q matrices were learned, one for each target, and
information on the current target was provided in a supervised way, by sending to
the learning algorithm the true label for the current target. Learning rate was fixed
to 0.7, while e was initially set to zero (first iteration), to allow a faster learning of a
possible route to the target, exploiting information provided by EEG ErrPs. After the
fisrst iteration it was increased to 0.4 to allow exploration of a route map robust to
ErrPs misclassification, and for fast route correction in case of sub-optimal learned

6.3. Simulation Study

65

route. When the best (3 steps-wide) route was learned, e was set to 0.2, and then
to 0 during target learning. Similarly, γ was initially set to 0.5 to avoid the strong
learning of a non-optimal route, and then increased to 0.9 when the best route was
found, in order to rapidly consolidate optimal information.
Target Learning
Once 500 route-learning trials were completed, target learning was activated during
the last 100 trials. In this phase, the robot had to learn which one of the two available
maps to choose, in order to reach the current target.
To achieve this result, the information on ErrP detection after each step was used,
together with information provided by the learned Q-maps. As explained in algorithm 2, the target learning was restarted at each iteration: target learning, differently
from route learning, should desirably be fast, without the possibility of exploiting
accumulated information. For this reason, the relevant γ value was set to zero.
Similarly to the route learning case, a Q and r matrix were defined: Q was a 2x2
fully linked matrix with possible actions corresponding to conserving the guessed
target or switching to the other one. The strategy used to make such a decision was
based on the q-values accumulated in the Q matrices corresponding to the routes
towards the two targets. Specifically, as explained in lines 9-10 of algorithm 2, after
a robot step, if an error was detected, a negative reward was assigned to all actions
keeping the same guessed target. This corresponded to the q-value for that transition
in the route Q matrix of the current guessed target, discounted by the mean of qvalues of all other possible transitions from that step’s initial state. At the same time,
a positive reward was assigned to all actions leading to changing the guessed target,
proportional to the q-value for the same transition in the route Q matrix of the other
target.
After reward updating, the target Q matrix was also updated using Eq. (6.2),
with α = 0.7, and the optimal action was always chosen (e = 0). If the selected
action did not bring about a change in the current guessed target, ErrP detection
was used to continue the corresponding route learning, according to algorithm 1.
It is worth noting that the learning strategy was based only on the error class
detection, while no update was allowed for route or target reward functions based
on the correct class detection. This choice was intended to reduce the weight of false
negatives (erroneous trials classified as correct) on the degradation of the learning
algorithm performance, since low classification accuracy is a known issue in ErrP
detection, especially in real-time systems.

6.3

Simulation Study

Before practical implementation, the route and target learning algorithms described
in Section 6.2.3 were tested in a simulation study, comparing their performance for
different simulated levels of ErrP detection accuracy. Results for route learning and
target learning are reported in Fig. 6.3 and 6.4, respectively.
For route learning, the number of steps taken from the starting position to the
target, and the length (number of states crossed) of current best route, against number of iterations are reported in Fig. 6.3 left and right panel respectively, as average
values and standard deviations over 50 simulations. Results are compared for ErrP
detection accuracy=[100%; 80%; 60%], and for simple Q-learning (without using ErrP
detection information for step-by-step reward updating). With 100% ErrP detection

Chapter 6. EEG-based Reward Signal for Robot Learning
200

no Err
Err acc 60%
Err acc 80%
Err acc 100%

100
0
-100

0

20

40

best route length

n° steps to target

66

60

5.5
no Err
Err acc 60%
Err acc 80%
Err acc 100%

5
4.5
4
3.5

0

20

n° iteration

40

60

n° iteration

Err acc 60%
Err acc 80%
Err acc 100%

20

0

0

5

10

n° iteration

15

% correct steps

n° steps to target

F IGURE 6.3: Simulation results for route learning.
40

100
80
Err acc 60%
Err acc 80%
Err acc 100%

60
40

0

5

10

15

n° iteration

F IGURE 6.4: Simulation results for target learning.

accuracy, the inclusion of the negative step-by-step rewards reduces the number of
steps required during the first iteration from 80 to 20, and considerably reduces the
variability among task repetitions. Also, ErrP detection inclusion in Q-learning reduces the length of non-optimal learned routes during early iterations, though it
does not fasten the route correction as compared to basic Q-learning. These results
are consistent also when a mis-classification rate in ErrP detection is simulated, even
if with a progressive decrease of performance. For 80% of ErrP detection accuracy,
which corresponds to the state-of-the-art standard for ErrP detection in simulated
tasks, the algorithm performance is very close to the 100% accuracy case. Even for
lower accuracy in ErrP detection, the algorithm allows for a more efficient performance than a simple Q-learning algorithm.
For target learning, the number of steps taken from the starting position to the
target, and the percentage of steps with correctly guessed target during each iteration, are shown in Fig. 6.4. In this case, simple Q-learning cannot be implemented,
and in fact, one of the contributions of the proposed use of ErrP is the possibility of
having an additional degree of freedom in the learning. Even in this case, an increase
in ErrP classification accuracy reduces the number of moves necessary to reach the
target, and increases the correct steps percentage, i.e., steps with correctly guessed
target.
It is worth noting that for the considered task, the optimum value, in terms of
number of steps to reach the target, is indifferently 3 or 5 steps, corresponding to
80% to 100% correct steps, respectively when the robot correctly guesses the target
at the first step, and never receives an error signal, or when it initially guesses the
wrong target, and it needs the first erroneous step to correct the identified target. For
80% accuracy, the mean number of steps to reach the target is 7, corresponding to 2
erroneous steps necessary to correct the target guess. For lower accuracies (50% and
60%), the correct steps % decreases to 60-70%, and the number of steps to the target
increases to 15-25 on average, respectively.

6.4. Results and Discussion

0.5
0
−0.5
−1
−1.5

1
0.5
0
−0.5
−1
−1.5

0.5

1

1.5

2

0

0.3

0.5

1

1.5

−1

0

0.5

0.1
6

0
−0.1

4

0.3

2

1.5

2

0.3

10

0.2
8
0.1
6

0
−0.1

4

−0.2

Time [s]

1

Time [s]

10

Frequency [Hz]

Frequency [Hz]

8

1.5

0
−0.5

2

0.2

1

0.5

Time [s]

10

0.5

1

−1.5

Time [s]

2
0

V
VT

1.5

0.2

Frequency [Hz]

0

C
E
E−C

1.5

Amplitude [µV]

Amplitude [µV]

1

Amplitude [µV]

C
E
E−C

1.5

67

8
0.1
6

0
−0.1

4

−0.2
2
0

0.5

1

Time [s]

1.5

2

−0.2
2
0

0.5

1

1.5

2

Time [s]

F IGURE 6.5: Grand average of ErrPs (E-C) across all subjects and training
trials for channel FCz. Panels (a) and (b) display average C, E, and ErrP for V
and VT conditions. Panel (c) provides a comparison V and VT ErrPs. Panels
(d-f) provide a graphical representation of ErrP in frequency domain, for V
(d), VT (e), and VT-V (f).

6.4
6.4.1

Results and Discussion
EEG Analysis

ErrP Detection
Fig. 6.5 shows the grand averages of E and C signals, together with ErrPs (E-C)
across subjects and trials for V (a) and VT (b) conditions. The difference E-C is also
reported in frequency domain for V (d) and VT (e).Right-column panels highlight
the difference between ErrPs in the two feedback modalities, both in time (c) and
frequency domain (f). Time-frequency graphs have been obtained by computing
spectral densities of 1 s long windows, shifted by 50 ms, after multiplication with
a Blackman window. Before averaging data from each subject, features have been
normalized in amplitude by their value at t = 0. Shaded areas in time graphs represent time windows during which the difference between correct and erroneous
responses is significant at a 5% level, according to t-tests (paired t-test for left and
middle columns, unpaired t-test for right one).
The difference between classes present a similar pattern for both considered feedbacks: a first significant negative peak centered around 270 ms after stimulus onset
is present for both feedback conditions as well as the largest negative peak, with
center around 650 ms after stimulus presentation. All other significant features differ between conditions, with two relevant peaks in the V condition right before and
after the 500 ms mark, while the VT condition still shows significant differences
in the time window between 700 and 1200 ms. In general, recorded responses are
very similar in shape to what was reported in literature Chavarriaga et al., 2014,
but with a significant delay (around 200 ms). This reflects what was observed in
previous works, reporting that the latency of ErrP waveform varies among different tasks, typically with increasing delay when coping with observation of physical
movements or more complex tasks Iturrate et al., 2012.
On frequency domain, the most obvious feature, clearly visible both in V (Fig.
6.5 (d)) and VT (Fig. 6.5 (e)) responses is an increase of up to 30% in the spectral

68

Chapter 6. EEG-based Reward Signal for Robot Learning
TABLE 6.1: ErrP classification results during training and testing, for subjects
with V feedback.

Subj.

Delay[s]

S04-V
S06-V
S08-V
S010-V
Mean
Sd

0.50
0.60
0.40
0.60
0.53
0.08

Training
C
E
AUC
0.82 0.74 0.85
0.59 0.61 0.62
0.65 0.60 0.68
0.67 0.71 0.75
0.68 0.67 0.73
0.08 0.06 0.09

C
0.61
0.52
0.63
0.6
0.59
0.04

Testing
E
AUC
0.64 0.68
0.49 0.52
0.51 0.59
0.59 0.62
0.56 0.60
0.06 0.06

TABLE 6.2: ErrP classification results during training and testing, for subjects
with VT feedback.

Subj.

Delay[s]

S05-VT
S07-VT
S09-VT
S011-VT
Mean
Sd

0.50
0.20
0.20
0.30
0.30
0.12

C
0.70
0.55
0.73
0.65
0.66
0.07

Training
E
AUC
0.69 0.74
0.62 0.61
0.57 0.72
0.67 0.69
0.64 0.69
0.05 0.05

C
0.63
0.51
0.62
0.58
0.59
0.05

Testing
E
AUC
0.42 0.55
0.62 0.57
0.64 0.66
0.51 0.59
0.55 0.59
0.09 0.04

density power following stimuli. The center of this increase is almost exactly matching for both tested conditions and occurs around 1.1 s after stimulus, while the peak
frequency involved is about 7 Hz. Despite the matching position in both time and
frequency, this increase is about 50% more intense in the case of VT feedback. A
marked difference in response, on the other hand, occurs earlier in time (around 0.5
s after stimulus) at a frequency of 9 Hz: while the VT feedback causes an increase
of this response component, the visual-only response results weakened compared to
baseline.
ErrP Classification
Classification results, in terms of AUC, are reported in tables 6.1 and 6.2 for V and
VT feedback condition respectively.
It is possible to note how VT feedback generally leads to more consistent responses (smaller standard deviations) and classification accuracy tends to peak earlier for VT than V(0.3 s delay against 0.53 s).
Classification accuracy obtained from training data varies significantly between
subjects, ranging from very good (highest AUC = 0.85), to discrete (lowest AUC =
0.61), with average values around 0.7 (0.73 and 0.69 for V and VT feedback). These
values drop by almost 10% during testing phase, to 0.60 and 0.59 on average for V
and VT conditions respectively. This is likely due to subjects’ attention lapses, given
the length of the experiment, and to the difference in task and errors occurrence
moving from training to testing.

69

150
VT
V

100
50
0
-50

0

10

20

30

best route length

n° steps to target

6.4. Results and Discussion

40

8

VT
V

6
4
2
0

0

10

n° iteration

20

30

40

n° iteration

V

VT

60
40
20
0

S4 S6 S8 S10

S5 S7 S9 S11

% correct steps

n° steps to target

F IGURE 6.6: Experimental results for route learning.
100

V

VT

50

0

S4 S6 S8 S10

S5 S7 S9 S11

F IGURE 6.7: Experimental results for target learning. Red line indicates median, blue box extends to first and third quartiles, whiskers reach most extreme data outside of box not considered outliers, and the outliers are plotted
individually using the ’+’ symbol.

6.4.2

Robot Learning

Results collected during online robot learning, considering separately route learning
trials (250 trials per target), and trials in which also target learning was activated
(last 100 trials), are reported in Fig. 6.6 and 6.7. Here, statistics shown are the same
reported in the simulation study, Section 6.3.
Route Learning
The average number of steps to the target, and the average length of best route
(number of crossed states) per iteration, are shown on left and right panel of Fig.
6.6 respectively. Results are shown in terms of mean across subjects and targets,
considering V and VT feedback conditions separately.
While ErrP classification accuracy, in terms of mean AUC (see Table 6.1 and 6.2),
was not varying among V (0.60) and VT (0.59) conditions, the average number of
steps and the variability across subjects results lower for VT condition than for V
(36.5 ±16.9 against 65.3 ± 54.8 ), in the first iteration, where no exploration is allowed
and only information from ErrP signal is used to update the reward and choose the
best action. These values match respectively an accuracy of around 80% and 60%
in the simulated data (see Fig. 6.3 left panel). This observation suggests that the
ErrP classification accuracy could not be uniformly distributed over all experiment
duration.
In both conditions, the number of steps converge to the minimum at around
nine iterations, as in the case of simulated 60% ErrP detection accuracy. On the other
hand, results related to best route length show the opposite trend: for the majority
of subjects in VT condition the route correction happens between the 5th and the 8th
iteration, while for V condition this is observed between 8th and 11th iteration. On

70

Chapter 6. EEG-based Reward Signal for Robot Learning

simulated data (Fig.6.3 right), it appears that an earlier route correction happens for
lower ErrP detection accuracy, since e is higher and more states are explored in the
first iterations compared to cases with high ErrP detection accuracy. In contrast with
simulated data, on experimental data route correction for VT condition happens earlier but without requiring a higher number of steps.
Target Learning
Fig. 6.7 reports boxplots for distributions of number of steps to target, and % of
correct steps across iterations, for each subject during robot target-learning, when
route exploration is set to zero.
Comparing results from V and VT feedback conditions, a much bigger subjective
variability of moves to the target is evident for the VT condition across iterations.
This is in line with the lower accuracy observed in this phase of the experiment for
ErrP detection. At the same time, the % of correct steps is on average between 60
and 80%, and more uniform across subjects undergoing VT condition compared to
those with only V feedback. Also in this case, the experimental data are coherent to
what expected from simulations, given the value of AUC expressing ErrP detection
accuracy computed on testing data.

6.5

Conclusions

This work presented the evaluation of an ErrP-based reward signal for the inclusion
of human implicit evaluation in the loop of robot learning, in order to: 1) improve a
classic reinforcement learning (Q-learning) algorithm for robot target reaching, and
2) introduce the possibility of identifying, among a predefined set of possible targets,
the one selected by the user, in a human-robot co-operative scenario.
The learning algorithm was evaluated offline simulating different levels of ErrP
detection accuracy, showing a faster convergence to optimal behavior compared to
basic Q-learning algorithm, and a correct target identification above 60% even for a
ErrP classification accuracy slightly above chance level. The system was then evaluated through online experiments, involving 8 subjects, using two different feedback
conditions superimposed on the robot movements, to give rise to the ErrP signal: visual (V) and visuo-tactile (VT) feedback. Results showed that transferring the ErrP
classifier to the online task causes a decrease in the accuracy of the ErrP single-trial
detection, when compared to training, from 70% to 60%. Even so, this value allowed for the convergence of the learning algorithm faster than classic Q-learning,
and for successful target identification with a mean 70% accuracy. These results also
pointed out some difficulties related to the real-time use of ErrP in a human-robot coadaptive interaction framework. There is a need for exploring techniques towards
improving ErrP classification accuracy as well as knowledge transfer (generalization) methods to make ErrP decoders robust to differences from the training task to
different real-time tasks.
The comparison between V and VT feedback conditions did not result in significant variation of ErrP detection accuracy for the considered task, although it did
produce some differences in the learning behavior.
Overall, these results confirm the high potential of introducing human psychophysiological signals in the learning process of an intelligent assistive agent, towards a
human-centered design of interaction between a patient and an intelligent robotic
assistive tool.

71

Part IV

Active and Passive Control Signals:
Co-adaptive Systems

73

Chapter 7

Mutual Information-based Feature
Selection for Motor Imagery
This chapter presents a feature selection algorithm based on mutual information and
conditional mutual information. This is applied to electroencephalographic data acquired during three different motor imagery tasks from two dataset: Dataset I from
BCI Competition IV including full scalp recordings from four subjects, and new data
recorded from three subjects using the popular low-cost Emotiv EPOC EEG headset
(Schiatti et al., 2016). The aim is to evaluate optimal channels and band-power features for motor imagery tasks discrimination, in order to select information discriminative to the task and stable over time. Results confirm the importance of applying user-adaptive feature selection algorithms towards the development of effective
portable low cost BCI systems based on motor imagery.
This work has been published as : Schiatti, L., Faes, L., Tessadori, J., Barresi, G., &
Mattos, L. (2016, August). Mutual information-based feature selection for low-cost BCIs
based on motor imagery. In Engineering in Medicine and Biology Society (EMBC), 2016
IEEE 38th Annual International Conference of the (pp. 2772-2775). IEEE. - The final files
for this publication are available from IEEE via:
http://dx.doi.org/ 10.1109/EMBC.2016.7591305

7.1

Introduction

A Brain-Computer Interface (BCI) extracts meaningful information from brain signals and convert it into control signals of an external device. Such system has the
potential to allow people suffering from mobility impairments to restore a nonmuscular channel for communication and control (Wolpaw et al., 2002). In this context low cost, ease of use, and portability are key factors for the development of
‘out-of-the-lab’ systems, accessible to people in their home environment and usable
in everyday life. Among existent BCI paradigms, detection of motor imagery is well
suited for the development of self-paced systems, allowing the user to perform the
control at will at any time (Blankertz et al., 2002). These paradigms are based on the
detection of event related desynchronization/ synchronization (ERD/ERS), indicating decrease/increase of signal spectral power in specific frequency bands (µ=8-13
Hz and β=13-30 Hz), during movement imagination or intent (Neuper et al., 2006).
Recently the interest towards low cost EEG systems has been growing, as attested by
an increasing number of related publications (Duvinage et al., 2013, Martinez-Leon
et al., 2016).The most popular is the Emotiv EPOC1 , a wireless EEG headset including 14 sensors positioned as shown in 7.1 under label E. Recent works explored the
1 https://emotiv.com/

74

Chapter 7. Mutual Information-based Feature Selection for Motor Imagery

AF3

AF4

F5

F6
F3

FC5

T7

C5

CP5

F1

F4

F2

Fz

FC6

FC3

FC1

FCz

FC2

FC4

C3

C1

Cz

C2

C4

CP3

CP1

CPz

CP2

CP4

P3

Pz

P1

P2

C6

T8

CP6

P4

P5

P6
PO1

O1

F

PO2

O2

C

O

E

F IGURE 7.1: Scalp electrodes setup: frontal area (F); central area (C); occipital
area (O), Emotiv EPOC channels (E).

possibility to develop motor imagery based on the EPOC system, obtaining encouraging results (Martinez-Leon et al., 2016, Mladenov et al., 2012).
Keeping a minimal number of electrodes is essential to develop a low cost and
portable system. To this aim, several algorithms have been proposed to reduce the
number of channels in BCIs (Barachant et al., 2011). Furthermore, optimal choice of
frequency band and time segment reflecting ERD/ERS activation is highly subjectspecific, and greatly affects the performance of the resulting BCI. The optimal combination of time, frequency and channel position, i.e. feature selection, is therefore
essential in BCI design to achieve a good classification performance. In HurtadoRincón et al., 2014 a relevance analysis was applied offline to time and frequency
domain parameters extracted from EEG data recorded with EPOC, and the resulting
feature set was shown to allow left and right hand motor imagery discrimination.
In the present study a feature selection algorithm based on the conditional mutual information, originally presented in Tsimpiris et al., 2012, is applied to the
Dataset I from the BCI competition IV and on new data recorded using the Emotiv EPOC headset. The method allows the selection of optimal features that are at
the same time maximally relevant to the class variable, and minimally redundant
among each other. Band-Power (BP) features are extracted from both datasets in
different time windows during task execution. Optimal subsets of features are than
selected to discriminate two out of three motor imagery classes, i.e. left hand, right
hand, and foot, and results are validated in terms of classification accuracy.

7.2
7.2.1

Methods
Dataset

The first considered dataset is the 100 Hz version of the data from calibration session
of the BCI Competition IV Dataset I (Blankertz et al., 2007). It consists of four subjects
performing 100 trials for each one of two motor imagery tasks, respectively left hand

7.2. Methods

75

and foot for subjects Sa and Sf, and left and right hand for subjects Sb and Sf. At
the beginning of each trial, a visual cue was provided in a computer screen to the
subject, who then started to perform a motor imagery task for 4 s. Task periods are
interleaved with 4 s long rest periods. EEG signals were recorded from 59 channels,
mostly distributed over sensorimotor areas, labeled as F, C, and O in Fig.7.1. The
second dataset was recorded at 128 Hz using the Emotiv EPOC headset (channels
labeled as E in Fig. 7.1). It encompasses data from three subjects, S01, S02 and S03,
performing 100 trials for each one of three motor imagery classes: left hand, right
hand, and foot. The experimental paradigm was the same described for Dataset I.
All subjects provided their informed consent to participate to the experiment.

7.2.2

Pre-processing

Raw signals were spatially filtered using common average re-referencing, and bandpass filtered using a zero-phase digital finite impulse response filter of 50th order,
with Hamming window, to remove high frequency noise, slow artifacts, and extract information within the frequency bands of interest. Five frequency bands were
considered for BP features extraction, covering µ and β bands, in which ERD/ERS
phenomena connected to motor imagery are known to take place. Frequency bands
were split as follows: µ=8-13 Hz, B1=13-18 Hz, B2=18-23 Hz, B3=23-28 Hz and B=1330 Hz. Three overlapping epochs after cue presentation were extracted from each
record for BP analysis: TW1=[0-2] s, TW2=[1-3] s and TW3=[2-4] s. Logarithmic
BP features were extracted for each frequency band and time window, using Welch
periodogram estimation.

7.2.3

Feature Selection and Classification

A feature selection algorithm based on estimation of conditional mutual information
was used to select optimal features sub-sets, considering BP features extracted in
three cases: (a) the set of all 59 channels from Dataset I; (b) the selection of 10 out of
59 channels corresponding to available EPOC electrodes locations from Dataset I; (c)
the set of 14 Emotiv EPOC channels from the second dataset.
Given a set of M features F = { f 1 , f 2 , ..., f M }, and N cases (trials), a data matrix
of size NxM is defined. In addition, the value of the corresponding discrete class
variable C (C = {1, 2} for the two-class problem) is assigned to each case. This
allows defining the process of optimal feature selection as the problem of finding
a feature subset S ⊂ F that best classifies the N cases. Here, mutual information
(MI) and Conditional Mutual Information (CMI) quantities were used to provide a
feature selection criterion that evaluates two key properties of optimal features: the
relevance of a feature to the class variable, and the redundancy of similar features.
MI can intuitively be described as the information one variable carries about another
variable and vice versa. For discrete variables, MI between each feature f i and the
class variable C, can be computed in terms of entropies:
I ( f i ; C ) = H ( f i ) + H (C ) − H ( f i , C ) = H (C ) − H (C | f i )

(7.1)

for i = 1, ..., M, where H ( f i ), H (C ), H ( f i , C ) are entropies of f i , C. Redundancy
and relevance, which together constitute the criterion for features selection, can be
jointly formulated as the conditional mutual information I ( f i ; C |S), i.e. the MI of the
candidate feature f i and the class variable C accounting for the information shared

76

Chapter 7. Mutual Information-based Feature Selection for Motor Imagery

between each of them and the currently selected features set S. The CMI can be
expressed in terms of entropies as:
I ( f i ; C |S) = I ( f i ; (C, S)) − I ( f i ; S) = H ( f i , S) + H (C, S) − H (S) − H ( f i , C, S) (7.2)
The progressive selection of features on the basis of MI and CMI can be summarized in the following steps:
1. Among all features f i ∈ F find the feature f ∗ most relevant to the class variable C as the one which minimize the conditional entropy CEi = H (C | f i ) =
H ( f i , C ) − H ( f i ), thus maximizing the mutual information I ( f i ; C ), computed
as shown in Eq. 7.1. Set S = f ∗ .
2. To find the next optimal feature f ∗ to be added to S, compute for all candidate
features f i ∈ F |S the CMI, I ( f i , C |S), as in Eq. 7.2, and then select the one
which maximizes it, f ∗ = argmax f i I ( f i ; C |S).
3. Add f ∗ to S and repeat step 2 if CMI for f ∗ exceeds a threshold value, computed as the 95th percentile of a distribution of 100 estimations of CMI, each
one derived using the values of f ∗ randomly permuted; otherwise stop the
algorithm.
The CMI criterion in step 2 for optimal feature selection accounts for both relevance and redundancy: in fact, the feature selected is the one giving the largest
amount of information about the class (relevance), which is not contained in the
features already selected (redundancy). In this study, MI and CMI were estimated
computing entropies from the probabilities assessed on the discretized values of the
features. Discretization was performed by means of equidistant binning, using a
number of quantization level c = 4. Such small value for c was chosen because it
allows the selection of a higher number of features with an equal information gain.
The optimal sub-sets of features, selected for each subject and time window as
described above, were used to train and test a linear SVM classifier, implemented
according to a 10-fold cross-validation scheme, in order to show the corresponding
optimal classification rates.

7.3

Results and Discussion

Results of the feature selection step are shown in Tables 7.1-7.4, considering the cases
(a), (b), and (c) as starting datasets for the feature extraction and selection algorithms.
For each time window and frequency band, the feature selected is indicated by the
number matching its rank in the selection procedure, followed by a letter within
brackets, indicating the area where the channel is located (F: frontal, C: central, O:
occipital, see Fig.7.1). In Table 7.1, features relative to Emotiv EPOC electrodes locations are evidenced in bold type. Classification accuracies obtained using the optimal features sets in Tables 7.1-7.4 are reported in Fig. 7.2.
When using all channels from Dataset I, the highest accuracies for subjects Sa and
Sg (0.79 and 0.83 respectively) were obtained for the window TW2, 1-3 s after cue
(Fig.7.2). A high accuracy was shown also in TW3, 2-4 s, while a lower accuracy was
observed immediately after the cue (TW1, 0-2 s). On the contrary, Sb and Sf showed
higher accuracy in TW1 than in later time intervals (0.67 and 0.765 respectively), but
comparable with Sa and Sg classification accuracies in the same time window.

3(O);
4(F)

5(C)

1(O)

6(C)

B1

B2

B3

B

4(O)

3(O)

TW3
1(C);
2(O)

Mu
B1
B2
B3
B

TW1
2(F)
3(O)
1(O)
-

Sg_all
TW2
-

3(O)

4(O)

1(C);2(C);
3(C)
-

-

TW3
-

3(F)

-

5(C)

4(O)

-

-

4(C);
7(C)
6(C)

Sa_all
TW1
TW2
1(C);2(C); 1(C);2(O);
6(C)
3(C);5(C);

-

-

4(F);5(C);
6(O)
3(O)

TW3
1(C);
2(C)

5(O)

2(C);6(C)

left hand-right hand
Sb_EE
Sg_EE
TW2 TW3 TW1 TW2 TW3
2(O)
2(F)
1(C)
1(O)
1(F)
-

Sa_EE
TW1
TW2
1(C)
1(C);2(F)
3(F);5(F)
2(C);4(F)
-

TW3
1(C)
3(O)
2(O)
-

Sf_EE
TW1
TW2
1(F);2(O) 1(C)
2(C)
-

left hand-foot

-

4(C)

TW1
1(C);3(C)

left hand-foot

TABLE 7.2: Results of feature selection on (b) EPOC channels from Dataset I-BCI Competition IV

-

1(C);3(O); 4(O);5(F)
4(C)
2(C)
1(C);
2(C)
5(O)
-

TW1
-

left hand-right hand

1(O);4(C);
6(C)
5(C);6(C)

-

-

TW1
2(O)

Mu

Sb_all
TW2
2(C);3(C);
5(C)

TABLE 7.1: Results of feature selection on (a) Dataset I-BCI Competition IV

TW3
2(F)
1(C)
-

3(C);
4(O)

5(C)

-

Sf_all
TW2
1(C);2(C);
6(O)

3(F)

6(C)

5(O)

2(O); 4(C)

TW3
1(C)

7.3. Results and Discussion
77

TW1
-

2(C)
1(F)

-

-

Mu

B1
B2

B3

B

-

1(C)

2(F)

S01
TW2
-

-

Mu
B1
B2
B3
B

1(F);
2(O)
3(F)

TW3
-

TW1
3(O)
1(F)
2(C)
-

2(O)

-

1(O)

1(O)

-

-

TW1
2(O)

-

-

-

S03
TW2
-

-

-

1(F)
-

TW3
-

-

-

TW1
1(O);
2(C)
1(C);
2(O)
-

-

S01
TW2
-

-

-

2(C)
-

TW3
1(C)

TW3
1(C)
2(C)
-

right hand-foot
S02
TW1
TW2
2(O);3(F)
3(O)
1(O)
1(C); 2(C)
2(C)
-

TW3
1(O);2(F)
-

TW1
1(O)
-

TABLE 7.4: Results of feature selection on (c) Emotiv EPOC Dataset

-

-

2(C)

S01
TW2
1(F);3(O)
2(O)
-

1(O);
2(C)
-

-

left hand-right hand
S02
TW1 TW2 TW3
1(F)

TABLE 7.3: Results of feature selection on (c) Emotiv EPOC Dataset

S03
TW2
1(O)
2(C)
-

3(O)

-

2(O)
-

TW3
1(C)
2(O)

-

-

1(F)
2(F)

-

2(F)

1(O)
-

left hand-foot
S02
TW1 TW2 TW3
1(C)
-

-

2(C)

-

TW1
1(O)

-

2(F)

3(O)

S03
TW2
1(O)

-

1(O)

-

TW3
2(F)

78
Chapter 7. Mutual Information-based Feature Selection for Motor Imagery

7.3. Results and Discussion

79

This suggests that features selected in late time intervals are more effective in
capturing the ERD/ERS mechanisms leading to discriminate between motor imagery classes, independently from the considered task, (left-right hand, or left handfoot discrimination).
Furthermore, the resulting accuracy depends more on the specific subject’s brain
patterns than on the type of imagined movements. Table 7.1 shows that the difference in task is captured by the frequency band of the optimal BP features selected.
For left hand-foot discrimination the features with the highest rank are found in the
µ band, while for left-right hand the most discriminative information is carried by
features in low β band. Spatially, for both tasks the channels in central areas result as
the most effective for discrimination. Higher classification accuracies were obtained
when the first selected features are in central areas (Sa, Sf, Sg). For subject Sb, for
whom the best accuracy was much lower than for other subjects, the first optimal
feature was selected in occipital area, in β band (TW1).
When restricting the analysis to Emotiv EPOC channels, the best classification
accuracies for subjects Sa, Sf, and Sg showed a decrease of about 20%, though remaining above the chance level (0.62, 0.615, and 0.63 respectively). On the contrary,
for subject Sb, the best classification accuracy increased by 4% (0.695). This can be
explained looking at the results of feature selection in Table 7.1-7.2. For subjects Sa,
Sf, and Sg, when starting from the entire 59 channels set (Table 7.1), features in EPOC
channels were selected with rank from 4 to 5, mostly in O and F areas. This indicates
that for the tasks considered the 10 EPOC channels carry much less information than
other channels of the full set of electrodes. On the other hand, for subject Sb most
informative features where found in O, and coincident with EPOC electrodes also
when starting from the complete 59 channels dataset (Table 7.1). Thus accuracy does
not differ significantly when restricting the analysis to EPOC channels. The observation above highlights the influence of the first selected feature on the composition
of the resulting optimal features set. When using the algorithm presented in Section
II-C, all subsequent features are selected based on their relevance and redundancy
compared to the already selected ones. This constraints the search potentially preventing the selection of the absolute best features set, as shown by the increase in
Sb accuracy. The dimensionality of the optimal features set, leading to the best classification accuracy, when starting from the EPOC channels from Dataset I, ranged
from 2 to 3. This suggests that the EPOC channels are able to determine features
explaining most of the information connected to class discrimination, and that the
first one or two selected features are mostly responsible for the final classification accuracy. Relevant information carried by subsequent features rapidly decreases with
the number of features selected.
Best classification accuracies obtained on Emotiv EPOC dataset were 0.7, 0.615
and 0.67 for subjects S01, S02 and S03, achieved respectively for left hand-foot (TW1),
left-right hand (TW1) and right hand-foot (TW2) discrimination (Fig. 7.2). As visible
in Table 7.3 and 7.4, the corresponding first feature selected belonged to O area for
all three subjects, in µ band for subjects S01 and S03, and in β band for subject S02.
This confirmed that features in µ band are more effective in discriminating tasks involving foot motor imagery, while features in β band bring more useful information
for left-right hand motor imagery discrimination. The importance of channels in C
area was confirmed by the observation that best accuracies (0.7, 0.685) were obtained
for S01 in both hand-foot tasks, in TW1, when also features in C are selected.

80

Chapter 7. Mutual Information-based Feature Selection for Motor Imagery

F IGURE 7.2: Classification accuracy using optimal features sets computed in
time windows TW1-3 for subjects: Sa, Sb, Sf, Sg from full 59 channels (-all)
and reduced to EPOC channels (-EE) Dataset I- BCI Competition IV; S01, S02,
S03 from Emotiv EPOC dataset.

7.4

Conclusions

Results of feature selection on the 59 channels Dataset I from BCI competition IV
showed that optimal features vary considerably across subjects, thus confirming the
importance of subject-adaptive feature selection algorithms in the development of
effective BCIs. The number of optimal features selected as relevant and not redundant varied from 5 to 7 for the best classification accuracy achieved on each subject
data. This confirmed the feasibility of motor imagery-based BCI systems using a low
number of EEG channels. Results also attested the usefulness of low cost EEG system like Emotiv EPOC, for the development of such BCIs. Even not encompassing
electrodes in the motor area, BP features extracted from EPOC channels were found
to be relevant, especially in hand-foot discrimination, allowing an offline classification accuracy of 70% using only 2 features.

81

Chapter 8

Tactile Feedback in Error-based
Adaptive Classification of Motor
Imagery
This chapter presents an implementation of ErrP detection to provide progressive
adaptation of a motor imagery task classifier. The output of a static ErrP classifier
is used to provide information about correctness of the motor imagery classification output. This is then exploited to update the task classifier’s parameters, thus
allowing for adaptation to new data. The main contribution of this work is in the
evaluation of the effect of vibrotactile feedback on both ErrP and motor imagery
classification, and on the adaptive classification performance. Results confirm the
potential of self-adaptive techniques to improve motor imagery classification, and
support the design of tactile feedback into BCIs to improve both static and adaptive
performance.

8.1

Introduction

The development of Brain-Computer Interfaces (BCIs) offers the possibility to restore a non-muscular channel for communication and control to people with severe
motor disabilities (Wolpaw et al., 2004). Despite the growing research in the field
and a wide range of applications developed in the last decades, BCIs, and especially non-invasive BCIs, suffer from a number of limitations, that prevent them
from being integrated in current Assistive Technologies (AT) (Millán et al., 2010).
The interest towards non-invasive BCIs, mainly relying on electroencephalographic
(EEG) signals, and supported by the need of a portable and acceptable technology
for the patients, brought to the development of different adaptive signal processing
approaches.
One of the limitations of EEG-based BCIs based on voluntary control, e.g. motor
imagery (MI), is related to the non-stationarity of data, which leads to a decrease
in performance from training to testing phase. In order to overcome this problem,
many approaches have been proposed based on adaptive classification: assuming
that the labels of incoming trials are known, it was proven that proper updates in
classifier parameters can improve the performance of the static classifier (Shenoy
et al., 2006). In a real BCI application, though, user intention, corresponding to the
class label, is usually unknown. One interesting approach to cope with this lack of
knowledge is to exploit the same neural channel both for extraction of an active control signal (the output of the BCI classifier) and for retrieving information on user’s
awareness of a misinterpreted intention. The latter can be achieved by detection of a
passive EEG feature, the so called Error-related Potential (ErrP), which is evoked in

82

Chapter 8. Tactile Feedback in Error-based Adaptive Classification

EEG signals

Motor imagery

Error

t(s)

feedback

MI adaptive
classifier

ADAPTATION

ErrP static
classifier

F IGURE 8.1: Scheme of adaptive classifier functioning. EEG signals are used
both to extract an active control signal (from a motor imagery task), and a
passive information (ErrP) on user’s evaluation of the MI classifier’s output
(after feedback is provided). The output of static ErrP classifier is then used
to update the MI adaptive classifier’s parameters, and to improve its performance over time.

user’s fronto-central activity, and has been proven to be detectable on a single-trial
basis with a quite high (about 80%) accuracy (Chavarriaga et al., 2014). Since ErrP it
is an evoked potential, contrary to sensorimotor rhythms exploited to detect motor
imagery, features allowing its detection are quite stationary over time. This characteristic makes it suitable to be exploited in a reinforcement learning framework.
Here, ErrP is used to provide a passive signal, stable over time, to improve the performance of an adaptive classifier, used for the detection of an active EEG pattern,
e.g. the EEG pattern underlying motor imagery. This concept was implemented by
Llera et al., 2011, on magneto-encephalographic (MEG) data recorded during a twoclass covert attention paradigm. Their approach is shown in Fig. 8.1. ErrP decoding
was used to identify misclassification and provide labels for the new incoming data.
Results from offline analysis showed that this technique can significantly improve
the performance of the BCI classifier.
In the present work, the method proposed by Llera et al., 2011 was applied to
EEG data recorded during a four-classes motor imagery task. During the experiment, a classification feedback was also simulated by means of a virtual cursor
movement shown after each motor imagery phase, in order to collect a realistic
dataset for both motor imagery and ErrP detection. Only data related to left and
right hand motor imagery were considered in this preliminary study, in a binary
classifier implementation. In the described setting, ErrP detection greatly depends
on how feedback is designed. Previous studies supported the evidence that using
a tactile feedback channel to close the control loop between user and the assistive
interface/device, can greatly improve MI-based BCIs performance (Chatterjee et al.,
2007, Gomez-Rodriguez et al., 2011, Jeunet et al., 2015). Furthermore, vibrotactile
feedback is simple to implement, keeps user attention free, and can be easily integrated in non-invasive systems (Kaczmarek et al., 1991).
The main contribution of the present study consists in evaluating the effect of
tactile feedback on both adaptive motor imagery classification and ErrP detection.
To this aim, a ’within’ experimental design was chosen. Each subject repeated the
experiment in two different conditions, i) with visual and ii) with visuo-tactile stimulation during motor imagery and feedback phases (see Fig. 8.1).

8.2. Methods
User
intention

83
MI task classifier
ADAPTIVE

MI-BCI performs
correctly (𝑡 = 𝑡)

ErrP classifier
STATIC

E=0

Left or Right
MI (t)

MI-BCI performs
wrongly (𝑡 ≠ 𝑡)

E=1

𝐸= 1
Error wrongly detected
(false positive)

Learning
∆𝑤𝑖 update

𝐸= 0
No error detected
(true negative)

No action

𝐸= 1
Error correctly detected
(true positive)

Learning
∆𝑤𝑖 update

𝐸= 0
No error detected
(false negative)

No action

F IGURE 8.2: Block diagram of adaptive classifier algorithm presented in Llera
et al., 2011, and used in the present work.

8.2
8.2.1

Methods
Adaptive classification

The adaptive classifier implemented in this study was introduced by Llera et al.,
2011, and proved to be effective in improving the binary classification of left and
right hand motor imagery on MEG data. The working principle of this adaptive
algorithm is reported in Fig. 8.2. The learning, namely the updating of MI classifier’s
parameters, only happens when an error is detected after the motor imagery task
classification. Ideally, if the static ErrP classifier had a perfect behavior, the learning
would happen only when true errors, i.e. true positives (TP), are detected at the
output of task classification. In practice, the performance of the adapting rule is
affected by false positives (FP), i.e. correct trials wrongly detected as erroneous, and
false negative (FN), i.e. erroneous trials wrongly classified as correct.
Specifically, labeling as t ∈ {0,1} the true target class, i.e. left or right, corresponding to subject’s intention, the output of the MI task classifier can be denoted as et. In
the same vein, the subject’s awareness of an interface error is denoted as E ∈ {0,1},
e represents the output of the static ErrP classifier. When the BCI (task classiwhile E
e = 1 corresponds to a false
fier) performs correctly (et = t), the detection of an error E
positive, and causes the MI classifier to learn from incorrectly labeled data. When
e = 1),
instead the MI task classifier performs wrongly, a correct ErrP classification (E
i.e. a true positive, results in a correct update, while a wrong ErrP classification
e = 0), i.e. a false negative, prevents the algorithm to perform a correct update.
(E
The FP rate (α p ) affects the adaptive MI classifier’s performance in a worse way than
FN rate (αn ). In fact, while in the latter case trials useful for updating are discarded,
FPs cause an erroneous update to occur.
From the computational point of view, a logistic regression model is used to compute et, in terms of the probability:
1

p(t = 1| x, w) = σ( x, w) =

n

1+e

− ∑ wi x i
i =0

(8.1)

84

Chapter 8. Tactile Feedback in Error-based Adaptive Classification

where x = ( x1 , ..., xn ) is a vector of features values extracted from user’s EEG
activity, which is relevant to discriminate between the two considered classes. The
vector w ∈ Rn+1 is the vector of weights, with x0 = 1 accounting for the bias term.
The output of the MI task classifier is defined by the function:


et = χ (t = 1| x, w) > 1
2


(8.2)

where χ returns 1 if the argument is true, and 0 otherwise. The prediction error
is quantified by the log-likelihood function:
G ( x, w, t) = −(t ln σ ( x, w) + (1 − t) ln(1 − σ( x, w)))

(8.3)

The learning rule for the classifier parameters w consists in an update of w in the
gradient direction (Eq.8.3):

∆wi =

∂G ( x, w, t)
= η (t − σ( x, w)) xi
∂wi

(8.4)

where η is the learning rate. In a real system, the subject’s real intention t is
unknown. Updates ∆wi occur only when the static ErrP classifier detects an error
e = 1), in which case it can be assumed that the observed output et is incorrect, and
(E
t = 1 − et. Therefore, the learning rule for the adaptive MI classifier can be written
as:
e(1 − et − σ ( x, w)) xi
∆wi = η E

8.2.2

(8.5)

Experimental protocol

The experimental protocol was designed in order to simulate errors made by a BCI
in recognizing subject’s intents in a bi-dimensional control task. Subjects did not
actually control the interface, rather, they performed a 4-classes motor imagery task,
with the goal of moving a virtual cursor in one of the four directions (up, right,
down, left). The presence of ErrP generated by a wrong cursor movement was tested
simulating an error made by the interface in recognition of subject’s intent.
The experimental paradigm was implemented following the classic scheme for
collection of motor imagery data (Schlögl et al., 2005), and it is illustrated in Fig. 8.3.
Each trial encompassed a fixation cross appearing in a black screen (1.5 s), followed
by a green arrow pointing one among four directions, indicating to the subject which
motor imagery task to perform. A red dot superposed to the fixation cross was also
shown, simulating a virtual cursor. Arrow pointing up, right, down and left indicated both hands, right hand, feet, and left hand motor imagery respectively. The
MI task lasted for 4 s, and was followed by a break of 1 s (black screen), after which
a feedback, simulating the result of MI classification, was presented. This consisted
in a movement of the red cursor in either the direction pointed by the arrow (correct
trials) or one of the other three directions (erroneous trial). Experiment was repeated
by each subject in two conditions:
• Visual feedback (V): the task was performed with visual feedback shown in
Fig. 8.3;

8.2. Methods

85
Feedback
(correct or erroneous)

Motor
imagery

Fixation
cross

0s

Inter-trials
Pause
(2-2.5s)

Black
screen

1.5 s

5.5 s

6.5 s

8.5 s

F IGURE 8.3: Experimental protocol. After 1.5 s from cue onset, a green arrow
indicating which motor imagery task to performs appears for 4 s. After 1 s
break a feedback, simulating MI classification output, is presented. It consists in the movement of a virtual cursor in either the correct direction or one
randomly chosen among the other ones (erroneous).

• Visuo-tactile feedback (VT): during motor imagery and feedback phases the
subject was provided with a vibrotactile stimulus by means of vibrating bands
placed on wrists an ankles. Vibrations on both wrists, right wrist, both ankles
and left wrist were provided for up, right, down, and left directions respectively. Tactile stimulus was provided for the entire duration of the motor imagery task (4 s), and for 1 s starting from the feedback presentation, according
to the cursor movement.
Each experiment encompassed 8 sessions (half in V and half in VT condition,
according to a ’within’ experimental design) of 90 trials, uniformly distributed over
the four classes. The chance of receiving an erroneous feedback was set to 40%. This
value, higher than the one used in classic error detection experimental paradigms
(Ferrez et al., 2008b), was chosen in order to guarantee the collection of enough trials
for a robust ErrP classification, while keeping the duration of the entire experiment
acceptable for the subject. A ’within’ design for comparing V and VT conditions
was chosen starting from the observation that performance for both motor imagery
and ErrP detection varies greatly among subjects. For this reason, the improvement
achievable with a tactile feedback should be assessed following a subject-specific
approach.
Six healthy subjects (27.7±4.6 y.o., all males) participated in the study. Each subject performed the experiment in two consecutive days, recording two V and two
VT sessions each day, in random order. Before the experiment started, all subjects
agreed with experiment’s guidelines, and signed an informed consent document1 .
All anonymized experimental data will be made available online2 . Only trials related to left hand and right hand motor imagery were considered in the present
study, leading to around 45 trials x 8 sessions (4 with V and 4 with VT feedback), for
each subject.

8.2.3

Experimental setup

The experimental setup consisted of 20 active gel electrodes (g.LADYbird from g.tec3 )
located at F1, Fz, F2, FC3, FC1, FCz, FC2, FC4, C5, C3, C1, Cz, C2, C4, C6, CP3, CP1,
1 IIT

ADVR TEEP01 protocol, approved by the Ethical Committee of Liguria on June 14th, 2016.

2 http://teep-sla.eu
3 http://www.gtec.at

86

Chapter 8. Tactile Feedback in Error-based Adaptive Classification
TABLE 8.1: Classification accuracy for V condition with static ErrP classifier

S01
S02
S03
S04
S05
S06
Mean

Accuracy
0.65
0.58
0.84
0.67
0.71
0.73
0.70

FN ratio (αn )
0.26
0.39
0.16
0.31
0.22
0.25
0.26

FP ratio (α p )
0.47
0.46
0.15
0.37
0.42
0.30
0.36

TABLE 8.2: Classification accuracy for VT condition with static ErrP classifier

S01
S02
S03
S04
S05
S06
Mean

Accuracy
0.68
0.68
0.84
0.78
0.61
0.72
0.72

FN ratio (αn )
0.29
0.27
0.09
0.15
0.38
0.23
0.24

FP ratio (α p )
0.36
0.39
0.24
0.32
0.41
0.34
0.34

CPz, CP2 and CP4 according to the standard 10/20 international system. Electrodes
locations were chosen in order to cover the motor cortex area were changes related
to movement imagination are known to happen, and in the frontal area for error
potential detection. Experiments were started only after impedance of all electrodes
was stably under 5 kΩ. EEG signals were acquired using a g.USBamp biosignal amplifier. Ground and reference were respectively placed on the forehead (AFz) and
left ear lobe. Hardware filters were set to perform a bandpass between 0.1 and 100
Hz, with notch filter at 50 Hz. Signals were sampled at 512 Hz.
The graphical protocol was developed in Matlab, while data acquisition occurred
through a Simulink model that handled the g.USBamp amplifier. A set of four
custom-made silicone rubber (ACC Silicone M230) cuffs with embedded vibration
motors (Precision Microdrives 304-116) were cast in order to provide tactile stimuli. Control of the vibratory motors occurred through serial communication, implemented over a direct USB connection.

8.2.4

ErrP classification

For ErrP classification, EEG data were spatially filtered by means of common-average
re-referencing (CAR), then band-pass filtered between 1 and 10 Hz with a 4th order
Butterworth filter, since EEG error correlates are known to be slow potentials. Time
windows of length 1 s were extracted from recorded data, starting from feedback
presentation (6.5 s from the trial’s beginning in Fig. 8.3). Both time and frequency
features were extracted and used for ErrP classification. Time features were obtained
by sub-sampling signals to 64 Hz. Frequency analysis was performed selecting nonoverlapping 0.5 Hz-wide power spectrum bands between 1 and 10 Hz, on the same
time window mentioned above, after applying the Fast Fourier Transform. Features
were ranked by means of z-score, and only features with score below the threshold of
0.25 were selected. A Support Vector Machine (SVM) with second order polynomial
kernel was used for classification, using a leave-one-out cross validation procedure.

8.2. Methods

87

TABLE 8.3: Classification accuracy for V condition with static MI classifier

S01
S02
S03
S04
S05
S06
Mean

TW1
0.49
0.59
0.52
0.49
0.50
0.55
0.52

TW2
0.45
0.59
0.57
0.53
0.57
0.60
0.55

TW3
0.54
0.60
0.53
0.57
0.53
0.67
0.57

TW4
0.53
0.57
0.50
0.51
0.52
0.46
0.52

TW5
0.45
0.59
0.45
0.58
0.57
0.48
0.52

TW6
0.54
0.59
0.52
0.51
0.59
0.52
0.54

TW7
0.49
0.57
0.50
0.46
0.63
0.51
0.53

TABLE 8.4: Classification accuracy for VT condition with static MI classifier

S01
S02
S03
S04
S05
S06
Mean
∆Mean[%]

TW1
0.74
0.55
0.53
0.94
0.67
0.68
0.68
30

TW2
0.76
0.60
0.56
0.79
0.73
0.69
0.69
25

TW3
0.77
0.56
0.56
0.87
0.70
0.55
0.67
16

TW4
0.74
0.54
0.58
0.96
0.59
0.50
0.65
26

TW5
0.76
0.50
0.59
0.94
0.61
0.49
0.65
25

TW6
0.75
0.61
0.55
0.95
0.71
0.48
0.67
24

TW7
0.74
0.56
0.61
0.96
0.66
0.60
0.69
30

These classification results, in terms of false negative (αn ) and false positive rate (αn )
were then used for the adaptive MI classification, to simulate the output of the static
ErrP classifier and the updating algorithm’s functioning in realistic conditions for
each subject.

8.2.5

Motor imagery task classification

For the MI task classification, data were filtered between 8 and 30 Hz with a zerophase FIR filter of order 20, and spatially filtered by means of small Laplacian (McFarland et al., 1997). Seven partially overlapping (overlap 0.5 s) time windows (TW)
of 1 s length were extracted starting from each trial in the interval 1.5-5.5 s, corresponding to the motor imagery task. Log band-power features were then computed
in each TW, considering the five 4 Hz frequency bands: 8-12 Hz, 12-16 Hz, 16-20 Hz,
20-24 Hz, 24-28 Hz. Data were divided in a training set, including data from the first
session (about 20 trials per class), and testing set, including data from the remaining
three sessions. Only the first 20 most significant features, i.e. with the lowest z-score
computed on the training set, were considered for subsequent analysis. For static MI
classification, the logistic regression model presented in Eq. 8.1 was exploited. The
value of static MI classification accuracy was used as ground-truth to evaluate the
adaptive classifier performance. This latter was implemented using the same logistic
regression model, starting from the weights values of the static MI classifier, tuned
on the training set, and applying the learning rule in Eq. 8.5 to update classifier’s
weights after each new testing example.

88

Chapter 8. Tactile Feedback in Error-based Adaptive Classification
TABLE 8.5: ANOVA results on classification accuracy change between V and
VT condition for each subject. Statistical significance threshold was chosen
as p<0.01.

Subject
S01
S02
S03
S04
S05
S06

8.3

F(1,6)
250
3.399
7.096
137
21.82
0.623

p
4.06e-06
0.115
0.0373
2.33e-05
0.00343
0.46

Results and Discussion

ErrP classification
In Table 8.1 and 8.2 results related to static ErrP classification accuracy are reported,
for V and VT conditions respectively. A mean accuracy of 0.7 is obtained in both
cases, regardless from the presence of tactile feedback. This result differ from what
obtained in previous experiments (see chapter 5), suggesting an improvement in
ErrP detection when tactile feedback was used in addition to the visual one. Such an
observation could be motivated by different factors. The first one is the fact that in
the present experiment, differently from the previous one, the task is bi-dimensional,
so three different actions can be considered as an error after each trial. A decrement
in the positive effect of tactile feedback on ErrP detection was observed also during
the robot learning experiment, where the task was not binary as well (see chapter 6).
Another reason for the ineffectiveness of tactile feedback on ErrP classification could
be the high error ratio (40%), that in general could lead to worse detection accuracy.
The αn and α p are slightly higher than in Llera et al., 2011, probably due to the lower
ErrP classification performance. Furthermore, the α p is greater than αn for almost all
subjects. This is an undesirable condition, since the adaptive algorithm executes a
wrong update when a false positive is detected. For this reason, a probable decrease
in the adaptive MI classifier performance, compared to the ideal condition (100%
ErrP detection accuracy) is expected, from this source.

8.3.1

Motor imagery task classification

Static classification
Tables 8.3 and 8.4 show results related to static MI classification, in terms of accuracy for each subject and time window, for V and VT feedback conditions. When
only visual feedback is provided, the mean accuracy among all subjects and TW is
barely above chance level, with top results (0.55 and 0.57) between 0.5 and 1.5 s after
stimulus onset. Adding tactile stimulation during motor imagery increases the classification accuracy of a value between 16% and 30% on average. The best results on
single subjects’ data passes form 0.63 in the V condition to 0.94 in VT.
To statistically evaluate the difference between V and VT considering all subjects,
a within-subjects experimental design of 2x7 was considered, with 2 levels of feedback variable (V/VT) and 7 levels of repeated measures variable (the 7 windows).
No significant effect emerged through ANOVA for the feedback (F(1,5) =4.333, with
p=0.0919), for the repeated measures (F(6,30) =1.097, with p=0.387), and for their interaction (F(6,30) =0.658, with p=0.684). Since single accuracy values vary greatly for

8.3. Results and Discussion

TW1

TW2

89

TW3

TW4

TW6

TW7

0.1

S02

S01

0.2

TW5

0

0
-0.1

-0.2

-0.2
0.5

1

0.1

0.1

0

0

S04

S03

0

-0.1

0.5

1

0

0.5

1

0

0.5

1

-0.1

-0.2

-0.2
0

0.5

1
0.1

S06

0.2

S05

0

0

0
-0.1

-0.2

-0.2
0

0.5

1

F IGURE 8.4: Variation in classification accuracy from static to adaptive MI
task classifier, as function of the learning rate and considering 100% ErrP
detection accuracy, for all time windows, in V feedback condition.

different subject, this evaluation could not be appropriate, when dealing with a very
low number of subjects, as in this case.
A one-way repeated measures experimental design was than considered, with
2 levels of feedback variable (V/VT) in order to find its effects on the accuracy for
each subject. Significant effects emerged through ANOVA for the subjects S01, S03,
S04, S05 (as shown in the table 8.5). The assumptions (just the normality, calculated
through the Shapiro-Wilk test) of the test were checked (p=0.117 for subject S01,
p=0.535 for S03, p=0.374 for S04, p=0.139 for S05).
The evident improvement observable in MI classification, in presence of tactile
feedback, leads to another consideration about the absence of the same result on ErrP
classification. The use of the identical kind of feedback (only differing in its duration)
could not be appropriate in order to enhance simultaneously the detection of an
active and a passive feature. More than excluding the beneficial effect of a tactile
stimulation on ErrP detection, this observation suggests that a different feedback
design could be necessary to draw more solid conclusions to this regard.

8.3.2

Adaptive classification

To evaluate the MI adaptive classifier, a first analysis considering an ErrP detection
of 100% was carried on, in order to assess the optimal learning rate value for each
subject. Results are reported in Fig. 8.4 and 8.5. Each panel shows the absolute

90

Chapter 8. Tactile Feedback in Error-based Adaptive Classification
TW1

TW2

TW3

TW4

0.1

0
0.5

0

1

0.2

0.2

0.1

0.1

S04

S03

TW7

-0.2
0

0

0

0.5

1

0

0.5

1

0

0.5

1

0

-0.1

-0.1
0

0.5

1

0.2

0.2

0.1

0.1

S06

S05

TW6

0.2

S02

S01

0.2

TW5

0

0

-0.1

-0.1
0

0.5

1

F IGURE 8.5: Variation in classification accuracy from static to adaptive MI
task classifier, as function of the learning rate and considering 100% ErrP
detection accuracy, for all time windows,in VT feedback condition.

classification accuracy improvement, compared to the static condition (tables 8.3 and
8.4), considering different TW, for learning rate values ranging from 0.01 to 1. As
visible in Fig. 8.4, results for the V condition vary greatly based on the considered
TW, and in general classification accuracy changes do not show a stable behavior,
especially for high η values. A good behavior of the learning algorithm is shown for
example by features in TW2 for subject S01, and η between 0.1 and 0.2; by features
in TW2, TW4 and TW5 for subject S02, η between 0.01 and 0.15; by features in TW3
and TW4 for subject S05 after η =0.2, and so on.
Results for VT condition show a much more regular and efficient behavior of
the adaptive algorithm (see Fig.8.5). Subjects S01 and S04 in particular (who also
showed the bigger improvement in static MI classification in presence of tactile feedback, see Tables 8.3 and 8.4), show the most desirable behavior for the learning algorithm. For all time windows, there is an improvement in classification accuracy
up to 15%, and the algorithm converge to a stable behavior for η>0.25. For subject
S04, the improvement is only achieved for TW2 and TW3, since for the other ones
the starting accuracy was already close to 1 (Table 8.4). These results suggest that
the addition of tactile feedback, beside the beneficial effect on motor imagery detection, also facilitates the good functioning of adaptive techniques. In fact, the better
behavior of the adaptive MI classifier on VT condition than V condition, could be
explained by a more stationary character of the features over the sessions. For this
reason, adding new samples of the two classes distributions, i.e. the updating rule,

8.4. Conclusions

91

TABLE 8.6: Change in classification accuracy from static to adaptive classifier
considering the optimal TW and relative η for each subject, in V and VT conditions, in case of ideal 100% ErrP accuracy, and for real values of αn and α p
(Tables 8.1 and 8.2)

S01
S02
S03
S04
S05
S06

ErrP 100%
V
VT
9% 17%
3% 10%
4% 10%
7% 15%
14% 8%
7%
5%

ErrP real
V
VT
3% -5%
3% 4%
1% 12%
5% 10%
6% 1%
4% 3%

improves the classifier performance.
To quantify the performance improvements achievable in a real setting, the classification accuracy improvement was computed considering false positive and false
negative ratios reported in Table 8.1 for each subject. Classification was computed
on features in the TW with the best adaptive behavior, and suitable η (values chosen
between 0.04 and 0.45) according to the previous results, for each subject and for
both conditions V and VT. Table 8.6 reports changes in classification performance
(ErrP real), and the comparison with values achievable in an ideal setting. i.e. 100%
of ErrP detection accuracy (ErrP 100%). The adaptive algorithm allows for a MI
classification performance improvement ranging from few percentage points to 17%
in the ideal case. These values decrease when taking into account the false positive and false negative rate. In particular, performance of subjects with very high
α p , such as subject S05 (α p =0.42,0.41 in V and VT conditions respectively) presents
a big decrease of accuracy improvements achievable with the adaptive algorithm,
as expected. The algorithm performance is overall higher for VT condition even in
the realistic case. It could be further improved by setting the static ErrP classifier as
more conservative, i.e. reducing α p .

8.4

Conclusions

This work presented the evaluation of an adaptive motor imagery classification algorithm based on ErrP detection, on a novel EEG dataset recorded in two different
feedback conditions, either visual, or visuo-tactile. The impact of tactile feedback
was evaluated on both MI and ErrP detection. While results on ErrP classification
did not show any relevant effect of the tactile feedback, MI classification accuracy
presented a significant improvement for most of the subjects, in a simulated cursor
control task. This confirmed literature results on benefits coming from the integration of haptic biofeedback in motor imagery-based rehabilitation and neuroprosthetic control tasks.
Furthermore, results from adaptive classifier suggested that tactile feedback not
only improves the static classification performance of motor imagery features, but
also helps in generating features more stationary over time, thus allowing a better
performance of an adaptive classification algorithm based on the principle of parameters re-tuning, as the one implemented in this work.

93

Conclusions
This PhD research was motivated by the belief that non-invasive BCI technology is
approaching the level of maturity required to bring it to real-life assistive applications. In particular, I share the view that with the available hardware and software
technology, the path towards out-of-the-lab effective EEG-based BCI implementations passes through the integration with currently available assistive technologies.
In this perspective, it appears essential to keep the BCI system concept simple, by
extracting few meaningful and reliable control signals, and to rely on hybrid and
adaptive solutions in order to achieve usable and comfortable assistive products.
Adaptation at the level of EEG signal processing, in particular feature extraction
and classification, can cope with the difficulties arising from the non-stationarity of
EEG signals and the need of detecting meaningful features, stable over time. Such
design can facilitate the development of systems with automatic calibration and recalibration, able to adapt to each particular user, and to reduce the cognitive effort
necessary for the control. A second level of adaptation, which also greatly facilitates
the interaction, can be achieved by exploiting hybrid techniques at different levels.
These range from the combined use of different biosignals to the integration of multiple mental processes and imaging techniques. In fact, a hybrid approach allows
to increase the system reliability by switching between different control modalities,
and taking into account the reliability of each input channel for an effective and responsive control.
In this view, the present work proposed a concept of hybrid and adaptive BrainMachine Interface, where passive and active signals are combined together to provide co-adaptation between the user and the assistive device. Such concept was elaborated throughout its different components, and novel co-adaptive control strategies
were proposed considering as control input either active signals, passive processes
or their combination.
Contributions of this research include:
• The presentation of the EyeBCI system. An hybrid eye-tracking and BCI solution was proposed in which the BCI channel is exploited to provide adaptation to eye-tracking technology, by actively varying dwell time. This solution
is based on the combination of two active control signals, and adaptation is
achieved by means of user volitional control. It resulted in an overall improvement of system’s performance and user experience compared to eye-tracking
or BCI approaches alone.
• The implementation of the SoftBMI system. This solution was again based
on the combination of two active control signals. In this case, the BCI channel was exploited to provide an additional degree of freedom for the control,
when combined with the eye-tracking technology. This allowed for an effective control of a robotic arm-hand system in 3D space, to realize pick and place
tasks, with volitional control of the system’s stiffness during interaction. The
exploitation of the BCI channel to control a dynamic aspect of a robotic system was new and introduced the possibility of achieving both kinematic and

94

CONCLUSIONS
dynamic control by exploiting the residual functional capabilities available in
severely impaired patients.
• Research results regarding the use of a passive EEG process, namely the errorrelated potential, to provide a signal for adaptation of the assistive interface/
device to the human. This concept relies on the advances in robotic systems’
autonomy, and points towards the development of intelligent devices, able to
learn a task co-evolving with the person’s will. Error-related EEG potentials
provide a (passive) information on user’s evaluation of the system behavior,
that can be exploited for the system’s learning. In this context, a first contribution of this research regards a study on the effect of tactile feedback on ErrP
single-trial detection. Results suggested that the addition of a supplementary
sensory channel in the BMI system helps in providing a more reliable classification. This is important for systems that base their learning on ErrP signals. A
second contribution consisted in the implementation of an online framework
for ErrP-based robot learning. Results confirmed that robot learning is accelerated when including an information on human evaluation of robot behavior
into the learning loop. Furthermore, a novel use of this concept was shown
as the possibility of simultaneously learn two different tasks (target reaching
and target identification). This allowed to achieve a further degree of learning (target identification) compared to a scenario of robot learning without
any information available from the user. Both studies are related to the control achievable by only exploiting a passive signal from user’s brain activity.
Publicly available EEG datasets are included in the contributions from these
works.
• The use of a subject-adaptive feature selection method based on mutual information was proposed to retrieve an optimal set of features for motor imagery
tasks discrimination. This study was connected to the design of adaptation at
the level of signal processing, and in particular feature extraction, to obtain an
EEG-based reliable active signal for the control. This work presented the novel
application in the BCI context of a method based on mutual information and
conditional mutual information to select features more relevant to the task and
less redundant to each other. Results showed the method usefulness in identifying optimal features, even in a low quality dataset with few suboptimal
channels available. This stresses the importance of adaptive signal processing
especially when coping with limitations coming from the use of portable and
low-cost systems, that nonetheless constitute the future pathway towards the
implementation of real-life applications.
• A last contribution concerned the adaptation designed at the level of the classification stage of the EEG signal processing pipeline. The method was already
proposed for motor imagery online adaptive classification, and it is based on
error-related potential detection after classification feedback. In this case, the
passive signal is used to allow for adaptation of the active signal decoder. Contributions were here related to the evaluation of tactile feedback impact on both
active and passive signals detection, and its effect on the adaptive algorithm
performance. Results showed that tactile feedback can remarkably improve
motor imagery static and adaptive classification, while no relevant effect was
observed on ErrP detection. A publicly available dataset was also made available from this work.

CONCLUSIONS

95

All studies here presented were tested on healthy population. The future perspective of this research certainly requires real-time testing on a clinical setting involving individual with severe motor disabilities. This will allow to understand if
the observed results can be extended in case of severe paralysis, which is the condition of the final intended user of this investigation. In view of an integration of the
proposed control strategies within real assistive products, performance and usability ISO metrics such as accuracy (to quantify effectiveness) and information transfer
rate (to evaluate efficiency) need to be assessed during systematic studies involving
a sufficiently large sample of both unimpaired and impaired people. The second aspect that has to be taken into account to push forward the present research concerns
the definition and development of the low-cost hardware components, in particular
the EEG sensing system, that allow for an affordable overall cost of the proposed
assistive technology. Finally, the iterative process leading through progressive prototypes up to the final product should follow a user-centered design. Patients will be
involved into the evaluation process by means of questionnaires to assess their user
experience when testing each prototype for a prolonged period of time, in terms of
subjective workload, e.g. through the National Aeronautics and Space Administration Task Load Index (NASA TLX), and user satisfaction, e.g. using the Quebec User
Evaluation of Satisfaction with assistive Technology (QUEST 2.0) and the Assistive
Technology Device Predisposition Assessment (ATD PA) Device Form.
In conclusion, the research presented in this PhD work aimed at advancing the
state of the art of assistive Brain-Machine Interfaces, by following the design of adaptive control strategies to facilitate the co-evolution and interaction between the human and the assistive technology. Contributions are relevant to the field of research
towards the development of effective assistive solutions to provide additional degrees of independence to people with severe motor disabilities, or a viable solution
to restore communication and control capabilities in patients with total paralysis.

97

Bibliography
Abbott, William Welby and Aldo Ahmed Faisal (2012). “Ultra-low-cost 3D gaze estimation: an intuitive high information throughput compliment to direct brain–
machine interfaces”. In: Journal of neural engineering 9.4, p. 046016.
Ajoudani, Arash (2016). Transferring Human Impedance Regulation Skills to Robots. Springer.
Ajoudani, Arash, Nikolaos G Tsagarakis, and Antonio Bicchi (2012). “Tele-impedance:
Teleoperation with impedance regulation using a body-machine interface”. In:
The International Journal of Robotics Research, p. 0278364912464668.
Albu-Schäffer, A. et al. (2003). “Cartesian impedance control of redundant robots:
recent results with the DLR-light-weight-arms”. In: IEEE Intl. Conf. on Robotics
and Automation (ICRA). Vol. 3, pp. 3704–3709.
Artusi, Xavier et al. (2011). “Performance of a simulated adaptive BCI based on
experimental classification of movement-related and error potentials”. In: IEEE
Journal on Emerging and Selected Topics in Circuits and Systems 1.4, pp. 480–488.
Barachant, Alexandre and Stephane Bonnet (2011). “Channel selection procedure
using Riemannian distance for BCI applications”. In: Neural Engineering (NER),
2011 5th International IEEE/EMBS Conference on. IEEE, pp. 348–351.
Barresi, Giacinto et al. (2015). “Brain-Controlled AR Feedback Design for User’s
Training in Surgical HRI”. In: Systems, Man, and Cybernetics (SMC), 2015 IEEE
International Conference on. IEEE, pp. 1116–1121.
Barresi, Giacinto et al. (2016). “Focus-sensitive dwell time in EyeBCI: Pilot study”.
In: Computer Science and Electronic Engineering (CEEC), 2016 8th. IEEE, pp. 54–59.
Bashashati, Ali et al. (2007). “A survey of signal processing algorithms in brain–
computer interfaces based on electrical brain signals”. In: Journal of Neural engineering 4.2, R32.
Bates, R et al. (2005). “Survey of de-facto standards in eye tracking”. In: COGAIN
conf. on comm. by gaze inter.
Bauer, Gerhard, Franz Gerstenbrand, and Erik Rumpl (1979). “Varieties of the lockedin syndrome”. In: Journal of neurology 221.2, pp. 77–91.
Beukelman, David and Pat Mirenda (2005). “Augmentative and alternative communication”. In:
Birbaumer, Niels et al. (1999). “A spelling device for the paralysed”. In: Nature 398.6725,
pp. 297–298.
Blankertz, Benjamin, Gabriel Curio, and Klaus-Robert Muller (2002). “Classifying
single trial EEG: Towards brain computer interfacing”. In: Advances in neural information processing systems 1, pp. 157–164.
Blankertz, Benjamin et al. (2007). “The non-invasive Berlin brain–computer interface:
fast acquisition of effective performance in untrained subjects”. In: NeuroImage
37.2, pp. 539–550.
Borasio, Gian Domenico and Robert G Miller (2001). “Clinical characteristics and
management of ALS”. In: Seminars in neurology. Vol. 21. 02. Copyright c 2001
by Thieme Medical Publishers, Inc., 333 Seventh Avenue, New York, NY 10001,
USA. Tel.:+ 1 (212) 584-4662, pp. 155–166.

98

BIBLIOGRAPHY

Breitwieser, Christian et al. (2012). “Stability and distribution of steady-state somatosensory evoked potentials elicited by vibro-tactile stimulation”. In: Medical
& biological engineering & computing 50.4, pp. 347–357.
Carter, Cameron S et al. (1998). “Anterior cingulate cortex, error detection, and the
online monitoring of performance”. In: Science 280.5364, pp. 747–749.
Catalano, Manuel G et al. (2014). “Adaptive synergies for the design and control
of the Pisa/IIT SoftHand”. In: The International Journal of Robotics Research 33.5,
pp. 768–782.
Chatterjee, Aniruddha et al. (2007). “A brain-computer interface with vibrotactile
biofeedback for haptic information”. In: Journal of NeuroEngineering and Rehabilitation 4.1, p. 40.
Chaudhary, Ujwal, Niels Birbaumer, and Ander Ramos-Murguialday (2016). “Braincomputer interfaces for communication and rehabilitation”. In: Nature Reviews
Neurology 12.9, pp. 513–525.
Chavarriaga, Ricardo and José del R Millán (2010). “Learning from EEG error-related
potentials in noninvasive brain-computer interfaces”. In: IEEE transactions on
neural systems and rehabilitation engineering 18.4, pp. 381–388.
Chavarriaga, Ricardo et al. (2012). “Anticipation-and error-related EEG signals during realistic human-machine interaction: A study on visual and tactile feedback”.
In: Engineering in Medicine and Biology Society (EMBC), 2012 Annual International
Conference of the IEEE. Ieee, pp. 6723–6726.
Chavarriaga, Ricardo, Aleksander Sobolewski, and José del R Millán (2014). “Errare
machinale est: The use of error-related potentials in brain-machine interfaces.”
In: Frontiers in Neuroscience 8.
Chawla, Nitesh V et al. (2002). “SMOTE: synthetic minority over-sampling technique”. In: Journal of artificial intelligence research 16, pp. 321–357.
Chen, Shih-Ching et al. (2004). “Infrared-based communication augmentation system for people with multiple disabilities”. In: Disability and Rehabilitation 26.18,
pp. 1105–1109.
Choi, Inchul et al. (2017). “A systematic review of hybrid brain-computer interfaces:
Taxonomy and usability perspectives”. In: PloS one 12.4, e0176674.
Chou, Samuel M and Forbes H Norris (1993). “Issues & Opinions: Amyotrophic lateral sclerosis: Lower motor neuron disease spreading to upper motor neurons”.
In: Muscle & nerve 16.8, pp. 864–869.
Cipresso, Pietro et al. (2011). “The combined use of brain computer interface and
eye-tracking technology for cognitive assessment in amyotrophic lateral sclerosis”. In: Pervasive Computing Technologies for Healthcare (PervasiveHealth), 2011 5th
International Conference on. IEEE, pp. 320–324.
Danoczy, M et al. (2008). Brain2robot: a grasping robot arm controlled by gaze and asynchronous EEG BCI. na.
Di Mattia, Philip A, Francis Xavier Curran, and James Gips (2001). An eye control
teaching device for students without language expressive capacity: EagleEyes. Vol. 53.
Edwin Mellen Press.
Doble, Jennifer E et al. (2003). “Impairment, Activity, Participation, Life Satisfaction,
and Survival in Persons With Locked-In Syndrome for Over a Decade: FollowUp on a Previously Reported Cohort”. In: The Journal of head trauma rehabilitation
18.5, pp. 435–444.
Dobrea, Monica-Claudia and Dan Marius Dobrea (2009). “The selection of proper
discriminative cognitive tasks—A necessary prerequisite in high-quality BCI applications”. In: Applied Sciences in Biomedical and Communication Technologies, 2009.
ISABEL 2009. 2nd International Symposium on. IEEE, pp. 1–6.

BIBLIOGRAPHY

99

Donoghue, John P (2002). “Connecting cortex to machines: recent advances in brain
interfaces.” In: Nature neuroscience 5.11.
Duchowski, Andrew T (2002). “A breadth-first survey of eye-tracking applications”.
In: Behavior Research Methods, Instruments, & Computers 34.4, pp. 455–470.
Duvinage, Matthieu et al. (2013). “Performance of the Emotiv Epoc headset for P300based applications”. In: Biomedical engineering online 12.1, p. 56.
Dziemian, Sabine, William W Abbott, and A Aldo Faisal (2016). “Gaze-based teleprosthetic enables intuitive continuous control of complex robot arm use: Writing &
drawing”. In: Biomedical Robotics and Biomechatronics (BioRob), 2016 6th IEEE International Conference on. IEEE, pp. 1277–1282.
Ehrlich, Stefan and Gordon Cheng (2016). “A neuro-based method for detecting
context-dependent erroneous robot action”. In: Humanoid Robots (Humanoids),
2016 IEEE-RAS 16th International Conference on. IEEE, pp. 477–482.
Enzinger, Christian et al. (2008). “Brain motor system function in a patient with complete spinal cord injury following extensive brain–computer interface training”.
In: Experimental brain research 190.2, pp. 215–223.
Evans, D Gareth, Roger Drew, and Paul Blenkhorn (2000). “Controlling mouse pointer
position using an infrared head-operated joystick”. In: IEEE Transactions on rehabilitation engineering 8.1, pp. 107–117.
Falkenstein, Michael et al. (2000). “ERP components on reaction errors and their
functional significance: a tutorial”. In: Biological psychology 51.2, pp. 87–107.
Ferrez, P W and J d R Millán (2005). “You Are Wrong!—Automatic Detection of
Interaction Errors from Brain Waves”. In: Proceedings of the 19th international joint
conference on Artificial intelligence. EPFL-CONF-83269.
Ferrez, P W and José del R Millán (2008a). “Simultaneous real-time detection of motor imagery and error-related potentials for improved BCI accuracy”. In: Proceedings of the 4th international brain-computer interface workshop and training course.
CNBI-CONF-2008-004, pp. 197–202.
Ferrez, Pierre W and José del R Millán (2008b). “Error-related EEG potentials generated during simulated brain–computer interaction”. In: IEEE transactions on
biomedical engineering 55.3, pp. 923–929.
Gallegos-Ayala, Guillermo et al. (2014). “Brain communication in a completely lockedin patient using bedside near-infrared spectroscopy”. In: Neurology 82.21, pp. 1930–
1932.
Ganguly, Karunesh et al. (2011). “Reversible large-scale modification of cortical networks during neuroprosthetic control”. In: Nature neuroscience 14.5, pp. 662–667.
Golub, Matthew D et al. (2016). “Brain–computer interfaces for dissecting cognitive
processes underlying sensorimotor control”. In: Current opinion in neurobiology
37, pp. 53–58.
Gomez-Rodriguez, Manuel et al. (2011). “Closing the sensorimotor loop: haptic feedback facilitates decoding of motor imagery”. In: Journal of neural engineering 8.3,
p. 036005.
Gribble, Paul L et al. (2003). “Role of cocontraction in arm movement accuracy”. In:
Journal of neurophysiology 89.5, pp. 2396–2405.
Gryfe, P et al. (1996). “Freedom through a single switch: coping and communicating
with artificial ventilation”. In: Journal of the neurological sciences 139, pp. 132–133.
Henshaw, James, Wei Liu, and Daniela Romano (2014). “Problem Solving Using Hybrid Brain-Computer Interface Methods: a Review”. In: Cognitive Infocommunications (CogInfoCom), 2014 5th IEEE Conference on. IEEE, pp. 215–219.
Hochberg, Leigh R et al. (2006). “Neuronal ensemble control of prosthetic devices by
a human with tetraplegia”. In: Nature 442.7099, pp. 164–171.

100

BIBLIOGRAPHY

Hochberg, Leigh R et al. (2012). “Reach and grasp by people with tetraplegia using
a neurally controlled robotic arm”. In: Nature 485.7398, pp. 372–375.
Holroyd, Clay B and Michael GH Coles (2002). “The neural basis of human error
processing: reinforcement learning, dopamine, and the error-related negativity.”
In: Psychological review 109.4, p. 679.
Huang, Cheng-Ning, Chun-Han Chen, and Hung-Yuan Chung (2006). “Application
of facial electromyography in computer mouse access for people with disabilities”. In: Disability and Rehabilitation 28.4, pp. 231–237.
Hurtado-Rincón, J et al. (2014). “Motor imagery classification using feature relevance
analysis: An emotiv-based bci system”. In: Image, Signal Processing and Artificial
Vision (STSIVA), 2014 XIX Symposium on. IEEE, pp. 1–5.
Iturrate, Inaki, Luis Montesano, and Javier Minguez (2010a). “Robot reinforcement
learning using EEG-based reward signals”. In: Robotics and Automation (ICRA),
2010 IEEE International Conference on. IEEE, pp. 4822–4829.
— (2010b). “Single trial recognition of error-related potentials during observation
of robot operation”. In: Engineering in Medicine and Biology Society (EMBC), 2010
Annual International Conference of the IEEE. IEEE, pp. 4181–4184.
Iturrate, Inaki et al. (2012). “Latency correction of error potentials between different
experiments reduces calibration time for single-trial classification”. In: Engineering in Medicine and Biology Society (EMBC), 2012 Annual International Conference of
the IEEE. IEEE, pp. 3288–3291.
Iturrate, Iñaki, Jason Omedes, and Luis Montesano (2013). “Shared control of a robot
using EEG-based feedback signals”. In: Proceedings of the 2nd Workshop on Machine
Learning for Interactive Systems: Bridging the Gap Between Perception, Action and
Communication. ACM, pp. 45–50.
Iturrate, Iñaki et al. (2015). “Teaching brain-machine interfaces as an alternative paradigm
to neuroprosthetics control”. In: Scientific reports 5.
Jacob, Robert JK (1991). “The use of eye movements in human-computer interaction
techniques: what you look at is what you get”. In: ACM Transactions on Information Systems (TOIS) 9.2, pp. 152–169.
Jaeschke, Roman, Joel Singer, and Gordon H Guyatt (1990). “A comparison of sevenpoint and visual analogue scales: data from a randomized trial”. In: Controlled
clinical trials 11.1, pp. 43–51.
Jain, Siddarth et al. (2015). “Assistive robotic manipulation through shared autonomy and a body-machine interface”. In: Rehabilitation Robotics (ICORR), 2015
IEEE International Conference on. IEEE, pp. 526–531.
Jeunet, Camille et al. (2015). “Continuous tactile feedback for motor-imagery based
brain-computer interaction in a multitasking context”. In: Human-Computer Interaction. Springer, pp. 488–505.
Jiang, Hairong et al. (2013a). “3D joystick for robotic arm control by individuals with
high level spinal cord injuries”. In: Rehabilitation Robotics (ICORR), 2013 IEEE International Conference on. IEEE, pp. 1–5.
Jiang, Hairong, Juan P Wachs, and Bradley S Duerstock (2013b). “Integrated visionbased robotic arm interface for operators with upper limb mobility impairments”.
In: Rehabilitation Robotics (ICORR), 2013 IEEE International Conference on. IEEE,
pp. 1–6.
Kaczmarek, Kurt A et al. (1991). “Electrotactile and vibrotactile displays for sensory
substitution systems”. In: IEEE Transactions on Biomedical Engineering 38.1, pp. 1–
16.
Kamiya, Joseph (1969). “Operant control of the EEG alpha rhythm and some of its
reported effects on consciousness”. In: Alerted states of consciousness 489.

BIBLIOGRAPHY

101

Kennedy, Philip R et al. (2000). “Direct control of a computer from the human central
nervous system”. In: IEEE Transactions on rehabilitation engineering 8.2, pp. 198–
202.
Kim, Dae-Jin et al. (2012). “How autonomy impacts performance and satisfaction:
Results from a study with spinal cord injured subjects using an assistive robot”.
In: IEEE Transactions on Systems, Man, and Cybernetics-Part A: Systems and Humans
42.1, pp. 2–14.
Kim, Hyun K et al. (2006). “Continuous shared control for stabilizing reaching and
grasping with brain-machine interfaces”. In: IEEE Transactions on Biomedical Engineering 53.6, pp. 1164–1173.
King, Christine E et al. (2015). “The feasibility of a brain-computer interface functional electrical stimulation system for the restoration of overground walking
after paraplegia”. In: Journal of NeuroEngineering and Rehabilitation 12.1, p. 80.
Kos’ Myna, Nataliya and Franck Tarpin-Bernard (2013). “Evaluation and comparison of a multimodal combination of BCI paradigms and Eye-tracking in a gaming context”. In: IEEE Transactions on Computational Intelligence and AI in Games
(T-CIAIG), pp. 150–154.
Kübler, Andrea et al. (2001). “Brain-computer communication: self-regulation of slow
cortical potentials for verbal communication”. In: Archives of physical medicine and
rehabilitation 82.11, pp. 1533–1539.
Lancioni, Giulio E et al. (2005). “A new microswitch to enable a boy with minimal
motor behavior to control environmental stimulation with eye blinks”. In: Behavioral Interventions 20.2, pp. 147–153.
Lancioni, Giulio E et al. (2006). “Children with multiple disabilities and minimal
motor behavior using chin movements to operate microswitches to obtain environmental stimulation”. In: Research in Developmental Disabilities 27.3, pp. 290–
298.
Laureys, Steven et al. (2005). “The locked-in syndrome: what is it like to be conscious
but paralyzed and voiceless?” In: Progress in brain research 150, pp. 495–611.
Leeb, Robert, Hesam Sagha, Ricardo Chavarriaga, et al. (2010). “Multimodal fusion
of muscle and brain signals for a hybrid-BCI”. In: Engineering in Medicine and
Biology Society (EMBC), 2010 Annual International Conference of the IEEE. IEEE,
pp. 4343–4346.
Lehne, Moritz et al. (2009). “Error-related EEG patterns during tactile human-machine
interaction”. In: Affective Computing and Intelligent Interaction and Workshops, 2009.
ACII 2009. 3rd International Conference on. IEEE, pp. 1–9.
Li, Yuanqing et al. (2013). “A hybrid BCI system combining P300 and SSVEP and its
application to wheelchair control”. In: IEEE Transactions on Biomedical Engineering
60.11, pp. 3156–3166.
Lightbody, Gaye et al. (2010). “A user centred approach for developing brain-computer
interfaces”. In: Pervasive Computing Technologies for Healthcare (PervasiveHealth),
2010 4th International Conference on-NO PERMISSIONS. IEEE, pp. 1–8.
Llera, A, Vicenç Gómez, and Hilbert J Kappen (2012). “Adaptive classification on
brain-computer interfaces using reinforcement signals”. In: Neural Computation
24.11, pp. 2900–2923.
Llera, Alberto et al. (2011). “On the use of interaction error potentials for adaptive
brain computer interfaces”. In: Neural Networks 24.10, pp. 1120–1127.
Lotte, Fabien et al. (2007). “A review of classification algorithms for EEG-based
brain–computer interfaces”. In: Journal of neural engineering 4.2, R1.

102

BIBLIOGRAPHY

Lotte, Fabien, Laurent Bougrain, and Maureen Clerc (2015). “Electroencephalography (EEG)-Based Brain–Computer Interfaces”. In: Wiley Encyclopedia of Electrical
and Electronics Engineering.
Majaranta, Päivi and Kari-Jouko Räihä (2002). “Twenty years of eye typing: systems
and design issues”. In: Proceedings of the 2002 symposium on Eye tracking research
& applications. ACM, pp. 15–22.
Margaux, Perrin et al. (2012). “Objective and subjective evaluation of online error
correction during P300-based spelling”. In: Advances in Human-Computer Interaction 2012, p. 4.
Martinez-Leon, Juan-Antonio, Jose-Manuel Cano-Izquierdo, and Julio Ibarrola (2016).
“Are low cost Brain Computer Interface headsets ready for motor imagery applications?” In: Expert Systems with Applications 49, pp. 136–144.
McFarland, Dennis J et al. (1997). “Spatial filter selection for EEG-based communication”. In: Electroencephalography and clinical Neurophysiology 103.3, pp. 386–394.
Meng, Jianjun et al. (2016). “Noninvasive Electroencephalogram Based Control of a
Robotic Arm for Reach and Grasp Tasks”. In: Scientific Reports 6.
Milan, Jose del R and Jose M Carmena (2010). “Invasive or noninvasive: Understanding brain-machine interface technology [conversations in bme]”. In: IEEE
Engineering in Medicine and Biology Magazine 29.1, pp. 16–22.
Millán, J d R et al. (2010). “Combining brain–computer interfaces and assistive technologies: state-of-the-art and challenges”. In: Frontiers in neuroscience 4.
Millán, J del R et al. (2009). “Asynchronous non-invasive brain-actuated control of
an intelligent wheelchair”. In: Engineering in Medicine and Biology Society, 2009.
EMBC 2009. Annual International Conference of the IEEE. IEEE, pp. 3361–3364.
Millan, Jd R et al. (2004). “Noninvasive brain-actuated control of a mobile robot by
human EEG”. In: IEEE Transactions on biomedical Engineering 51.6, pp. 1026–1033.
Millán, José del R (2002). Brain-computer interfaces. Tech. rep. The MIT Press.
Mladenov, T, Kunsu Kim, and Saeid Nooshabadi (2012). “Accurate motor imagery
based dry electrode brain-computer interface system for consumer applications”.
In: Consumer Electronics (ISCE), 2012 IEEE 16th International Symposium on. IEEE,
pp. 1–4.
Moghimi, Saba et al. (2013). “A review of EEG-based brain-computer interfaces as
access pathways for individuals with severe disabilities”. In: Assistive Technology
25.2, pp. 99–110.
Müller-Putz, Gernot et al. (2015). “Towards noninvasive hybrid brain–computer interfaces: framework, practice, clinical application, and beyond”. In: Proceedings of
the IEEE 103.6, pp. 926–943.
Müller-Putz, Gernot R et al. (2005a). “EEG-based neuroprosthesis control: a step towards clinical practice”. In: Neuroscience letters 382.1, pp. 169–174.
Müller-Putz, Gernot R et al. (2005b). “Steady-state visual evoked potential (SSVEP)based communication: impact of harmonic frequency components”. In: Journal of
neural engineering 2.4, p. 123.
Murguialday, A Ramos et al. (2011). “Transition from the locked in to the completely
locked-in state: a physiological analysis”. In: Clinical Neurophysiology 122.5, pp. 925–
933.
Neuper, Christa, Michael Wörtz, and Gert Pfurtscheller (2006). “ERD/ERS patterns
reflecting sensorimotor activation and deactivation”. In: Progress in brain research
159, pp. 211–222.
Nguyen, Jordan S, Steven W Su, and Hung T Nguyen (2013). “Experimental study
on a smart wheelchair system using a combination of stereoscopic and spherical

BIBLIOGRAPHY

103

vision”. In: Engineering in Medicine and Biology Society (EMBC), 2013 35th Annual
International Conference of the IEEE. IEEE, pp. 4597–4600.
Nijboer, Femke et al. (2008). “An auditory brain–computer interface (BCI)”. In: Journal of neuroscience methods 167.1, pp. 43–50.
Omedes, Jason et al. (2013). “Using frequency-domain features for the generalization
of EEG error-related potentials among different tasks”. In: Engineering in Medicine
and Biology Society (EMBC), 2013 35th Annual International Conference of the IEEE.
IEEE, pp. 5263–5266.
Ouyang, Wenjia, Kelly Cashion, and Vijayan K Asari (2013). “Electroencephelograph
based brain machine interface for controlling a robotic arm”. In: Applied Imagery
Pattern Recognition Workshop (AIPR): Sensing for Control and Augmentation, 2013
IEEE. IEEE, pp. 1–7.
Palankar, Mayur et al. (2009). “Control of a 9-DoF wheelchair-mounted robotic arm
system using a P300 brain computer interface: Initial experiments”. In: Robotics
and Biomimetics, 2008. ROBIO 2008. IEEE International Conference on. IEEE, pp. 348–
353.
Perring, Stephen et al. (2003). “A novel accelerometer tilt switch device for switch
actuation in the patient with profound disability”. In: Archives of physical medicine
and rehabilitation 84.6, pp. 921–923.
Petit, Damien et al. (2014). “Navigation assistance for a bci-controlled humanoid
robot”. In: Cyber Technology in Automation, Control, and Intelligent Systems (CYBER), 2014 IEEE 4th Annual International Conference on. IEEE, pp. 246–251.
Pfurtscheller, Gert et al. (2000). “Brain oscillations control hand orthosis in a tetraplegic”.
In: Neuroscience letters 292.3, pp. 211–214.
Pfurtscheller, Gert et al. (2003). “‘Thought’–control of functional electrical stimulation to restore hand grasp in a patient with tetraplegia”. In: Neuroscience letters
351.1, pp. 33–36.
Polich, John (2007). “Updating P300: an integrative theory of P3a and P3b”. In: Clinical neurophysiology 118.10, pp. 2128–2148.
Poole, Alex and Linden J Ball (2006). “Eye tracking in HCI and usability research”.
In: Encyclopedia of human computer interaction 1, pp. 211–219.
Ramadan, Rabie A and Athanasios V Vasilakos (2017). “Brain computer interface:
control signals review”. In: Neurocomputing 223, pp. 26–44.
Ranky, GN and S Adamovich (2010). “Analysis of a commercial EEG device for the
control of a robot arm”. In: Bioengineering Conference, Proceedings of the 2010 IEEE
36th Annual Northeast. IEEE, pp. 1–2.
Salazar-Gomez, Andres F et al. (2017). “Correcting robot mistakes in real time using
eeg signals”. In: ICRA. IEEE.
Schiatti, Lucia et al. (2016). “Mutual information-based feature selection for low-cost
BCIs based on motor imagery”. In: Engineering in Medicine and Biology Society
(EMBC), 2016 IEEE 38th Annual International Conference of the. IEEE, pp. 2772–
2775.
Schiatti, Lucia et al. (2017). “Soft brain-machine interfaces for assistive robotics: A
novel control approach”. In: Rehabilitation Robotics (ICORR), 2017 International
Conference on. IEEE, pp. 863–869.
Schie, Hein T van et al. (2004). “Modulation of activity in medial frontal and motor
cortices during error observation”. In: Nature neuroscience 7.5, pp. 549–554.
Schlögl, Alois et al. (2005). “Characterization of four-class motor imagery EEG data
for the BCI-competition 2005”. In: Journal of neural engineering 2.4, p. L14.
Schwartz, Andrew B (2004). “Cortical neural prosthetics”. In: Annu. Rev. Neurosci.
27, pp. 487–507.

104

BIBLIOGRAPHY

Sellers, Eric W, Theresa M Vaughan, and Jonathan R Wolpaw (2010). “A brain-computer
interface for long-term independent home use”. In: Amyotrophic lateral sclerosis
11.5, pp. 449–455.
Shenoy, Pradeep et al. (2006). “Towards adaptive classification for BCI”. In: Journal
of neural engineering 3.1, R13.
Spataro, R et al. (2014). “The eye-tracking computer device for communication in
amyotrophic lateral sclerosis”. In: Acta Neurologica Scandinavica 130.1, pp. 40–45.
Stytsenko, Kirill, Evaldas Jablonskis, and Cosima Prahm (2011). “Evaluation of consumer EEG device Emotiv EPOC”. In: MEi: CogSci Conference 2011, Ljubljana.
Surakka, Veikko, Marko Illi, and Poika Isokoski (2004). “Gazing and frowning as a
new human–computer interaction technique”. In: ACM Transactions on Applied
Perception (TAP) 1.1, pp. 40–56.
Sutton, Richard S and Andrew G Barto (1998). Reinforcement learning: An introduction.
Vol. 1. 1. MIT press Cambridge.
Szafir, Daniel and Bilge Mutlu (2012). “Pay attention!: designing adaptive agents that
monitor and improve user engagement”. In: Proceedings of the SIGCHI Conference
on Human Factors in Computing Systems. ACM, pp. 11–20.
Tahboub, Karim A (2001). “A semi-autonomous reactive control architecture”. In:
Journal of Intelligent & Robotic Systems 32.4, pp. 445–459.
Tai, Kelly, Stefanie Blain, and Tom Chau (2008). “A review of emerging access technologies for individuals with severe motor impairments”. In: Assistive Technology
20.4, pp. 204–221.
Tessadori, J. et al. (2017). “Does tactile feedback enhance single-trial detection of
error-related eeg potentials?” In: 2017 IEEE International Conference on Systems,
Man, and Cybernetics (SMC), pp. 1417–1422. DOI: 10.1109/SMC.2017.8122812.
Thorns, Johannes et al. (2010). “Movement initiation and inhibition are impaired in
amyotrophic lateral sclerosis”. In: Experimental neurology 224.2, pp. 389–394.
Tonin, Luca et al. (2010). “The role of shared-control in BCI-based telepresence”. In:
Systems Man and Cybernetics (SMC), 2010 IEEE International Conference on. IEEE,
pp. 1462–1466.
Tsimpiris, Alkiviadis, Ioannis Vlachos, and Dimitris Kugiumtzis (2012). “Nearest
neighbor estimate of conditional mutual information in feature selection”. In:
Expert Systems with Applications 39.16, pp. 12697–12708.
Tsui, Katherine M et al. (2008). “Survey of domain-specific performance measures
in assistive robotic technology”. In: Proceedings of the 8th Workshop on Performance
Metrics for Intelligent Systems. ACM, pp. 116–123.
Tudor, Mario, Lorainne Tudor, and Katarina Ivana Tudor (2005). “Hans Berger (18731941)–the history of electroencephalography”. In: Acta medica Croatica: casopis
Hravatske akademije medicinskih znanosti 59.4, pp. 307–313.
Vanhooydonck, Dirk et al. (2003). “Shared control for intelligent wheelchairs: an implicit estimation of the user intention”. In: Proceedings of the 1st international workshop on advances in service robotics (ASER’03), pp. 176–182.
Vidal, Jacques J (1973). “Toward direct brain-computer communication”. In: Annual
review of Biophysics and Bioengineering 2.1, pp. 157–180.
Vidaurre, Carmen et al. (2009). “Time domain parameters as a feature for EEG-based
brain–computer interfaces”. In: Neural Networks 22.9, pp. 1313–1319.
Vidaurre, Carmen and Benjamin Blankertz (2010). “Towards a cure for BCI illiteracy”. In: Brain topography 23.2, pp. 194–198.
Vilimek, Roman and Thorsten O Zander (2009). “BC (eye): Combining eye-gaze input with brain-computer interaction”. In: Universal Access in Human-Computer

BIBLIOGRAPHY

105

Interaction. Intelligent and Ubiquitous Interaction Environments. Springer, pp. 593–
602.
Vogel, Jörn et al. (2015). “An assistive decision-and-control architecture for forcesensitive hand–arm systems driven by human–machine interfaces”. In: The International Journal of Robotics Research 34.6, pp. 763–780.
Wang, Haofei et al. (2015). “Hybrid gaze/EEG brain computer interface for robot
arm control on a pick and place task”. In: Engineering in Medicine and Biology Society (EMBC), 2015 37th Annual International Conference of the IEEE. IEEE, pp. 1476–
1479.
Wolpaw, Jonathan R et al. (1998). “EEG-based communication: improved accuracy
by response verification”. In: IEEE transactions on Rehabilitation Engineering 6.3,
pp. 326–333.
Wolpaw, Jonathan R et al. (2002). “Brain–computer interfaces for communication
and control”. In: Clinical neurophysiology 113.6, pp. 767–791.
Wolpaw, Jonathan R and Dennis J McFarland (2004). “Control of a two-dimensional
movement signal by a noninvasive brain-computer interface in humans”. In: Proceedings of the National Academy of Sciences of the United States of America 101.51,
pp. 17849–17854.
Zhu, Danhua et al. (2010). “A survey of stimulation methods used in SSVEP-based
BCIs”. In: Computational intelligence and neuroscience 2010, p. 1.

